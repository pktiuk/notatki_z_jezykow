{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Ma\u0142y zbi\u00f3r notatek","text":"<p>Ta strona to jest m\u00f3j osobisty zbi\u00f3r r\u00f3\u017cnych notatek.</p> <p>Jej repozytorium znajduje si\u0119 tutaj, zach\u0119cam do PR-\u00f3w (zw\u0142aszcza jak znajdziecie jakie\u015b b\u0142\u0119dy)</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/0_wstep_teoretyczny/","title":"Wst\u0119p teoretyczny","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/0_wstep_teoretyczny/#czym-jest-architektura","title":"Czym jest architektura?","text":"<p>Architektura oprogramowania jest og\u00f3lnym opisem organizacji aplikacji (High level design HLD).</p> <p>Obejmuje ona takie aspekty jak:</p> <ul> <li>Charakterystyki architektoniczne - opisuj\u0105 jakie cechy systemu musz\u0105 by\u0107 brane pod uwag\u0119, takie jak testowalno\u015b\u0107, rozszerzalno\u015b\u0107, niezawodno\u015b\u0107</li> <li>Decyzje architektoniczne</li> <li>Komponenty logiczne</li> <li>Styl architektoniczny - opisuje w jaki spos\u00f3b dany system powinien by\u0107 zbudowany/dzia\u0142a\u0107. Najcz\u0119\u015bciej polega na okre\u015bleniu danego typu takiego jak np: monolit, mikroserwisy, system zdarzeniowy etc.</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/0_wstep_teoretyczny/#architektura-hld-a-design-lld","title":"Architektura (HLD) a Design (LLD)","text":"<p>W przyk\u0142adowej aplikacji bankowej architektura wysokopoziomowa obejmuje takie tematy jak to, w jaki spos\u00f3b klient wymienia si\u0119 danymi z serwerem, jak bazy danych wymieniaj\u0105 si\u0119 i zapisuj\u0105 dane etc. S\u0105 to aspekty wysokopoziomowe na og\u00f3\u0142 nie zwi\u0105zane nawet z wybranymi j\u0119zykami.  </p> <p>Nie obejmuje za\u015b ona takich temat\u00f3w jak projekt interfejsu, wykorzystywane wzorce projektowe, czy te\u017c styl pisania kodu. (te aspekty to Low Level Design LLD). link LLD vs HLD. </p> <p>R\u00f3\u017cnice te mo\u017cna por\u00f3wna\u0107 do takich rzeczy jak strategia vs taktyka, czy te\u017c struktura budynku vs wygl\u0105d, og\u00f3\u0142 i szczeg\u00f3\u0142.</p> <p>Przyk\u0142adowym narz\u0119dziem u\u017cywanym przy LLD s\u0105 diagramy klas UML, za\u015b przy HLD s\u0105 to diagramy architektoniczne (pokazuj\u0105ce jakie serwisy maj\u0105 gada\u0107 ze sob\u0105 i kt\u00f3re s\u0105 spi\u0119te z jakimi bazami danych).   </p> <p>Cz\u0119sto zagadnienia architektoniczne nie mog\u0105 by\u0107 \u0142atwo przypisane do jednej z tych klas, poniewa\u017c zaz\u0119biaj\u0105 si\u0119 z wieloma poziomami. M\u00f3wimy tutaj o takich decyzjach jak:</p> <ul> <li>wyb\u00f3r framweorka dla interfejsu (wp\u0142ywa na organizacj\u0119 kodu, ale te\u017c mo\u017ce zmienia\u0107 spos\u00f3b komunikacji z innymi elementami)</li> <li>rozdzielanie modu\u0142\u00f3w na mniejsze cz\u0119\u015bci (mo\u017ce wynika\u0107 z nadmiernego rozrostu, co zar\u00f3wno wp\u0142ywa na codebase jak i na to jakie s\u0105 zadania danej cz\u0119\u015bci)</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/0_wstep_teoretyczny/#charakterystyki-architektoniczne","title":"Charakterystyki architektoniczne","text":"<p>Czyli w skr\u00f3cie co tw\u00f3j system musi umie\u0107 i czego od niego wymagamy. Ich okre\u015blenie jest jednym z pierwszych krok\u00f3w pracy nad przygotowywaniem systemu. (proces ich zbierania jest opisany tutaj)</p> <p>Charakterystyki te mo\u017cna tak\u017ce okre\u015bla\u0107 mianem wymaga\u0144 niefunkcjonalnych, b\u0105d\u017a wymaga\u0144 jako\u015bciowych. Do charakterystyk mo\u017cna zaliczy\u0107 takie chechy jak testowalno\u015b\u0107, skalowalno\u015b\u0107, wydajno\u015b\u0107, modularno\u015b\u0107 etc. (jest tego do\u015b\u0107 du\u017co).</p> <p>Ze wzgl\u0119du na mnogo\u015b\u0107 opcji warto podzieli\u0107 je na kategorie. (jest to do\u015b\u0107 lu\u017any podzia\u0142)</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/0_wstep_teoretyczny/#charakterystyki-procesowe","title":"Charakterystyki procesowe","text":"<p>S\u0105 to cechy b\u0119d\u0105ce cz\u0119sto na styku HLD i LLD. WI\u0105\u017c\u0105 si\u0119 one cz\u0119sto z tym, jak budowane jest dane oprogramowanie.</p> <p>Mamy tutaj:</p> <ul> <li>Modularno\u015b\u0107/Modu\u0142owo\u015b\u0107 (modularity) - jak bardzo oprogramowanie jest podzielone na mniejsze fragmenty. Wp\u0142ywa ona na organizacj\u0119 kodu, cz\u0119sto tek\u017ce na jego reu\u017cywalno\u015b\u0107.</li> <li>Testowalno\u015b\u0107 (testability) - jak \u0142atwo jest testowa\u0107 system oraz uruchamia\u0107 na nim r\u00f3\u017cne rodzaje test\u00f3w (jednostkowych, integracyjnych, akceptacyjnych etc.).</li> <li>Rozszerzalno\u015b\u0107 - jak \u0142atwo jest deweloperom dodawa\u0107 nowe funkcjonalno\u015bci i rozszerza\u0107 system. Obejmuje to bardzo wiele aspekt\u00f3w takich jak standardy pisania, podzia\u0142 na modu\u0142y, testowalno\u015b\u0107, spos\u00f3b zarz\u0105dzania kodem etc.</li> <li>Deployowalno\u015b\u0107/Wdra\u017calno\u015b\u0107 - jak \u0142atwo jest wdro\u017cy\u0107 dany system</li> <li>Zwinno\u015b\u0107 (agility) - mo\u017cliwo\u015b\u0107 szybkiego reagowania i wprowadzania zmian w systemie (wynika to z architektury (testowalno\u015b\u0107, wdra\u017calno\u015b\u0107, utrzymywalno\u015bci), ale tak\u017ce z procedur, sposobu zarz\u0105dzania zespo\u0142em etc.)</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/0_wstep_teoretyczny/#charakterystyki-strukturalne","title":"Charakterystyki strukturalne","text":"<p>Opisuj\u0105 one wewn\u0119trzn\u0105 struktur\u0119 systemu</p> <ul> <li>Bezpiecze\u0144stwo systemu</li> <li>utrzymywalno\u015b\u0107 (maintainability) - jak \u0142atwo jest deweloperom i architektom wprowadza\u0107 zmiany i naprawia\u0107 b\u0142\u0119dy</li> <li>przeno\u015bno\u015b\u0107 (portability) - jak \u0142atwo jest wrzuci\u0107/u\u017cywa\u0107 systemu na wielu platformach (windows, Linux, MacOS, Android, Embedded...)</li> <li>lokalizowalno\u015b\u0107 - jak \u0142atwo jest doda\u0107 i utrzyma\u0107 wsparcie dla wielu jezyk\u00f3w</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/0_wstep_teoretyczny/#wymagania-operacyjne","title":"Wymagania operacyjne","text":"<p>Charakterystyki opisuj\u0105ce jak wsp\u00f3\u0142pracuje si\u0119 z dzia\u0142aj\u0105cym systemem.</p> <ul> <li>dost\u0119pno\u015b\u0107 (availability) - jaka jest procentowa czasowa dost\u0119\u00feno\u015b\u0107 systemu (np. 99,99% czasu)</li> <li>recoverability - jak szybko system jest w stanie wr\u00f3ci\u0107 do stanu u\u017cywalno\u015bci po awarii</li> <li>niezawodno\u015b\u0107 (robustness) - jak dobrze system radzi sobie z warunkami brzegowymi, obs\u0142ug\u0105 b\u0142\u0119d\u00f3w, problemami ze prz\u0119tem, po\u0142\u0105czeniem sieciowym etc.</li> <li>wydajno\u015b\u0107 - jest to do\u015b\u0107 og\u00f3lne okre\u015blenie po\u017ce ono \u0142\u0105czy\u0107 si\u0119 z takimi poj\u0119ciami jak op\u00f3\u017anienia, p\u0142ynno\u015b\u0107, czy te\u017c wykorzytanie dost\u0119\u00fenych zasob\u00f3w sprz\u0119towych.</li> <li>skalowalno\u015b\u0107 - Jak sprawnie jeste\u015bmy w stanie skalowa\u0107 nasz system wraz z rozrostem bazy uzytkownik\u00f3w</li> <li>elastyczno\u015b\u0107 - (podobnie do skalowalno\u015bci) obejmuje mozliwo\u015b\u0107 dynamicznej adaptacji do nagle zmieniaj\u0105cego si\u0119 nat\u0119\u017cenia ruchu w serwisie. (Na przyk\u0142ad zapisy na lektoraty na uczelni) (tzw. traffic spike)</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/0_wstep_teoretyczny/#inne","title":"Inne","text":"<ul> <li>bezpiecze\u0144stwo danych - jak zabezpiecznone s\u0105 dane przechowywane w systemie, czy s\u0105 zaszyfrowane, czy u\u017cywane End2End encryption etc.</li> <li>zgodno\u015b\u0107 z przepisami - zgodno\u015b\u0107 z RODO, z ustawami dotycz\u0105cymi przep\u0142ywu danych pomi\u0119dzy EU, a innymi krajami, przestrzeganie licencji oprogramowania etc.</li> <li>prywatno\u015b\u0107 - co si\u0119 mo\u017ce dzia\u0107 z danymi u\u017cytkownik\u00f3w</li> <li>accessibility - czy aplikacja jest dost\u0119pna/czytelna dla os\u00f3b z niepe\u0142nosprawno\u015bciami</li> <li>autentykacja autoryzacja - jak zamierzamy obs\u0142ugiwa\u0107 logowanie do systemu, jak sprawdzamy kto jest kim etc.</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/1_podstawowe%20regu%C5%82y/","title":"Regu\u0142y wytwarzania oprogramowania i inne skr\u00f3towce","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/1_podstawowe%20regu%C5%82y/#najwazniejsze-zasady-ktorymi-warto-sie-kierowac","title":"Najwa\u017cniejsze zasady, kt\u00f3rymi warto si\u0119 kierowa\u0107","text":"<p>Bardzo dobry artyku\u0142 o tym link</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/1_podstawowe%20regu%C5%82y/#wiecej-madrych-skrotowcow","title":"Wi\u0119cej m\u0105drych skr\u00f3towc\u00f3w","text":"<p>DRY - Don't Repeat Yourself. Nie powtarzaj si\u0119. Je\u015bli co\u015b jest powtarzane to warto to wydzieli\u0107 do osobnej funkcji.</p> <p>KISS - Keep It Simple, Stupid. Trzymaj to proste. Im prostszy kod tym lepiej.</p> <p>YAGNI - You Aren't Gonna Need It. Nie r\u00f3b rzeczy, kt\u00f3re nie s\u0105 potrzebne. Nie dodawaj funkcjonalno\u015bci, kt\u00f3re nie b\u0119d\u0105 przez ciebie wykorzystywane.</p> <p>SOLID - pi\u0119\u0107 zasad programowania obiektowego:</p> <ul> <li>S - Single Responsibility Principle. Ka\u017cda klasa powinna mie\u0107 jedn\u0105 odpowiedzialno\u015b\u0107.</li> <li>O - Open/Closed Principle. Kod powinien by\u0107 otwarty na rozszerzenia, ale zamkni\u0119ty na modyfikacje.</li> <li>L - Liskov Substitution Principle. Obiekty klas dziedzicz\u0105cych powinny by\u0107 zast\u0119powalne przez obiekty klas bazowych.</li> <li>I - Interface Segregation Principle. Klienty nie powinny by\u0107 zmuszane do implementacji interfejs\u00f3w, kt\u00f3rych nie u\u017cywaj\u0105.</li> <li>D - Dependency Inversion Principle. Modu\u0142y wysokiego poziomu nie powinny zale\u017ce\u0107 od modu\u0142\u00f3w niskiego poziomu. Oba powinny zale\u017ce\u0107 od abstrakcji. Detale nie powinny zale\u017ce\u0107 od abstrakcji. Abstrakcje powinny zale\u017ce\u0107 od detali.</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/1_podstawowe%20regu%C5%82y/#zasady-w-architekturze","title":"Zasady w architekturze","text":"<p>Everything in software architecture is a trade-off</p> <p>W architekturze do\u015b\u0107 rzadko mo\u017cna stosowa\u0107 si\u0119 do og\u00f3lnie zdefiniowanych najlepszych praktyk. Wszystko zale\u017cy od konkretnego projektu i jego kontekstu. Ka\u017cda decyzja architektoniczna wi\u0105\u017ce si\u0119 z kompromisem (prostota vs wydajno\u015b\u0107, rozszerzalno\u015b\u0107 vs bezpiecze\u0144stwo etc.). </p> <p>Why is more important than how.</p> <p>W architekturze najwa\u017cniejszym kawa\u0142kiem wiedzy i dokumentacji dotycz\u0105cym obecnych system\u00f3w jest nie tyle to, jak, co\u015b zosta\u0142o zrobione, lecz dlaczego. Tylko decyzje wraz z ich pe\u0142nym kontekstem mog\u0105 by\u0107 p\u00f3\u017aniej z bezpieczny spos\u00f3b zrewidowane. W zwi\u0105zku z tym warto przygotowywa\u0107 sobie ADR. link</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/1_podstawowe%20regu%C5%82y/#narzedzia-dla-architektury","title":"Narz\u0119dzia dla architektury","text":"<p>Warto najpierw przechyta\u0107 te artyku\u0142y:</p> <p>Software architecture diagrams - which tool should we use?  Visio, draw.io, LucidChart, Gliffy, etc - not recommended for software architecture diagrams</p> <p>Do modelowania architektury mo\u017cna u\u017cywa\u0107 r\u00f3\u017cnych typ\u00f3w narz\u0119dzi.</p> <p>Tekstowych, kt\u00f3re opisuj\u0105 diagramy, kt\u00f3re mo\u017cemy potem wygenerowa\u0107:</p> <ul> <li>mermaid</li> <li>PlantUML</li> <li>Structurizr DSL - opisujemy struktur\u0119 raz a potem mo\u017cemy wygenerowa\u0107 wiele typ\u00f3w diagram\u00f3w dla niej przyk\u0142ad</li> </ul> <p>Graficznych, gdzie r\u0119cznie ustawiamy bloczki</p> <ul> <li>draw.io/ diagrams.net</li> <li>visio</li> <li>Gliffy</li> <li>ExcaliDraw</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/2_prace_koncepcyjne/","title":"Prace koncepcyjne - opis systemu","text":"<p>Przed rozpocz\u0119ciem prac nad systemem, a nawed przed rozpocz\u0119ciem projektowania systemu warto dok\u0142adnie zdefiniowa\u0107 jaki system zamierzamy zbudowa\u0107.</p> <p>Prace takie zaczyna si\u0119 od rozm\u00f3w z klientami/u\u017cytkownikami i rozpisania kilku dokument\u00f3w takich jak SRS (Software Requirement Specification) lub URS (User Requirement Specification)</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/2_prace_koncepcyjne/#podstawowe-pojecia","title":"Podstawowe poj\u0119cia","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/2_prace_koncepcyjne/#user-stories","title":"User stories","text":"<p>Jest to jedna z najbardziej \u0142opatologicznych i intuicyjnych metod opisuj\u0105cych wymagania. Polega ona na zebraniu wymaga\u0144 w postaci kr\u00f3tkich historyjek opisuj\u0105cych sytuacje z perspektywy u\u017cytkownika.</p> <p>Najcz\u0119\u015bciej prezentuj\u0105 si\u0119 w nast\u0119puj\u0105cy spos\u00f3b:</p> <p>JAKO kto\u015b CHCIA\u0141BYM co\u015btam zrobi\u0107 ABY opis powodu.</p> <p>Czyli np:  </p> <ul> <li>Jako marketingowiec chcia\u0142bym, \u017ceby u\u017cytkownicy rejestrowali si\u0119 w serwisie, po to, abym m\u00f3g\u0142 potem ich \u015bledzi\u0107 i podnosi\u0107 skuteczno\u015b\u0107 sprzeda\u017cy</li> <li>Jako u\u017cytkownik Wikipedii chc\u0119 edytowa\u0107 artyku\u0142, \u017ceby dopisa\u0107 lepszy przyk\u0142ad ilustruj\u0105cy artyku\u0142.</li> <li>Jako klient banku chc\u0119 zobaczy\u0107 list\u0119 ostatnich transakcji, \u017ceby kontrolowa\u0107 swoje wydatki.</li> <li>Jako w\u0142a\u015bciciel salonu fryzjerskiego chc\u0119 opublikowa\u0107 reklam\u0119 w internecie, \u017ceby przyci\u0105gn\u0105\u0107 wi\u0119cej klient\u00f3w.</li> </ul> <p>W historyjkach opisujemy problemy, a niekoniecznie same rozwi\u0105zania. Unikamy jakichkolwiek szczeg\u00f3\u0142\u00f3w technicznych.</p> <p>Przyk\u0142ady niew\u0142a\u015bciwych historyjek:</p> <ul> <li><code>Jako u\u017cytkownik chc\u0119 si\u0119 zarejestrowa\u0107, aby m\u00f3c korzysta\u0107 z portalu</code> - u\u017cytkownik nie chce rejestrowa\u0107 si\u0119 w portalu, bo to samo w sobie nie przynosi mu warto\u015bci. On chce korzysta\u0107</li> <li><code>Jako klient banku potrzebuj\u0119 listy transakcji, \u017ceby kontrolowa\u0107 swoje wydatki</code> - tutaj niepotrzebnie zdefiniowane jest rozwi\u0105zanie problemu. Cz\u0119sto istnieje wiele sposob\u00f3w na rozwi\u0105zanie wybranych problem\u00f3w, z tego powodu warto opisa\u0107 sam problem, aby deweloperzy mogli samodzielnie pomy\u015ble\u0107 nad najlepszym rozwi\u0105zaniem. (Mo\u017ce zamiast listy transakcji lepsze by\u0142oby podsumowanie transakcji, b\u0105d\u017a pogrupowanie ich typami.)</li> <li><code>Jako product Owner chc\u0119 aby zmieniono interfejs na bardziej intuicyjny</code> - opisujemy co ma by\u0107 zmienione, a nie jaka jst potrzeba/jaki jest problem</li> </ul> Rozwi\u0105zania a wymagania <p>Niezwykle wa\u017cne jest to, aby wydoby\u0107 z klienta to jakie s\u0105 jego problemy, a nie to jak on chcia\u0142by je sobie rozwi\u0105za\u0107, poniewa\u017c znacznie ogranicza to zespo\u0142owi mo\u017cliwo\u015b\u0107 dobrania optymalnego rozwi\u0105zania. Wyobra\u017amy sobie, \u017ce mamy klienta, kt\u00f3ry zleca nam zrobienie odtwarzacza muzyki i w wymaganiach pisze <code>odtwarzacz ma przyciski do przewijania, podg\u0142a\u015bniania i pauzowania muzyki</code>. Takie zdefiniowanie wymaga\u0144 od razu narzuca zespo\u0142owi kszta\u0142t urz\u0105dzania, co poskutkowa\u0107 mo\u017ce odtwarzaczem pe\u0142nym przycisk\u00f3w przypominaj\u0105cym bardziej pilot do telewizora. Prawdziwe wymaganie, kt\u00f3re ma na my\u015bli klient brzmi pewnie w ten spos\u00f3b: <code>u\u017cytkownik mo\u017ce wygodnie przewija\u0107 i pauzowac muzyk\u0119</code>. Takie wymaganie pozwala designerom pomy\u015ble\u0107 nad alternatywnymi opcjami, jak np u\u017cycie do tego celu pokr\u0119te\u0142 ekranu g\u0142osowego, gest\u00f3w b\u0105d\u017a jeszcze bardziej oryginalnych sposob\u00f3w.  Dlatego warto zawsze dopytywa\u0107 klienta dlaczego powumy\u015bla\u0142 sobie akurat takie wymagania. Nie b\u00f3jmy si\u0119 u\u017cywa\u0107 s\u0142owa <code>Dlaczego?</code></p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/2_prace_koncepcyjne/#wymagania-funkcjonalne-funkcjonalnosci","title":"Wymagania funkcjonalne (funkcjonalno\u015bci)","text":"<p>Opisuj\u0105 one funkcjonalno\u015bci systemu.</p> <p>Przyk\u0142ady:</p> <ul> <li>System powinien prowadzi\u0107 indywidualne konta klient\u00f3w banku</li> <li>System powinien ksi\u0119gowa\u0107 wszystkie wp\u0142aty i wyp\u0142aty na koncie klienta</li> <li>System powinien umo\u017cliwia\u0107 w\u0142a\u015bcicielowi konta wykonanie przelewu na inne rachunki bankowe</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/2_prace_koncepcyjne/#wymagania-niefunkcjonalne","title":"Wymagania niefunkcjonalne","text":"<p>Innymi s\u0142owy s\u0105 to wymagania jako\u015bciowe. Opisuj\u0105 one ograniczenia b\u0105d\u017a wymagania stawiana przed systemem.</p> <p>Ograniczenia jakim moze podlega\u0107 tworzenie i dzia\u0142anie systemu. (cz\u0119sto s\u0105 to s\u0142owa ko\u0144cz\u0105ce si\u0119 na <code>o\u015b\u0107</code>):</p> <ul> <li>niezawodno\u015b\u0107</li> <li>wydajno\u015b\u0107</li> <li>piel\u0119gnowalno\u015b\u0107</li> <li>przeno\u015bno\u015b\u0107</li> <li>bezpiecze\u0144stwo</li> <li>zgodno\u015b\u0107 ze standardami (np. kompatybilno\u015b\u0107 z jakim\u015b konkretnym API)</li> <li>obserwowalno\u015b\u0107 (mo\u017cliwo\u015b\u0107 zebrania r\u00f3\u017cnorakich metryk i log\u00f3w z ca\u0142ego systemu)</li> </ul> <p>(wi\u0119ksz\u0105 list\u0119 mo\u017cna znale\u017a\u0107 na stronie iso 25000)</p> <p>Np.:</p> <ul> <li>System powinien obs\u0142ugiwa\u0107 nie mniej ni\u017c 300000 kont</li> <li>\u015aredni czas wykonania transakcji na koncie klienta nie powinien przekracza\u0107 2ms, a \u017cadna transakcja 10ms</li> </ul> <p>Wi\u0119cej o wymaganiach niefunkcjonalnych mo\u017cna znale\u017a\u0107 w dedykowanym rozdziale tutaj</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/2_prace_koncepcyjne/#dokumentowanie-decyzji-adr","title":"Dokumentowanie decyzji (ADR)","text":"<p>ADR (Architectural Decission Record) jest jednym z wa\u017cniejszych kawa\u0142k\u00f3w dokumentacji powstaj\u0105cych przy podejmowaniu decyzji architektonicznych. Jest to na og\u00f3\u0142 rejestr dokument\u00f3w opisuj\u0105cych dane decyzje podj\u0119te przy planowaniu architektury. </p> <p>Ka\u017cdy dokument ADR powinien zawiera\u0107 takie elementy jak:</p> <ul> <li>Tytu\u0142 - kr\u00f3tki opic czego dotyczy</li> <li>Status - najcz\u0119stsze statusy to:</li> <li>Request for comments (RFC) - pierwszys status m\u00f3wi\u0105cy, ze decyzja jest na etapie zbierania informacji od r\u00f3\u017cnych zespo\u0142\u00f3w</li> <li>Proposed - oczekuje na akceptacje</li> <li>Accepted - obowi\u0105zuje</li> <li>Superseded - ju\u017c nie obowi\u0105zuje (np zosta\u0142a nadpisana inn\u0105 decyzj\u0105)</li> <li>Kontekst - wyja\u015bnienie kontekst\u00f3w decyzji, czynnik\u00f3w, kt\u00f3re s\u0105 brane pod uwag\u0119 (zar\u00f3wno techniczne jak i nietechniczne)</li> <li>Decyzja</li> <li>Konsekwencje - om\u00f3wienie mo\u017cliwych konsekwencji podj\u0119tej decyzji. Jest to opis tego jak to wp\u0142ynie na dalsze rozwijanie projektu, jego bud\u017cet, z\u0142o\u017cono\u015b\u0107 deployment etc.</li> <li>Governance - kto ma odpowiada\u0107 za wdro\u017cenie danej decyzji</li> <li>Inne ko\u0144cowe notatki - wszelkie informacje, kt\u00f3re mog\u0105 by\u0107 przydatne, ale nie nale\u017c\u0105 do powy\u017cszych kategorii, mo\u017ce to by\u0107 data utworzenia, autorzy, data wej\u015bcia w \u017cycie etc.</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/2_prace_koncepcyjne/#modele-pracy","title":"Modele pracy","text":"<p>TODO (wyk\u0142ad IOP) 01A</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/2_prace_koncepcyjne/#kaskadowy","title":"Kaskadowy","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/2_prace_koncepcyjne/#prototypowanie","title":"Prototypowanie","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/3_style_architektoniczne/","title":"Style Architektoniczne","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/3_style_architektoniczne/#monolit","title":"Monolit","text":"<p>Domy\u015blnie stosowan\u0105 architektur\u0105 w wi\u0119kszo\u015bci wypadk\u00f3w jest architektura monolityczna. W pewnym uproszczeniu system monolityczny jest aplikacj\u0105, kt\u00f3rej kod \u017ar\u00f3d\u0142owy stanowi jedn\u0105, sp\u00f3jn\u0105 baz\u0119 kodu. Mo\u017ce on sk\u0142ada\u0107 si\u0119 z wielu r\u00f3\u017cnych modu\u0142\u00f3w i element\u00f3w, ale sam w sobie stanowi zwi\u0119z\u0142\u0105 ca\u0142o\u015b\u0107.  W zale\u017cno\u015bci od stopnia integracji oraz sposob\u00f3w wdro\u017cenia mo\u017cna wydzieli\u0107 kilka odmian aplikacji monolitycznych</p> <p></p> <p>Monolit jednoprocesowy - jest to najprostszy mo\u017cliwy przyk\u0142ad, cz\u0119sto traktowany jako domy\u015blne podej\u015bcie. Jest to system, kt\u00f3ry w ca\u0142o\u015bci jest wdro\u017cony w ramach jednego procesu. Jest to w uproszczeniu system, kt\u00f3ry dzia\u0142a operuj\u0105c na informacjach znajduj\u0105cych si\u0119 w jakiej\u015b bazie danych. Taki monolit nadal mo\u017ce by\u0107 rozproszony, poniewa\u017c dopuszczalne jest istnienie wielu instancji danego procesu. Jest to podej\u015bcie pozwalaj\u0105ce zapewni\u0107 wi\u0119ksz\u0105 niezawodno\u015b\u0107 oraz pewn\u0105 doz\u0119 skalowalno\u015bci, ale powy\u017cej pewnego progu wyzwaniem mo\u017ce okaza\u0107 si\u0119 szybki dost\u0119p do wsp\u00f3lnej bazy danych. Takie wdro\u017cenie cz\u0119sto jest dobrym podej\u015bciem. David Heinemeier Hansson, tw\u00f3rca Ruby on Rails stwierdzi\u0142, \u017ce taka architektura jest zalecana zw\u0142aszcza w przypadku mniejszych system\u00f3w.</p> <p></p> <p>Przy odpowiednim zaprojektowaniu mo\u017ce si\u0119 ona skalowa\u0107 wraz ze wzrostem potrzeb do momentu, gdy przekszta\u0142ci si\u0119 ona w Monolit modu\u0142owy. Jest to odmiana monolitu jednoprocesowego, w kt\u00f3rym w ramach procesu mo\u017cna wydzieli\u0107 poszczeg\u00f3lne modu\u0142y. S\u0105 to elementy o tyle odseparowane, \u017ce mo\u017cliwa jest niezale\u017cna praca nad poszczeg\u00f3lnymi z nich. Jednak nadal s\u0105 one na tyle \u015bci\u015ble zintegrowane, \u017ce niezb\u0119dne jest ich wsp\u00f3lne wdro\u017cenie. Ca\u0142o\u015b\u0107 kodu nadal wykorzystuje jedn\u0105 wsp\u00f3ln\u0105 baz\u0119 danych tak jak to wida\u0107 na Rysunku poni\u017cej. Dekompozycja kodu wp\u0142ywa na sam proces tworzenia oprogramowania, nie zmienia ona jednak znacz\u0105co skalowalno\u015bci, czy te\u017c wydajno\u015bci rozwi\u0105zania.</p> <p></p> <p>Zdarza si\u0119, \u017ce w celu dodatkowego poprawienia skalowalno\u015bci dokonuje si\u0119 tak\u017ce dekompozycji samej bazy danych (podzia\u0142 np. na relacyjn\u0105, baz\u0119 z logami, object storage etc.).</p> <p>Zalety</p> <ul> <li>Prostota - \u0142atwo i szybko si\u0119 pisze</li> <li>\u0141atwe pisanie test\u00f3w</li> <li>\u0141atwe debugowanie i profilowanie kodu - mo\u017cliwe szybkie prze\u015bledzenie pe\u0142nej \u015bcie\u017cki wykonania</li> <li>Ca\u0142y kod znajduje si\u0119 w jednym repoozytorium - co bardzo u\u0142atwia nawigowanie</li> </ul> <p>Wady:</p> <ul> <li>Powy\u017cej pewnego progu wzrostu tak du\u017cy codebase zaczyna by\u0107 problematyczny - chodzi tutaj nie tyle o skalowanie, co co rozmiar i z\u0142o\u017cono\u015b\u0107 codebase'u</li> <li>Mocne powi\u0105zanie kodu - ci\u0119\u017cko jest napisa\u0107 cz\u0119\u015b\u0107 wymagaj\u0105c\u0105 szybkich oblicze\u0144 w C++, za\u015b cze\u015b\u0107 bazodanow\u0105 w Pythonie</li> <li>W wypadku zbyt du\u017cych aplikacji ci\u0119\u017cko jest si\u0119 \"wgry\u017a\u0107\" w projekt</li> <li>Z czasem wprowadzanie zmian mo\u017ce by\u0107 coraz bardziej pracoch\u0142onne i uci\u0105\u017cliwe</li> </ul> <p>W dobie wzrostu popularno\u015bci mikroserwis\u00f3w, chmur i us\u0142ug serverless zasadno\u015b\u0107 jego wykorzystania jest cz\u0119sto podwa\u017cana. Jednak mimo krytyki warto pami\u0119ta\u0107, \u017ce decyzje architektoniczne powinny by\u0107 podyktowane wymaganiami, a nie chwilow\u0105 mod\u0105 i trendami w bran\u017cy.</p> <p>\u0179r\u00f3d\u0142a:</p> <ul> <li>Deconstructing the Monolith: Designing Software that Maximizes Developer Productivity</li> <li>The Majestic Monolith - David Heinemeier Hansson, tw\u00f3rca Ruby on Rails o monolicie</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/3_style_architektoniczne/#mikroserwisy","title":"Mikroserwisy","text":"<p>Architektura mikrous\u0142ugowa zwana tak\u017ce mikroserwisow\u0105 jest rodzajem architektury, w kt\u00f3rej system sk\u0142ada si\u0119 z niewielkich, niezale\u017cnych od siebie serwis\u00f3w zwanych mikrous\u0142ugami. Ka\u017cdy z nich pe\u0142ni jedn\u0105, \u015bci\u015ble okre\u015blon\u0105 rol\u0119 tak\u0105 jak zarz\u0105dzanie u\u017cytkownikami, konwersja danych, wykonywanie oblicze\u0144 etc. Serwisy te mo\u017cna traktowa\u0107 jako niewielkie bloki, z kt\u00f3rych sk\u0142ada si\u0119 ca\u0142y system. Ca\u0142a wymiana informacji pomi\u0119dzy blokami nast\u0119puje za pomoc\u0105 sieci, najcz\u0119\u015bciej wykorzystuje si\u0119 do tego API wykorzystuj\u0105ce protok\u00f3\u0142 REST. Dzi\u0119ki \u015bci\u015ble okre\u015blonym sposobom interakcji opisuj\u0105cymi, jakie dane powinny by\u0107 odbierane i jakie wysy\u0142ane mo\u017cemy pozwoli\u0107 sobie na traktowanie poszczeg\u00f3lnych mikrous\u0142ug jako czarnych skrzynek, kt\u00f3re mo\u017cemy poprosi\u0107 o wykonanie jakiej\u015b czynno\u015bci bez wnikania w to, jak jest ona zaimplementowana.</p> <p>Dzi\u0119ki takiemu podej\u015bciu deweloperzy pracuj\u0105cy nad takim rozwi\u0105zaniem mog\u0105 pracowa\u0107 z baz\u0105 kodu obejmuj\u0105c\u0105 tylko jedn\u0105 us\u0142ug\u0119 nie musz\u0105c si\u0119 martwi\u0107 jak to wp\u0142ynie na reszt\u0119 systemu (o ile nadal przestrzega si\u0119 ustalonych interfejs\u00f3w). Du\u017ca autonomia poszczeg\u00f3lnych serwis\u00f3w pozwala tak\u017ce na elastyczne skalowanie tylko tych us\u0142ug, kt\u00f3re najbardziej tego wymagaj\u0105. Jest to przydatne zw\u0142aszcza w wypadku, gdy ze wzgl\u0119du na specyfik\u0119 niekt\u00f3rych us\u0142ug wymagaj\u0105 one r\u00f3\u017cnych zasob\u00f3w dyskowych, b\u0105d\u017a obliczeniowych.  Dobrym przyk\u0142adem s\u0105 tutaj wszelkie systemy wykorzystuj\u0105ce przetwarzanie obrazu, uczenie maszynowe, czy te\u017c inne operacje wymagaj\u0105ce GPU, jest to do\u015b\u0107 specyficzne wymaganie dla domeny maszyn serwerowych i wymaga innej klasy maszyn.</p> <p>Zalety:</p> <ul> <li>Mo\u017cliwo\u015b\u0107 \u0142atwego stworzenia systemu opartego na r\u00f3\u017cnych technologiach</li> <li>Prace nad danym modu\u0142em nie wymagaj\u0105 poznania budowy ca\u0142ego systemu</li> <li>Ograniczenie w\u0105skich garde\u0142 oraz liczby SPoF (Single Point of Failure) - cz\u0119\u015b\u0107 systemu mo\u017ce nadal dzia\u0142a\u0107 pomimo awarii cz\u0119\u015bci modu\u0142\u00f3w</li> </ul> <p>Wady:</p> <ul> <li>Du\u017co bardziej czasoch\u0142onna implementacja</li> <li>Problematyczny deployment</li> <li>Utrudnione debugowanie oraz zbieranie log\u00f3w</li> <li>Kod mikroserwis\u00f3w cz\u0119sto wymaga wielokrotnej implementacji tych samych interfejs\u00f3w komunikacyjnych, walidacji danych etc.</li> </ul> <p>\u0179r\u00f3d\u0142a:</p> <ul> <li>Artyku\u0142 A Comparative Review of Microservices and Monolithic Architectures</li> <li>The Journey from Monolith to Microservices to Edge</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/refaktoryzacja/","title":"Refaktoryzacja","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/refaktoryzacja/#refaktoryzacja","title":"Refaktoryzacja","text":"<p>Refactoring to zmiany w kodzie poprawiaj\u0105ce czytelno\u015b\u0107, zmieniaj\u0105ce struktur\u0119 kodu, ale nie zmieniaj\u0105ce funkcjonalno\u015bci. Jego celem jest potrzeba zrozumienia naszego kodu.</p> <p>Je\u015bli chcemy</p> <p>Prawo demeter - prawo wielu kropek...</p> <p>Je\u017celi w nazwie metody jest <code>i</code> lub <code>lub</code> to znaczy, \u017ce mamy \u017ale opisan\u0105 nazw\u0119 - powinny by\u0107 one bardziej abstrakcyjne i nie opisywa\u0107 s\u0142ownie tego co jest pod spodem.</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/refaktoryzacja/#przydatne-narzedzia","title":"Przydatne narz\u0119dzia","text":"<ul> <li>sonar (albo sonarcloud) pozwala bada\u0107 jako\u015b\u0107 kodu</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/reguly_paradygmaty/","title":"Paradygmaty i regu\u0142y","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/reguly_paradygmaty/#programowanie-obiektowe","title":"Programowanie obiektowe","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/reguly_paradygmaty/#reguy","title":"Regu\u0142y","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/reguly_paradygmaty/#kompozycja-zamiast-dziedziczenia","title":"Kompozycja zamiast dziedziczenia","text":"<p>Composition over Inheritance - jest to zasada m\u00f3wi\u0105ca, \u017ce na og\u00f3\u0142 powinni\u015bmy preferowa\u0107 zastosowanie kompozycji (czyli zawieranie klas implementuj\u0105cych dane interfejsy dostarczaj\u0105ce po\u017c\u0105dane funkcjonalno\u015bci) zamiast dziedziczenia.</p> <p>Kompozycja w przeciwie\u0144stwie do dziedziczenia pozwala na uzyskanie du\u017co wi\u0119kszej elastyczno\u015bci, poniewa\u017c wykorzystywane przez nas klasy nie s\u0105 tak \u015bci\u015ble ze sob\u0105 powi\u0105zane, jak mia\u0142oby to miejsce w wypadku dziedziczenia. Kompozycja pozwala chocia\u017cby na wstrzykiwanie zale\u017cno\u015bci.</p> <p>Jedn\u0105 z oznak elastyczno\u015bci jest to, \u017ce mo\u017cemy mie\u0107 r\u00f3\u017cne kombinacje zachowa\u0144 dla danych klas.</p> <p>//TODO opisz wstrzykiwanie zale\u017cno\u015bci</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/reguly_paradygmaty/#programowanie-aspektowe","title":"Programowanie aspektowe","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/reguly_paradygmaty/#inne-materiay","title":"Inne materia\u0142y","text":"<p>Banda czworga - https://brasil.cel.agh.edu.pl/~09sbfraczek/wzorce-projektowe-wstep,1,57.html</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/uml/","title":"UML - Unified Modelling Language","text":"<p>Jest to uniwersalny j\u0119zyk do modelowania system\u00f3w i nie tylko.</p> <p>Istnieje wiele typ\u00f3w diagram\u00f3w UML. Takie jak:</p> <ul> <li>Diagram klas - pozwala na \u0142atwe opisanie system\u00f3w obiektowych</li> <li>Diagram komponent\u00f3w - pokazuje fizyczne elementy systemu oraz interakcje mi\u0119dzy nimi</li> <li>Diagram stan\u00f3w - opisuje stany obiektu i przej\u015bcia mi\u0119dzy nimi</li> <li>Diagram aktywno\u015bci (czynno\u015bci) - podobny do diagramu stan\u00f3w, z t\u0105 r\u00f3\u017cnic\u0105, \u017ce opisuje wiele obiekt\u00f3w</li> <li>Diagram przypadk\u00f3w u\u017cycia (use case) - pokazuje aktor\u00f3w oraz przypadki u\u017cycia systemu</li> <li>...</li> </ul> <p>Do pracy z diagramami UML mo\u017cna wykorzysta\u0107 takie narz\u0119dzia jak:</p> <ul> <li>Draw.io - apka do rysowania r\u00f3\u017anych diagram\u00f3w</li> <li>mermaid - j\u0119zyk do opisywania diagram\u00f3w tekstowo (nie wszystkich)</li> <li>Wbudowane narz\u0119dzia (np. doxygen mo\u017ce wygenerowa\u0107 DIagram klas dla kodu C++, za\u015b Django potrafi wygenerowa\u0107 diagram ER dla opisywanych struktur danych, za\u015b DataBeaver potrafi wygenerowa\u0107 taki diagram dla bazy do kt\u00f3rej si\u0119 pod\u0142\u0105czy\u0142)</li> </ul> <p>Przydatne materia\u0142y:</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/uml/#-httpswwwlucidchartcompagesplczym-jest-uml-unified-modeling-language","title":"- https://www.lucidchart.com/pages/pl/czym-jest-uml-unified-modeling-language","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/uml/#diagram-klas","title":"Diagram klas","text":"<p>Przedstawienie klas oraz zale\u017cno\u015bci i relacji mi\u0119dzy nimi. Wikipedia</p> <p></p> <p>Poszczeg\u00f3lne klasy maj\u0105 wyr\u00f3\u017cnion\u0105 nazw\u0119 oraz atrybuty takie jak:</p> <ul> <li>metody (funkcje)</li> <li>w\u0142a\u015bciwo\u015bci</li> <li>pola (zmienne)</li> </ul> <p>Mo\u017cemy je pokazwa\u0107 jako sama nazwa, opcjonalnie wzbogacona o typ, argumenty i inne cechy. Dozwolone s\u0105 tylko typy bazowe (<code>integer</code>, <code>real</code>, <code>char</code>, <code>string</code>, etc.) bez klas.</p> <p>Og\u00f3lnny schemat:</p> <p><code>[visibility] Name [: Type] [=initial value]</code></p> <p></p> <p>Mo\u017cemy tak\u017ce okre\u015bla\u0107 widoczno\u015b\u0107 atrybut\u00f3w</p> <ul> <li><code>+</code> dla public \u2013 publiczny, dost\u0119p globalny</li> <li><code>#</code> dla protected \u2013 chroniony, dost\u0119p dla pochodnych klasy (wynikaj\u0105cych z generalizacji)</li> <li><code>\u2212</code> dla private \u2013 prywatny, dost\u0119pny tylko w obr\u0119bie klasy (przy atrybucie statycznym) lub obiektu (przy atrybucie zwyk\u0142ym)</li> <li><code>~</code> dla package \u2013 pakiet, dost\u0119pny w obr\u0119bie danego pakietu, projektu.</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/uml/#zaleznosci-pomiedzy-klasami","title":"Zale\u017cno\u015bci pomi\u0119dzy klasami","text":"<p>Zale\u017cno\u015bci pomi\u0119dzy poszczeg\u00f3lnymi klasami opisujemy za pomoc\u0105 zwi\u0105zk\u00f3w (powi\u0105za\u0144)</p> <p></p> <ul> <li>Zale\u017cno\u015b\u0107 (ang. dependency) \u2013 najs\u0142abszy zwi\u0105zek znaczeniowy mi\u0119dzy klasami, gdy jedna z klas u\u017cywa innej. Na diagramie klas oznaczana <code>-------&gt;</code> przerywan\u0105 lini\u0105 zako\u0144czon\u0105 strza\u0142k\u0105 wskazuj\u0105c\u0105 kierunek zale\u017cno\u015bci</li> <li>Asocjacja (ang. association) wskazuje na silniejsze powi\u0105zanie pomi\u0119dzy obiektami danych klas (np. firma zatrudnia pracownik\u00f3w). Na diagramie asocjacj\u0119 oznacza si\u0119 za pomoc\u0105 linii. Nazwy cech (np. zatrudniony, zatrudniaj\u0105cy) wraz z krotno\u015bci\u0105 umieszcza si\u0119 w punkcie docelowym asocjacji. Nazw\u0119 asocjacji podaje si\u0119 po\u015brodku (np. zatrudnia). </li> <li>Generalizacja lub dziedziczenie - wype\u0142niona strza\u0142ka wskazuje na klas\u0119 bazow\u0105 wzgl\u0119dem pochodnej   </li> <li>Agregacja (ang. aggregation) reprezentuje zwi\u0105zek typu ca\u0142o\u015b\u0107-cz\u0119\u015b\u0107, czyli jaka\u015b wi\u0119ksza ca\u0142o\u015b\u0107 jest rozbita na elementy. Oznacza to, \u017ce elementy cz\u0119\u015bciowe mog\u0105 nale\u017ce\u0107 do wi\u0119kszej ca\u0142o\u015bci, jednak r\u00f3wnie\u017c mog\u0105 istnie\u0107 bez niej (np. ko\u0142a i samoch\u00f3d).</li> <li>Kompozycja (ang. composition), jest silniejsz\u0105 form\u0105 agregacji. W zwi\u0105zku kompozycji, cz\u0119\u015bci nale\u017c\u0105 tylko do jednej ca\u0142o\u015bci, a ich okres \u017cycia jest wsp\u00f3lny \u2014 razem z ca\u0142o\u015bci\u0105 niszczone s\u0105 r\u00f3wnie\u017c cz\u0119\u015bci. W du\u017cej mierze jest to kwestia umowna, zale\u017cna od danego systemu. </li> </ul> <p>W wypadku asocjacji mo\u017cemy tak\u017ce okre\u015bli\u0107 krotno\u015b\u0107 zale\u017cno\u015bci</p> <ul> <li><code>0</code> brak instancji (rzadkie)</li> <li><code>0..1</code> Zero albo jedna</li> <li><code>1</code> ,<code>1..1</code> dok\u0142adnie jedna</li> <li><code>0..*</code>, <code>*</code> Zero albo wi\u0119cej instancji</li> <li><code>1..*</code> Jedna, albo wi\u0119cej</li> </ul> <p>Niekt\u00f3re asocjacje same w sobie mog\u0105 by\u0107 reprezentowane poprzez klasy. Np w wypadkach, gdy musza przechowywa\u0107 wi\u0119cej w\u0142asnych danych. S\u0105 to klasy asocjacyjne (<code>Link classes</code>) </p> <p>// TODO UML, a obiekty (wyk\u0142ad 05 i 04 z LTP na UPV) oraz przyk\u0142adowe analizy</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/uml/#diagram-przypadkow-uzycia-use-case","title":"Diagram przypadk\u00f3w u\u017cycia (Use case)","text":"<p>Wikipedia</p> <p>Jest on wykorzystywany do opisywania w jaki spos\u00f3b powinien dzia\u0142a\u0107 nasz system i jakie powinien posiada\u0107 funkcjonalno\u015bci. Jest on bardzo pomocny przy definiowaniu wymaga\u0144 funkcjonalnych.</p> <p>Wyr\u00f3\u017cniamy na nich:</p> <ul> <li>aktor\u00f3w - opisuj\u0105ce uczestnik\u00f3w systemu oraz ich role. Aktorem osobowym mo\u017ce by\u0107 osoba, zesp\u00f3\u0142, dzia\u0142, instytucja, organizacja, zrzeszenie organizacji lub organizacja wirtualna. Nazwy aktor\u00f3w osobowych cz\u0119sto pokryte s\u0105 z nazwami funkcji jakie pe\u0142ni\u0105 w organizacji, projekcie lub przedsi\u0119wzi\u0119ciu b\u0105d\u017a nazw\u0105 stanowiska jakie piastuj\u0105. Natomiast aktorem bezosobowym mo\u017ce by\u0107 system zewn\u0119trzny (podsystemy, bazy danych), urz\u0105dzenie lub czas (UWAGA Sam system nigdy nie jest aktorem)</li> <li>przypadki u\u017cycia - opisuj\u0105 ci\u0105gi akcji i ich warianty. Na og\u00f3\u0142 jeden przypadek u\u017cycia opisuje jedn\u0105 funkcjonalno\u015b\u0107.</li> <li>zwi\u0105zki - opisuj\u0105 relacje pomi\u0119dzy elementami</li> </ul> <p></p> <p>//TODO opisa\u0107 dok\u0142adniej relacj\u0119 mi\u0119dzy aktorami a przypadkami, np dlaczego kupuj\u0105cy i przedaj\u0105cy mog\u0105 si\u0119 \u0142\u0105czy\u0107 z jendym przypadkiem o nazwi sprzedaj ksi\u0105\u017ck\u0119.</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/uml/#przypadki-uzycia","title":"Przypadki u\u017cycia","text":"<p>Poszczeg\u00f3lne przypadki u\u017cycia cz\u0119\u015bto opisuje si\u0119 tak\u017ce za pomoc\u0105 tabelek.</p> Use Case Actors Summary Preconditions Postconditions Includes Extends Inherits from Flow of events Actor System Przyk\u0142adowa wype\u0142niona tabelka <p></p> <p>Poszczeg\u00f3lne przypadki u\u017cycia mog\u0105 wchodzi\u0107 w zwi\u0105zki nie tylko z aktorami, lecz tak\u017ce z innymi przypadkami u\u017cycia.</p> <p>Relacja include - przypadek A zawiera przypadek B, kiedy ka\u017cde wykonanie A wymaga, aby\u015bmy wykonali tak\u017ce B.</p> <p></p> <p>Aby kogo\u015b usun\u0105\u0107 z bazy danych musimy go najpierw wyszuka\u0107.</p> <p>Relacja extend - przypadek B rozszerza przypadek A, kiedy podczas wykonywania A w pewnych przypadkach mo\u017cemy (ale nie musimy) wykona\u0107 B.</p> <p></p> <p>Mo\u017cemy mie\u0107 tak\u017ce typow\u0105 relacj\u0119 dziedziczenia. (podobnie jak u aktor\u00f3w)</p> <p></p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/uml/#opracowywanie-diagramu","title":"Opracowywanie diagramu","text":"<p>Podczas prac nad diagramem mo\u017cemy przyj\u0105\u0107 dwa sposoby podej\u015bcia do tematu.</p> <ul> <li>Top Down, czyli <code>Szukamy aktor\u00f3w</code> -&gt; <code>Szukamy przypadk\u00f3w</code> -&gt; <code>Uszczeg\u00f3\u0142aiwamy</code></li> <li>Bottom up <code>Tworzymy scenariusze</code> -&gt; <code>Generalizujemy</code> -&gt; <code>Organizujemy wszystko w diagram</code></li> </ul> <p>Podczas prac nad diagramem warto rozwazy\u0107 kto, dlaczego i jak b\u0119dzie u\u017cywa\u0107 naszego systemu. Pomo\u017ce nam to znale\u017a\u0107 aktor\u00f3w.</p> <p>Ka\u017cda grupa lub osoba mo\u017ce by\u0107 znaleziona jednej z poni\u017cszych kategorii:</p> <ul> <li>Kto b\u0119dzie u\u017cywa\u0142 systemu?</li> <li>Kto b\u0119dzie instalowa\u0142 system?</li> <li>Kto b\u0119dzie utrzymywa\u0142 system?</li> <li>Kto wy\u0142\u0105czy system?</li> <li>Jakie inne systemy b\u0119d\u0105 si\u0119 z nim komunikowa\u0107?</li> <li>Kto otrzymuje informacje?</li> <li>Kto dostarcza informacji?</li> </ul> <p>Jak ju\u017c znajdziemy naszych aktor\u00f3w warto si\u0119 zastanowi\u0107 nad ich przypadkami u\u017cycia. Warto tutaj zwr\u00f3ci\u0107 uwag\u0119 na pytania takie jak:</p> <ul> <li>Jakie zadania wymagane s\u0105 od aktor\u00f3w z systemu?</li> <li>Czy aktor b\u0119dzie m\u00f3g\u0142 tworzy\u0107, przechowywa\u0107, zmienia\u0107 lub usuwa\u0107 informacje z systemu?</li> <li>Czy aktor b\u0119dzie informowa\u0142 system o zmianach zachodz\u0105cych na zewn\u0105trz?</li> <li>Czy ka\u017cdy aktor b\u0119dzie informowany o zmianach stanu systemu?</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/uml/#diagram-sekwencji","title":"Diagram sekwencji","text":"<p>//TODO https://wolski.pro/diagramy-uml/diagram-sekwencji/ Jest on u\u017cywany do opisu przep\u0142ywu sterowania oraz interakcji pomi\u0119dzy obiektami w czasie. Opisuje on jakie akcje po sobie nast\u0119puj\u0105.</p> <pre><code>sequenceDiagram\n    Alice-&gt;&gt;+John: Hello John, how are you?\n    Alice-&gt;&gt;+John: John, can you hear me?\n    John--&gt;&gt;-Alice: Hi Alice, I can hear you!\n    John--&gt;&gt;-Alice: I feel great!</code></pre>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/uml/#diagram-aktywnosci","title":"Diagram aktywno\u015bci","text":"<p>//TODO</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/uml/#diagram-stanow","title":"Diagram stan\u00f3w","text":"<p>//TODO</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/uml/#diagram-er-encji-relacji","title":"Diagram ER (Encji Relacji)","text":"<p>//TODO Jest to diagram u\u017cywany do opisywania struktur przechowywanych w relacyjnych bazach danych.</p> <pre><code>erDiagram\n    User {\n        Int id PK\n        String username\n        Int serverId FK\n    }\n\n    Server {\n        Int id PK\n        String serverName\n    }\n\n    Server ||--o{ User : has</code></pre>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/","title":"Wzorce projektowe","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/#wzorce-projektowe","title":"Wzorce projektowe","text":"<p>Podstawowe \u017ar\u00f3d\u0142a: Wikipedia oraz Refactoring Guru</p> <p>Wzorce projektowe dzielimy na 3 kategorie:</p> <ul> <li>kreacyjne - wzorce u\u017cywane do generowania obiekt\u00f3w z okre\u015blonymi zachowaniami</li> <li>strukturalne - opisuj\u0105 struktury z powi\u0105zanych ze sob\u0105 obiekt\u00f3w</li> <li>behawioralne - opisuj\u0105 zachowania oraz zadania poszczeg\u00f3lnych obiekt\u00f3w</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/#wzorce-kreacyjne","title":"Wzorce kreacyjne","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/#singleton","title":"Singleton","text":"<p>U\u017cywany, kiedy chcemy mie\u0107 tylko jedn\u0105 instancj\u0119 danej klasy w ca\u0142ym programie.</p> <p>Zdaniem wielu jest to do\u015b\u0107 kontrowersyjny wzorzec (wiki), cz\u0119sto traktowany jako antywzorzec. Ma on takie wady jak:</p> <ul> <li>\u0141amie zasad\u0119 jednej odpowiedzialno\u015bci</li> <li>\u0141amie zasad\u0119 otwarte-zamkni\u0119te</li> <li>pogarsza elastyczno\u015b\u0107</li> <li>utrudnia testowanie</li> </ul> <pre><code>classDiagram\n    class Singleton{\n        -instance\n        -Singleton()\n        +getInstance()\n    }</code></pre> <pre><code># jest wiele sposob\u00f3w implementacji\nclass Singleton\n    _instance = None\n\n    def __new__(cls, *args, **kwargs):\n        if cls._instance is None:\n            cls._instance = super().__new__(cls, *args, **kwargs)\n\n        return cls._instance\n</code></pre>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/#prototyp","title":"Prototyp","text":"<p>Jest on wykorzystywany wtedy, kiedy chcemy upro\u015bci\u0107 sobie tworzenie nowych instancji danej klasy bazuj\u0105c na ju\u017c istniej\u0105cym obiekcie. Np kiedy mamy jaki\u015b plik konfiguracyjny, kt\u00f3ry musimy tylko lekko zmodyfikowa\u0107 na nasze potrzeby.</p> <p>W wielu wypadkach klonowanie obiektu z zewn\u0105trz nie jest mo\u017cliwe (np z powodu prywatnych parametr\u00f3w). W takiej sytuacji warto wykorzysta\u0107 interfejs dostarczaj\u0105cy metod\u0119 <code>clone()</code>.</p> <p>Takie podej\u015bcie jest u\u017cyteczne kiedy chcemy, aby nasz kod by\u0142 niezale\u017cny ok konkretnych klas obiekt\u00f3w, z kt\u00f3re chcemy skopiowa\u0107.</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/#strukturalne","title":"Strukturalne","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/#adapter","title":"Adapter","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/#proxy","title":"Proxy","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/#fasada","title":"Fasada","text":"<p>Jest to wzorzec maj\u0105cy na celu uproszczenie korzystania ze skomplikowanego systemu poprzez dostaczenie uproszczonego interfejsu dostarczaj\u0105cego tylko te funkcjonalno\u015bci, kt\u00f3re s\u0105 nam naprawd\u0119 potrzebne.</p>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/#behawioralne","title":"Behawioralne","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/#nieposortowane-todo","title":"nieposortowane TODO","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/#wstrzykiwanie-zaleznosci","title":"Wstrzykiwanie zale\u017cno\u015bci","text":"<p>Zamiast tworzy\u0107 obiekty w klasie przekazujemy jej zale\u017cne klasy.</p> <ul> <li>inicjalizacja nie nast\u0119puje w naszych klasach z logik\u0105 biznesow\u0105 (PKI wyk\u0142ad 8 30 min to by\u0142o omwione)</li> </ul>"},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/#obserwator","title":"Obserwator","text":""},{"location":"Architektura%F0%9F%8F%97%EF%B8%8F/wzorce_projektowe/#mvc-porzadnie-omowione","title":"MVC - porz\u0105dnie om\u00f3wione","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/","title":"ANSIC C (i nie tylko)","text":"<p>Notatki dotycz\u0105ce j\u0119zyka C (oraz bardziej niskopoziomowych aspekt\u00f3w C++)</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#kompilacja","title":"Kompilacja","text":"<p>Najpopularniejszym kompilatorem jest gcc</p> <pre><code>gcc [-options] [source_files] [object_files] -o output_file\n</code></pre> <p>Podstawowe flagi</p> Flaga Opis -c Preprocessing, compilation, assembly producing a binary object file (.o) -S Preprocessing and compilation producing an assembly language file -E Preprocessing only sending the output to the standard output (terminal) -o plik nazwa pliku wyj\u015bciowego -Isciezka \u015acie\u017cka dla plik\u00f3w nag\u0142\u00f3wkowych (bez spacji, np <code>-I/usr/lib</code>) -lNAZWA Biblioteka do kt\u00f3rej mamy linkowa\u0107 program, m\u00f3wimy kompilatorowi do jakich bibliotek linkujemy program, np <code>-lm</code> linkuje do biblioteki libm.so -v Verbose gcc opisuje kroki kompilacji <p>Na og\u00f3\u0142 po prostu kompilujesz w jednej fazie</p> <pre><code>gcc -o executable programik.c\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#zmienne","title":"Zmienne","text":"Nazwa Rozmiar Czym jest int 32b Liczba ca\u0142kowita float 32b Liczba zmiennoprzecinkowa double 64b Dok\u0142adniejszy float char 1B =8b Jednobajtowe liczby ca\u0142kowite 0-255, u\u017cywane tak\u017ce (g\u0142\u00f3wnie) do przechowywania znak\u00f3w bool 1(true) lub 0(false) logika (wymaga <code>stdbool.h</code>) void - Typ pusty <p>int</p> <p>Sposoby zapisu liczb:</p> <ul> <li>zwyk\u0142y: 2, 456, 42 itp.</li> <li>\u00f3semkowy 010 (8) 015 (13) 0100 (64)</li> <li>szesnastkowy 0x12 (18) 0xF (15)</li> </ul> <p>float</p> <p>Sposoby zapisu liczb:</p> <ul> <li>zwyk\u0142y: 2.43, 456, 3.14 itp.</li> <li>naukowy(wyk\u0142adniczy) 6e10 (6*1010) 1.5e2 (150)</li> </ul> <p>char</p> <p>Zapis:</p> <ul> <li>zwyk\u0142y: char letter1 = 'a';</li> <li>jako kod ASCII: char letter2=97; 97 to a w kodzie ASCII   *putchar(char)-wypisuje char/tablice char\u00f3w a po niej daje enter</li> </ul>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#specyfikatory","title":"Specyfikatory","text":"<p>signed -liczba b\u0119dzie tak\u017ce mog\u0142a by\u0107 ujemna unsigned -liczba b\u0119dzie nieujemna Short i long s\u0105 wskaz\u00f3wkami dla kompilatora, by zarezerwowa\u0142 dla danego typu mniej/wi\u0119cej pami\u0119ci</p> <p>np.:</p> <pre><code>signed char a; /*zmienna a przyjmuje warto\u015bci od -128 do 127*/\nunsigned char b; /*zmienna b przyjmuje warto\u015bci od 0 do 255*/\nsigned int i = 0; // to samo co: int i = 0;\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#wskazniki-zmienne-przechowujace-adres-zmiennej","title":"Wska\u017aniki-zmienne przechowuj\u0105ce adres zmiennej","text":"<pre><code>int *px;//tworzymy zmienn\u0105 przechowuj\u0105c\u0105 wska\u017anik prowadz\u0105cy do\nint-a;\nint x=7;\n&amp;x //zwraca adres zmiennej\n*px;//we\u017a warto\u015b\u0107 znajduj\u0105c\u0105 si\u0119 pod danym adresem\n</code></pre> <p>Wska\u017aniki i const</p> <pre><code>int j = 3 ;\nint \u2217 const pj2 = &amp;j ;\n++(\u2217pj2 ) ;//tylko to si\u0119 da\nint j = 3 ;\nconst int \u2217 const pj3 = &amp;j ;\n//++pj3 ; // nie da sie \u2212 const\n//++(\u2217pj3 ) ; // nie da sie \u2212 const\n//pj3 = &amp;i ; // nie da sie \u2212 const\nprintf( \" const : %d\\n \" , \u2217 pj3 )\n</code></pre> <p>Podsumowuj\u0105c:</p> <pre><code>int       *      zmienny_wzkaznik_zmienny_int;\nint const *      zmienny_wzkaznik_staly_int;\nint       *const staly_wzkaznik_zmienny_int;\nint const *const staly_wzkaznik_staly_int;\n\n//Inaczej:\nconst char *const stringTable[] = {\n\"Hello\",\n\"World\",\n\"This\",\n\"Is\",\n\"A\",\n\"Table\",\n\"Of\",\n\"Strings\"\n};\nstringTable[0]=\"abc\"; //Niedozwolone\nstringTable[0][0]='a'; //Niedozwolone\n\nchar *const stringTable2[] = {\n\"Hello\",\n\"World\",\n\"This\",\n\"Is\",\n\"A\",\n\"Table\",\n\"Of\",\n\"Strings\"\n};\nstringTable2[0]=\"abc\";  //Niedozwolone\nstringTable2[0][0]='a';  //Dozwolone\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#tablice-i-alokowanie-pamieci","title":"Tablice i alokowanie pami\u0119ci","text":"<p>Definiowanie tablic</p> <pre><code>    int tab[2];\ntab[0]=32; tab[1]=3;\n</code></pre> <pre><code>    int tab[]={32,3};\nint tab[2][3]={\n{2,3,5},\n{1,3,4}};////definiowanie tablicy\nint tab[2][3]={\n{4},\n{5}};/////reszta to zera\nint tab[2][2]={1,2,3,4};\nint tab[2][2]={1,2,3}; //reszta to zera\nint niePoKol [12]={1 ,2 , [5]=3 , 4 };//reszta to zera\n</code></pre> <p>lub dla tablic znak\u00f3w</p> <pre><code>    char slowo[]=\u201dAla\u201d;\n//(od C99 mamy tablice VLA)\nint liczbaEl=4;\nint tablica[liczbaEl];\nint sum2dArr(int liWierszy ,int liKolumn , int vla\n[liWierszy][likolumn]) ;\n</code></pre> <p>Tablica a wska\u017anik - w praktyce zmienna trzymaj\u0105ca tablic\u0119 jest wska\u017anikiem na jej pierwszy element</p> <pre><code>    char tab[]= \" Ala \";\n//  Zmienna tab zawiera wska\u017anik do\n//  pierwszego elementu tablicy\nprintf(\u201e%c\u201d,tab+2)//wydrukuje a\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#tablice-dynamiczne-dynamiczna-alokacja-pamieci","title":"Tablice dynamiczne+ Dynamiczna Alokacja pami\u0119ci","text":"<ul> <li><code>malloc</code>( rozmiar_w_bajtach ); \u2013 zwraca wska\u017anik do zaalokowanego xobszaru lub NULL (gdy zbraknie pami\u0119ci albo innym b\u0142\u0119dzie). xPrzydzielona pami\u0119\u0107 ma nieokre\u015blon\u0105 zawarto\u015b\u0107</li> <li><code>calloc</code>( ile_el, rozmiar_elementu ); \u2013 to samo co malloc, tyle, \u017ce xprzydzielona pami\u0119\u0107 zainicjowana zerami</li> <li><code>free</code>( wsk_zwrocony_przez_malloc_lub_calloc ); \u2013 zwalnia pami\u0119\u0107, xNULL mo\u017ce by\u0107 jej argumentem</li> </ul> <p>Przyk\u0142adowa tablica</p> <pre><code>  puts(\"Ile int-\u00f3w?\" );\nint tabSize=0;\nscanf(\"%d\",&amp;tabSize);\nint *tab= malloc(tabSize\u2217sizeof(int));\nif(!tab){\nfputs(\"Brak pamieci\\n\" ,stderr);\nreturn 1;\n}\n</code></pre> <p>Dynamiczna tablica prostok\u0105tna -znamy szeroko\u015b\u0107 przed deklaracj\u0105</p> <pre><code>  int SZER=5;\nint wys=4;\nint (\u2217pTab) [SZER ] ;\npTab =sprAlokPam (malloc(wys\u2217 sizeof \u2217pTab));\n</code></pre> <p>Dynamiczna tablica prostok\u0105tna, nie znamy ani wysoko\u015bci ani szeroko\u015bci</p> <pre><code>int szer=5;\nint wys=4;\nint \u2217\u2217tabl=sprAlokPam(malloc(wys \u2217 sizeof(int\u2217)));\nfor ( int j =0; j&lt;wys;++ j )\ntabl[ j ]=sprAlokPam( malloc( szer \u2217 sizeof(int)));\nfor(int j=0; j&lt;wys;++j)///zwalnianie\nfree(tabl[j]);\nfree(tabl);\n</code></pre> <p>Dynamiczna tablica prostok\u0105tna</p> <pre><code>int szer=5;\nint wys=4;\nint \u2217\u2217tabl=sprAlokPam(malloc(wys\u2217sizeof(int\u2217)));\nfor(int j=0;j&lt;wys;++j)\ntabl [ j ]=sprAlokPam(malloc(szer\u2217sizeof(int)));\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#struktury","title":"Struktury","text":"<pre><code>struct struktura{\nint zmienna;\nbool prawda=true;//mo\u017cemy je od razu definiowa\u0107\nchar literka;\n///itp. tu mog\u0105 by\u0107 tablice, zmienne, inne struktury\n};\ntypedef struct {\nint p1, p2;\n} Struktura;\nint main ()\n{\nStruktura s = { 0, 0 };\nStruktura \\*wsk = &amp;s;\nwsk-&gt;p1 = 2;\nwsk-&gt;p2 = 3;\nreturn 0;\n}\n</code></pre> <p>*W strukturach nie dzia\u0142aj\u0105 tablice VLA **typedef struct struktura st; pomaga skr\u00f3ci\u0107 zapis i od teraz definiuj\u0105c struktur\u0119 zapisujemy tylko st</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#typ-wyliczeniowy-enum","title":"Typ wyliczeniowy - Enum","text":"<p>Ka\u017cdy element wyliczenia jest widziany jako sta\u0142a Z kolejnymi elementami skojarzono kolejne liczby typu int (licz\u0105c od 0)</p> <pre><code>enum Miesiace{STY,LUT,MAR,KW,MAJ,CZER,LIP ,SIER\n,WRZ,PAZ,LIST, GR};\n</code></pre> <p>Mo\u017cna przypisa\u0107 konkretn\u0105 warto\u015b\u0107, pozosta\u0142e elementy to kolejne liczby</p> <pre><code>enum Miesiace{STY=1 ,LUT,MAR,KW, MAJ,CZER,LIP ,SIER\n,WRZ, PAZ, LIST,GR};\n</code></pre> <p>Ka\u017cdemu elementowi mo\u017cna przypisa\u0107 liczb\u0119, dopuszczalne s\u0105 nawet powt\u00f3rzenia</p> <pre><code>enum ZnakiSpecj{DZWONEK=\u2019\\b\u2019 ,TAB=\u2019\\t\u2019 ,NOW_LINIA\n=\u2019\\n\u2019};\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#logika","title":"Logika","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#operatory","title":"Operatory","text":"<p><code>1</code> i <code>0</code> lub <code>true</code> i <code>false</code> dla typ\u00f3w logicznych takich jak bool (jako, \u017ce czyste C nie ma zmiennych typu bool to dla wygody mo\u017cna za\u0142\u0105czy\u0107 sobie biblioteke <code>#include &lt;stdbool.h&gt;</code>)</p> <p>Podstawowe operatory:</p> <ul> <li><code>x||y</code> lub</li> <li><code>x&amp;&amp;y</code> oraz</li> <li><code>!x</code> negacja</li> <li><code>a==b</code> czy r\u00f3wne</li> <li><code>a!=b</code> czy r\u00f3\u017cne</li> <li><code>a&gt;=b</code>, <code>a&gt;b</code></li> </ul> <p>Por\u00f3wnania zwracaj\u0105 stany logiczne (np dla int a,b)</p> <p>Warto\u015b\u0107 boola mo\u017cna dodawa\u0107 do zmiennych liczbowych typu int (ale polecam unika\u0107 takich zabaw)</p> <pre><code>bool x=true; x++; //x nadal jest r\u00f3wne 1\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#warunkowe","title":"Warunkowe","text":"<pre><code>if(warunek)\n{\n//kod je\u015bli tak\n}else{\n//kod je\u015bli nie\n}\n</code></pre> <p>switcha mo\u017cna wykorzystywa\u0107 gdy chcemy unikn\u0105\u0107 tworzenia tzw \"drabinki\" if-\u00f3w. Na og\u00f3\u0142 jest u\u017cywamy, gdy chcemy sprawdzi\u0107 warto\u015b\u0107 enuma.</p> <pre><code>switch(jaka\u015b_zmienna) {\n\ncase warto\u015b\u01071:\n//kod\nbreak;\n\ncase warto\u015b\u01072 :\n//kod\nbreak;\n\ndefault : /* Optional */\n//kod je\u015bli nic z powy\u017cszych nie pasuje\n}\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#petle","title":"P\u0119tle","text":"<p>Sterowanie przebiegiem p\u0119tli</p> <ul> <li><code>break</code> \u2013 przerwanie dzia\u0142ania p\u0119tli</li> <li><code>continue</code> \u2013 rozpocz\u0119cie kolejnego obiegu p\u0119tli</li> </ul> <p>Nadmierne stosowanie instrukcji steruj\u0105cych break, continue jest z\u0142\u0105 praktyk\u0105 programistyczn\u0105</p> <pre><code>while(warunek){\n//nasze polecenia\n}//wykonuje si\u0119 dop\u00f3ki warunek jest spe\u0142niony\n\ndo{\n//kod\n}while(warunek)//warunek jest sprawdzany dopiero po pierwszym obrocie\n\n//for(deklaracja zm ;warunek trwania; co ma si\u0119 dzia\u0107 po obrocie p\u0119tli){\nfor(int i=0;i&lt;5;i++){\n//b\u0119dzie 5 obrot\u00f3w p\u0119tli dla 01234\n}\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#include","title":"include <p>typedef unsigned char uchar ; typedef unsigned short ushort ; enum Miesiace{STY=1 ,LUT,MAR,KW, MAJ,CZER,LIP ,SIER ,WRZ, PAZ, LIST,GR}; const uchar dlMies[13]={0 ,31 ,29 ,31 ,30 ,31 ,30 ,31 ,31 ,30 ,31 ,30 ,31};//dlugosc miesi\u0105ca extern inline bool rokPrzest(const ushort r ) ; inline stosuje si\u0119 do kr\u00f3tkich, prostych funkcji aby unikn\u0105\u0107 kosztownego mechanizmu wo\u0142ania funkcji. Bez extern w C nie skompiluje si\u0119. assert(true) nic nie robi, assert(false) ko\u0144czy dzia\u0142anie programu. Asercje stosuje si\u0119 do debugowania, lub do sprawdzania czy spe\u0142nione s\u0105 za\u0142o\u017cenia projektant\u00f3w funkcji Inne Funkcje Liczby losowe rand() - zwraca liczb\u0119 z zakresu 0-RAND_MAX, losowane warto\u015bci zale\u017c\u0105 od funkcji: srand(ziarno) (nie wo\u0142a si\u0119 przed ka\u017cdym rand, wo\u0142a si\u0119 tylko przed pierwszym losowaniem!)-ustala ziarno losowania dla funkcji rand cz\u0119sto wewn\u0105trz podaje si\u0119 time(NULL) -je\u017celi tego nie zrobimy to za ka\u017cdym razem program wygeneruje to samo Lista s\u0142\u00f3w kluczowych C11 Lista s\u0142\u00f3w kluczowych j\u0119zyka C : auto, double, int, struct, break, else, long, switch, case, enum, register, typedef, char, extern, return, union, const, float, short, unsigned, continue, for, signed, void, default, goto, sizeof, volatile, do, if, static, while,_Bool, _Imaginary, restrict,_Complex, inline, _Alignas,_Generic, _Thread_local,_Alignof, Noreturn, _Atomic,_Static_assert \u0179r\u00f3d\u0142a je\u017celi potrzeba dodatkowych informacji:</p> <ol> <li>https://pl.wikibooks.org/wiki/C/Zmienne</li> <li>https://codeforwin.org/2015/05/list-of-all-    format-specifiers-in-c-programming.html</li> <li>https://pl.wikibooks.org/wiki/C/scanf    poj\u0119cia?: stdout    wyk\u0142ady pozosta\u0142e 5,6,7</li> </ol>","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#budowa-programu","title":"Budowa programu","text":"<p>W ka\u017cdym programie punktem pocz\u0105tkowym jest funkcja <code>main</code></p> <p>Przyjmuje ona argumenty:</p> <ul> <li><code>argc</code> - liczba argument\u00f3w przekazanych do programu</li> <li><code>argv</code> - tablica ze stringami argument\u00f3w</li> </ul> <p>A zwraca ona int-a b\u0119d\u0105cego kodem wyj\u015bcia (0-sukces)</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main(int argc, char* argv[])\n{\n//program\n}\n</code></pre> <p></p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#funkcje","title":"Funkcje","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#argumenty-funkcji","title":"Argumenty funkcji","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#zmienna-liczba-argumentow-variadic","title":"Zmienna liczba argument\u00f3w (Variadic)","text":"<p>W C i C++ funkcje na og\u00f3\u0142 przyjmuj\u0105 \u015bci\u015ble okre\u015blon\u0105 liczb\u0119 argument\u00f3w, ale mo\u017cliwe jest tak\u017ce zdefiniowanie funkcji przyjmuj\u0105cej zmienn\u0105 liczb\u0119 argument\u00f3w. (Tak jak <code>printf()</code>). Oznaczamy to za pomoc\u0105 wielokropka <code>...</code></p> <pre><code>int fun(int i, char c, ...){}\n</code></pre> <p>Za\u015b aby dosta\u0107 si\u0119 do warto\u015bci przekazanych dalej nale\u017cy u\u017cy\u0107 makr <code>va_arg</code>, <code>va_copy</code>, <code>va_end</code>, <code>va_start</code>. Dokumentacja</p> <pre><code>#include &lt;stdio.h&gt;      /* printf */\n#include &lt;stdarg.h&gt;     /* va_list, va_start, va_arg, va_end */\n\nint FindMax (int n, ...)\n{\nint i,val,largest;\nva_list vl;\nva_start(vl,n); //zaczynamy prac\u0119 ze zmiennymi\nlargest=va_arg(vl,int);\nfor (i=1;i&lt;n;i++)\n{\nval=va_arg(vl,int);\nlargest=(largest&gt;val)?largest:val;\n}\nva_end(vl);\nreturn largest;\n}\n</code></pre> <ul> <li><code>va_list</code> - Przed uzyskaniem dost\u0119pu do dowolnych argument\u00f3w zmiennych nale\u017cy ustanowi\u0107 znacznik listy jako zmienn\u0105 typu <code>va_list</code></li> <li><code>va_start</code> - wywo\u0142ujemy jak zaczymany prac\u0119. Drugim argumentem jest ostatni znany argument. (to co znajduje si\u0119 przed <code>...</code>)</li> <li><code>va_end</code> - musimy je wywo\u0142a\u0107 jak ju\u017c zako\u0144czymy prac\u0119 ze zmiennymi</li> <li><code>va_arg</code> - pozwala pobra\u0107 warto\u015b\u0107 <code>typ zmienna=va_arg(lista_va,typ)</code></li> <li><code>va_copy</code> (od C++11) -Tworzy kopi\u0119 listy argument\u00f3w w bie\u017c\u0105cym stanie</li> </ul> <p>W C++ mo\u017cliwe jest jednak nieco bezpieczniejsze obchodzenie si\u0119 z tymi argumentami. Od C++11 pojawi\u0142y si\u0119 templatki Cppreference packs i prostsze docsy</p> <pre><code>template&lt;typename T&gt;\nT adder(T v) {\nreturn v;\n}\n\ntemplate&lt;typename T, typename... Args&gt;\nT adder(T first, Args... args) {\nreturn first + adder(args...);\n}\n\nadder(1,4,56,7);\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#biblioteka-standardowa","title":"Biblioteka standardowa","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#pisanieczytanie","title":"Pisanie/czytanie","text":"<p>Cla C standardow\u0105 bibliotek\u0105 jest <code>stdio.h</code></p> <pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n//printf(&lt;control string&gt; [, &lt;arguments list&gt; ] )\n\nprintf(\"\\n Podaj liczbe: \");\n\n//scanf( &lt;control_string&gt;, &lt;arguments_list &gt;)\nint num;\nscanf(\"%d\", &amp;num);\n};\n</code></pre> <p>W kontrolnych ci\u0105gach znak\u00f3w wykorzystujemy specyfikatory formatu z tabelki poni\u017cej</p> <p>Tabelka z typami format\u00f3w</p> Format Description Supported data types %c Character char,unsigned char %d Signed Integer short ,unsigned short ,int ,long %e or %E Scientific notation of float values float,double %f Floating point float %g or %G Similar as %e or %E Float, double %hi Signed Integer(Short) short %hu Unsigned Integer(Short) unsigned short %i Signed Integer short, unsigned short, int,long %l or %ld or %li Signed Integer long %lf Floating point double %Lf Floating point long double %lu Unsigned integer unsigned int unsigned long %lli, %lld Signed Integer long long %llu Unsigned Integer unsigned long long %o Octal representation of Integer. short, unsigned short, int, unsigned int, long %p Address of pointer to void *, (wska\u017anik) void * %s String char * %u Unsigned Integer unsigned int unsigned long %x or %X Hexadecimal representation of Unsigned Integer short, unsigned short, int, unsigned int, long %n Prints nothing %% Prints % character <p>Znaki specjalne</p> Znak Znaczenie/akcja <code>\\n</code> Nowa linia (ASCII 010) <code>\\t</code> Tabulacja pozioma (ASCII 009) <code>\\v</code> Tabulacja pionowa <code>\\f</code> Nowa strona <code>\\r</code> Powr\u00f3t kursora (ASCII 013) <code>\\\\</code> Znak <code>\\</code> (ASCII 092) <code>\\\"</code> Znak <code>\"</code> (ASCII 034)"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#preprocesor","title":"Preprocesor","text":"<p>Preprocesor jest to program, kt\u00f3ry analizuje plik \u017ar\u00f3d\u0142owy (programu, biblioteki) w poszukiwaniu wszystkich wyra\u017ce\u0144 zaczynaj\u0105cych si\u0119 od \"#\". Na podstawie tych instrukcji generuje on kod w \"czystym\" j\u0119zyku C/C++, kt\u00f3ry dopiero potem jest analizowany przez kompilator</p> <p>Link do artyku\u0142u</p> <ul> <li><code>#define</code>: S\u0142u\u017cy do definiowania makr, kt\u00f3re s\u0105 zast\u0119powane przez okre\u015blone fragmenty kodu podczas procesu preprocesowania.</li> <li><code>#include</code>: S\u0142u\u017cy do importowania plik\u00f3w nag\u0142\u00f3wkowych do kodu \u017ar\u00f3d\u0142owego. Pliki nag\u0142\u00f3wkowe zawieraj\u0105 definicje funkcji, zmiennych i innych element\u00f3w, kt\u00f3re s\u0105 u\u017cywane w kodzie \u017ar\u00f3d\u0142owym.</li> <li><code>#ifdef</code>/<code>#ifndef</code>: S\u0142u\u017c\u0105 do sprawdzenia, czy dana makrodefinicja zosta\u0142a zdefiniowana lub nie. Je\u015bli warunek jest spe\u0142niony, to preprocesor wykonuje okre\u015blony fragment kodu.</li> <li><code>#if</code>/<code>#else</code>/<code>#endif</code>: S\u0142u\u017c\u0105 do warunkowego wykonywania fragment\u00f3w kodu. Je\u015bli warunek jest spe\u0142niony, to preprocesor wykonuje pierwszy fragment kodu, w przeciwnym razie wykonuje drugi fragment kodu.</li> <li><code>#pragma</code>: S\u0142u\u017cy do okre\u015blenia specjalnych instrukcji dla kompilatora. Mo\u017ce by\u0107 u\u017cywana do ustawienia opcji kompilacji lub do w\u0142\u0105czania/wy\u0142\u0105czania okre\u015blonych funkcji.</li> </ul> <p>//TODO przyk\u0142ady</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/0_C/#define","title":"Define","text":"<p>// TODO przyk\u0142ady funkcji wo\u0142anych przez makra <code>#define PRINT_STDERR() StreamPrinter(stderr, __LINE__, __FILE__)</code></p> <p>//TODO kopiuj obrazki o oryginalnych notatek // TODO opisz const dla <code>const int* var</code> vs <code>int const *var</code></p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/","title":"Zbi\u00f3r informacji o C++","text":"<p>Oficjalna dokumentacja i zalecenia: ISO CPP GUIDELINES</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#dane-i-struktury","title":"Dane i struktury","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#proste-typy-danych","title":"Proste typy danych","text":"<p>Proste typy zmiennych:</p> <ul> <li><code>int</code> - liczba ca\u0142kowita</li> <li><code>float</code> - liczba zmiennoprzecinkowa</li> <li><code>double</code> - liczba zmiennoprzecinkowa podw\u00f3jnej precyzji</li> <li><code>char</code> - pojedynczy znak</li> <li><code>bool</code> - warto\u015b\u0107 logiczna</li> <li><code>void</code> - brak warto\u015bci</li> </ul>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#kontenery","title":"Kontenery\ud83d\udce6","text":"<p>W bibliotekach standardowych C++ mamy nast\u0119puj\u0105ce typy kontener\u00f3w:</p> <ul> <li>Sekwencyjne</li> <li><code>vector</code> - jednowymiarowa tablica</li> <li><code>string</code> - jednowymiarowa tablica</li> <li><code>list</code> - lista dwukierunkowa</li> <li><code>deque</code> - kolejka o dw\u00f3ch ko\u0144cach</li> <li>Asocjacyjne</li> <li><code>set</code> - usuwa elementy r\u00f3wnowa\u017cne</li> <li><code>map</code> - tablica asocjacyjna (s\u0142ownik)</li> <li><code>multiset</code> - nie usuwa el. r\u00f3wnowa\u017cnych</li> <li><code>multimap</code> - klucz mo\u017ce wyst\u0119powa\u0107 wielokrotnie</li> <li>Haszuj\u0105ce (unordered_)</li> <li><code>unordered_set</code></li> <li><code>unordered_map</code></li> <li><code>unordered_multiset</code></li> <li><code>unordered_multimap</code></li> </ul> <p>Mo\u017cna te\u017c je podzieli\u0107 wzgl\u0119dem tego na czym bazuj\u0105:</p> <ul> <li>Tablice: vector, string, array</li> <li>W\u0119z\u0142y: list, set, map, multiset, multimap, unordered_set, unordered_map, unordered_multiset, unordered_multimap</li> </ul> <p>Kontenery biblioteki standardowej operuj\u0105 na kopiach element\u00f3w. W przypadku, gdy chcemy operowa\u0107 na oryginalnych elementach, nale\u017cy u\u017cy\u0107 wska\u017anik\u00f3w lub referencji.</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#vector","title":"Vector","text":"<p>Podstawowym kontenerem w C++ jest <code>std::vector</code>, kt\u00f3ry jest odpowiednikiem tablicy dynamicznej w C.</p> <pre><code>#include &lt;vector&gt;\nstd::vector &lt;int&gt; zero_vector(5); //wektor zainicjalizowany 5 zerami\n\n//wektor zainicjalizowany podanymi warto\u015bciami\nstd::vector&lt;int&gt; numbers = {1, 2, 3, 4, 5};\n\nnumbers[0] = 10; //zmiana warto\u015bci pierwszego elementu\n</code></pre> <p>Metody dost\u0119pu (mog\u0105 by\u0107 u\u017cywane tak\u017ce do zmieniania warto\u015bci):</p> <ul> <li><code>at(index)</code> - zwraca element na danym indeksie (w razie problem\u00f3w rzuca wyj\u0105tek <code>std::out_of_range</code>)</li> <li>operator <code>[]</code> - zwraca element na danym indeksie (nie sprawdza czy indeks jest poprawny)</li> <li><code>front()</code> - zwraca pierwszy element</li> <li><code>back()</code> - zwraca ostatni element</li> </ul> <p>Metody modyfikuj\u0105ce:</p> <ul> <li><code>push_back(elem)</code> - dodaje element na koniec</li> <li><code>pop_back()</code> - usuwa element (nie zwraca go).</li> <li><code>size()</code> - zwraca ilo\u015b\u0107 element\u00f3w</li> <li><code>clear()</code> - usuwa wszystkie elementy</li> </ul>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#list","title":"List","text":"<p><code>std::list</code> jest to lista dwukierunkowa, kt\u00f3ra pozwala na szybkie dodawanie i usuwanie element\u00f3w z pocz\u0105tku i ko\u0144ca listy. Nie posiada operatora <code>[]</code>, wi\u0119c dost\u0119p do element\u00f3w odbywa si\u0119 za pomoc\u0105 iterator\u00f3w.</p> <pre><code>#include &lt;list&gt;\n\nstd::list&lt;int&gt; numbers = {1, 2, 3, 4, 5};\n</code></pre> <p>Metody dost\u0119pu:</p> <ul> <li><code>front()</code></li> <li><code>back()</code></li> </ul> <p>Metody modyfikuj\u0105ce:</p> <ul> <li><code>push_front(elem)</code>, <code>push_back(elem)</code></li> <li><code>pop_front()</code>, <code>pop_back()</code></li> <li><code>insert(iterator, elem)</code></li> <li><code>erase(iterator)</code></li> </ul>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#stdset","title":"std::set","text":"<p>Jest to kontener zawieraj\u0105cy kolekcj\u0119 niepowtarzalnych element\u00f3w.</p> <p>Eliminuje on elementy r\u00f3wnowa\u017cne <code>a jest r\u00f3wnowa\u017cne b, je\u017celi !(a &lt; b) &amp;&amp; !(b &lt; a)</code></p> <pre><code>#include &lt;set&gt;\n\nstd::set&lt;int&gt; numbers = {1, 2, 3, 4, 5};\n\nset&lt;int&gt; s; //zbi\u00f3r liczb ca\u0142kowitych\ns.insert(1); //dodaje elementy do kolekcji\ns.insert(1); //ta operacja jest pusta (usuwa elementy r\u00f3wnowa\u017cne)\ns.insert(2);\nassert( s.size() == 2); //bada liczb\u0119 element\u00f3w\nassert( s.count(1) == 1 ); //zlicza liczb\u0119 wyst\u0105pie\u0144 elementu\n</code></pre> <p>set jest zaimplementowany jako drzewo czerwono-czarne, co pozwala na szybkie dodawanie i usuwanie element\u00f3w. Z tego powodu potrzebuje on operator\u00f3w <code>&lt;</code> i <code>==</code> dla swoich element\u00f3w.</p> <pre><code>#include &lt;set&gt;\n\ntypedef std::pair&lt;int,int&gt; para;\n//Aby zdefiniowa\u0107 set z parami, musimy zdefiniowa\u0107 operator &lt; dla pary\nbool operator&lt;(const para&amp; a, const para&amp; b) {\nreturn a.first &lt; b.first || (a.first == b.first &amp;&amp; a.second &lt; b.second);\n}\n\nstd::set&lt;para&gt; pary = {para(1, 2), para(2, 3)};\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#ciagi-znakow-stdstring","title":"Ci\u0105gi znak\u00f3w <code>std::string</code>","text":"<p><code>std::string</code> jest to kontener przechowuj\u0105cy ci\u0105gi znak\u00f3w.</p> <pre><code>#include &lt;string&gt;\n\nstd::string s = \"Hello, World!\";\n</code></pre> <p>Stringi nie s\u0105 typowymi kontenerami. Maj\u0105 one wiele metod do mnipulaji nimi.</p> <p>Metody do konwersji:</p> <ul> <li><code>std::string::c_str()</code> - zwraca wska\u017anik do tablicy znak\u00f3w (kiedy potrzebujemy kompatybilno\u015bci z C)</li> <li><code>atoi(str)</code>, <code>atof(str)</code>, <code>atol(str)</code> - konwertuj\u0105 string na liczb\u0119 (nie s\u0105 to metody klasy string, ale funkcje globalne)</li> <li><code>std::to_string(num)</code> - konwertuje liczb\u0119 na string</li> </ul> <p>Metody do edycji:</p> <ul> <li><code>std::string::erase(start, length)</code> - usuwa podci\u0105g</li> <li><code>std::string::replace(start, length, str)</code> - zamienia podci\u0105g na inny</li> <li><code>std::string::append(str)</code> - dodaje string na koniec (analogiczny do operatora <code>+</code>)</li> </ul> <p>Inne:</p> <ul> <li><code>std::string::compare(str)</code> - por\u00f3wnuje dwa stringi (zwraca 0, je\u017celi s\u0105 r\u00f3wne lub liczb\u0119 ujemn\u0105/dodatni\u0105, je\u017celi pierwszy jest mniejszy/wi\u0119kszy od drugiego)</li> </ul> <pre><code>std::string s1 = \"abc\";\nstd::string s2 = \"def\";\nassert(s1.compare(s2) &lt; 0);\n</code></pre> <p>Do por\u00f3wna\u0144 mo\u017cna te\u017c u\u017cy\u0107 operator\u00f3w <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code></p> <ul> <li><code>std::string::substr(start, length)</code> - zwraca podci\u0105g stringa</li> <li><code>std::string::find(str)</code> - zwraca pozycj\u0119, na kt\u00f3rej zaczyna si\u0119 podci\u0105g (lub <code>std::string::npos</code>, je\u017celi nie znaleziono)</li> </ul> <pre><code>std::string s = \"Hello, World!\";\nassert(s.find(\"World\") == 7);\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#klasy","title":"Klasy","text":"<p>Prosta przyk\u0142adowa klasa w C++</p> <pre><code>using namespace std;\n\n// sama deklaracja klasy w pliku nag\u0142\u00f3wkowym .hpp\nclass User{\npublic:\n// prosty konstruktor z domy\u015bln\u0105 warto\u015bci\u0105 dla nazwiska\nUser(string name, string surname = \"Kowal\");\nprotected:\nint id = -1; //ustawiona domy\u015blna warto\u015b\u0107 jako -1\nint get_proper_id();\nprivate:\nstring name;\nstring surname;\n//Destruktor wo\u0142any podczas usuwania klasy\n~User();\n};\n\n// definicje konkretnych metod umieszcza si\u0119 w pliku \u017ar\u00f3d\u0142owym .cpp\nUser::User()\n:name(name),surname(surname) // lista inicjalizacyjna\n{\nid = get_proper_id();\n}\n\nint User::get_proper_id()\n{\n/////kod\n}\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#kontrola-dostepu-do-skadnikow","title":"Kontrola dost\u0119pu do sk\u0142adnik\u00f3w","text":"<p>W ramach klas mo\u017cemy ograniczy\u0107 dost\u0119p do jej sk\u0142adnik\u00f3w, dzi\u0119ki czemu mo\u017cemy dok\u0142adnie okre\u015bli\u0107, kt\u00f3re elementy powinny stanowi\u0107 publicznie dost\u0119pne elementy API dla danej klasy, a kt\u00f3re nie.</p> <p>Wyr\u00f3\u017cniamy tutaj 3 rodzaje dost\u0119pu (etykiet dla element\u00f3w):</p> <ul> <li><code>private</code> - sk\u0142adniki oznaczone jako private s\u0105 dost\u0119pne tylko dla funkcjo sk\u0142adowych dla danej klasy (no i i dla klas zaprzyja\u017anionych)</li> <li><code>protected</code> - tak jak private + dodatkowo jest dost\u0119pny dla klas dziedzicz\u0105cych</li> <li><code>public</code> - dost\u0119pny bez ogranicze\u0144</li> </ul> <p>Na og\u00f3\u0142 w ramach definicji klasy najpierw umieszcza si\u0119 elementy publiczne (jako najbardziej interesuj\u0105ce dla u\u017cywaj\u0105cych nasz obiekt), potem protected i na samym ko\u0144cu private.</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#funkcje-i-klasy-zaprzyjaznione","title":"Funkcje i klasy zaprzyja\u017anione","text":"<p>link</p> <p>Czasami w C++ mo\u017ce pojawi\u0107 si\u0119 potrzeba dost\u0119pu do prywatnych lub chronionych p\u00f3l wybranej klasy poza ni\u0105 sam\u0105. Wtedy przydaje nam si\u0119 koncept klas zaprzyja\u017anionych (friend classes and functions). Warto tutaj pami\u0119ta\u0107 o tym, \u017ce na og\u00f3\u0142 takie operacje to z\u0142y pomys\u0142.</p> <pre><code>class Customer\n{\n// klasa, kt\u00f3ra mo\u017ce by\u0107 wygodnie printowana, albo czytana za pomoc\u0105 iostreama\nfriend std::ostream &amp;operator&lt;&lt;( std::ostream &amp;, const Customer &amp; );\nfriend std::istream &amp;operator&gt;&gt;( std::istream &amp;, Customer &amp; );\n\nprivate:\nstd::string name;\nstd::string surname\npublic:\nCustomer(std::string name, std::string surname):name(name),surname(surname){};\n};\n\nint main()\n{\nCustomer c = Customer(\"Jan\",\"K\");\nstd::cout&lt;&lt;c;\n}\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#funkcje-wirtualne","title":"Funkcje wirtualne","text":"<p>s\u0105 oznaczane za pomoc\u0105 s\u0142owa kluczowego <code>virtual</code>. Bez s\u0142owa <code>virtual</code> kompilator nie wiedzia\u0142by, \u017ce funkcja jest zale\u017cna od tego jak\u0105 klas\u0119 mamy pod wska\u017aniekiem (po prostu wywo\u0142ywa\u0142by metod\u0119 odpowiadaj\u0105c\u0105 temu na jak\u0105 klas\u0119 mamy obecnie zmapowany nasz wska\u017anik).</p> <pre><code>class Base {\npublic:\nvirtual void print() {\ncout &lt;&lt; \"Base Function\" &lt;&lt; endl;\n}\n};\n\nclass Derived : public Base {\npublic:\nvoid print() {\ncout &lt;&lt; \"Derived Function\" &lt;&lt; endl;\n}\n};\n\nint main() {\nDerived derived1;\n\n// pointer of Base type that points to derived1\nBase* base1 = &amp;derived1;\n\n// calls member function of Derived class\nbase1-&gt;print();\n\nreturn 0;\n}\n</code></pre> <p>Podczas pracy z funkcjami wirtualnymi dobr\u0105 praktyk\u0105 jest korzystanie ze specyfikatora override. Dzi\u0119ki jego u\u017cyciu w klasie potomnej b\u0119dziemy mie\u0107 pewno\u015b\u0107, \u017ce ta funkcja w klasie bazowej jest wirtualna.</p> <pre><code>struct A\n{\nvirtual void foo();\nvoid bar();\nvirtual ~A();\n};\n\n// member functions definitions of struct A:\nvoid A::foo() { std::cout &lt;&lt; \"A::foo();\\n\"; }\nA::~A() { std::cout &lt;&lt; \"A::~A();\\n\"; }\n\nstruct B : A\n{\n//  void foo() const override; // Error: B::foo does not override A::foo\n// (signature mismatch)\nvoid foo() override; // OK: B::foo overrides A::foo\n//  void bar() override; // Error: A::bar is not virtual\n~B() override; // OK: `override` can also be applied to virtual\n// special member functions, e.g. destructors\n};\n</code></pre> <p>Kiedy chcemy jaki\u015b abstrakcyjny interfejs mo\u017cemy wymusi\u0107 na klasach potomnych implementacj\u0119 zaznaczaj\u0105c brak implementacji w interfejsie:</p> <pre><code>virtual int getValue() = 0;\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#funkcje-const","title":"Funkcje <code>const</code>","text":"<p>Kiedy chcemy zaznaczy\u0107, \u017ce metoda w naszej klasie nie zmodyfikuje jej wykorzystuje si\u0119 s\u0142owo kluczowe <code>const</code>. Warto tutaj uwa\u017ca\u0107, aby nie pomyli\u0107 takich deklaracji z deklaracjami zwracaj\u0105cymi warto\u015bci typu const.</p> <pre><code>class User{\n/// kod\n\n// ta metoda nie mo\u017ce zmodyfikowa\u0107 \u017cadnych danych w klasie\nstd::string getName() const;\n//tutaj kompilator pozwoli nam zmodyfikowa\u0107 dane w instancji klasy\nconst std::string getSurname();\n}\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#funkcje","title":"Funkcje","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#lambdy","title":"Lambdy","text":"<p>Sk\u0142adnia lambdy:</p> <ul> <li><code>[]</code> - Tu podajemy list\u0119 przechwytywania</li> <li><code>[x]</code> - przechwytuje obiekt x (tylko odczyt)</li> <li><code>[&amp;x]</code> - przechwytuje obiekt x (odczyt i zapis)</li> <li><code>[=]</code> - dowolny obiekt ze scope'a do odczytu</li> <li><code>[&amp;]</code> - dowolny obiekt ze scope'a do odczytu i zapisu</li> <li><code>()</code> - argumenty, jakie ma przyjmowa\u0107 wyra\u017cenie lambda. (Opcjonalne)</li> <li>atrybuty wyra\u017cenia lambda, z mo\u017cliwych atrybut\u00f3w w tym momencie najistotniejszy jest mutable, kt\u00f3ry sprawia \u017ce zmienne przechwycone przez warto\u015b\u0107 mog\u0105 by\u0107 modyfikowane wewn\u0105trz cia\u0142a wyra\u017cenia. (Opcjonalne)</li> <li><code>-&gt; T</code> - typ zwracany (Opcjonalne)</li> <li><code>{}</code> - cia\u0142o wyra\u017cenia</li> </ul> <pre><code>//Najprostsza mo\u017cliwa lambda\n[] { }();\n\n[]( int a )-&gt;float\n{\nif( a &lt; 0 )\nreturn 0;\n\nreturn a * 0.5f;\n}\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#przekazywanie-argumentow-do-funkcji","title":"Przekazywanie argument\u00f3w do funkcji","text":"<p>W C++ istniej\u0105 r\u00f3\u017cne sposoby na przekazywanie argument\u00f3w do funkcji.</p> <ul> <li>poprzez kopi\u0119 - w domy\u015blnym wypadku do naszej funkcji przekazywana jest kopia naszego obiektu.   O ile to nie jest problem przy liczbach to przy wi\u0119kszych obiektach to to mo\u017ce by\u0107 ju\u017c problem.</li> <li>poprzez wska\u017anik - jest to opcja zalecana bardziej przy kodzie napisanym w czystym C, czy te\u017c w wypadku, gdy chcemy sobie zastrzec mo\u017cliwo\u015b\u0107 przekazania pustego wska\u017anika.</li> <li>poprzez referencj\u0119 - jest to spos\u00f3b zbli\u017cony do wska\u017anika, do funkcji przekazujemy referencj\u0119 do naszego obiektu.</li> </ul> <pre><code>class Klasa\n{\nprivate:\n/* data */\npublic:\nKlasa(/* args */)\n{\nstd::cout &lt;&lt; \"Wo\u0142anie konstruktora\\n\";\n}\n\nKlasa(const Klasa&amp; other)\n{\nstd::cout &lt;&lt; \"Wo\u0142anie konstruktora kopiuj\u0105cego\\n\";\n}\n};\n\nvoid funkcja_zwykla(Klasa k) {}\nvoid funkcja_pointer(Klasa *k) {}\nvoid funkcja_referencja(Klasa &amp;k) {}\n\nint main()\n{\nKlasa k = Klasa();\nstd::cout &lt;&lt; \"funkcja_zwykla:\\n\";\nfunkcja_zwykla(k);\nstd::cout &lt;&lt; \"funkcja_pointer:\\n\";\nfunkcja_pointer(&amp;k);\nstd::cout &lt;&lt; \"funkcja_referencja:\\n\";\nfunkcja_referencja(k);\n}\n</code></pre> <p>program wypisze:</p> <pre><code>Wo\u0142anie konstruktora\nfunkcja_zwykla:\nWo\u0142anie konstruktora kopiuj\u0105cego\nfunkcja_pointer:\nfunkcja_referencja:\n</code></pre> <p>W wypadku przekazywania poprzez referencj\u0119 lub wska\u017anik nale\u017cy pami\u0119ta\u0107 o tym, \u017ce zmiany obiektu, kt\u00f3re mia\u0142y miejsce wewn\u0105trz funkcji b\u0119d\u0105 nadal widoczne z zewn\u0105trz, poniewa\u017c operujemy tam na tej samej instancji obiektu. Aby unikn\u0105\u0107 takich problem\u00f3w warto przekazywa\u0107 te argumenty jako <code>const</code>, albo zastanowi\u0107 si\u0119, czy jednak kopia nie b\u0119dzie lepsza.</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#l-value-r-value-i-stdmove","title":"L-Value, R-Value i std::move","text":"<p>L-Value - jest to obiekt, kt\u00f3ry ma swoje miejsce w pami\u0119ci, czyli mo\u017cemy go zmienia\u0107, przypisywa\u0107 do niego warto\u015bci, pozyska\u0107 jego po\u0142o\u017cenie itp. Jest on odniesieniem do konkretnego miejsca w pami\u0119ci. Jest to wyra\u017cenie zwb\u0119d\u0105ce referencj\u0105 na obiekt.</p> <p>R-Value - jest to obiekt, kt\u00f3ry nie ma swojego miejsca w pami\u0119ci, czyli nie mo\u017cemy go zmienia\u0107, przypisywa\u0107 do niego warto\u015bci itp. W niekt\u00f3rych wypadkach mo\u017cna powiedzie\u0107, \u017ce to on jest warto\u015bci\u0105. Nie mo\u017cemy do niego przypisa\u0107 jakiej\u015b chcianej przez nas warto\u015bci.</p> <pre><code>int a = 5; //a jest L-Value, a 5 jest R-Value\n\nint &amp;foo(){\nstatic int i=5;\nreturn i;\n}\n\nfoo()// L-Value poniewa\u017c zwraca referencj\u0119 na i\n\nstruct St{\nint x;\n}\n\nSt s; // s jest L-Value\ns.x = 5; // s.x jest L-Value\n\nBar(); // R-Value poniewa\u017c nie zwraca referencji, lecz jest nowym obiektem\n</code></pre> <p>Jednym z przyk\u0142ad\u00f3w zastosowania tej wiedzy jest przypisywanie warto\u015bci do obiekt\u00f3w.</p> <pre><code>int i=32;\nint j=99;\nint *p = &amp;i;\n7 = i; //b\u0142\u0105d kompilacji, 7 jest R-Value\n\n*p = j; //poprawne, *p jest L-Value\n\n((i&gt;21) ? i : j) = 42; //dozwolone, poniewa\u017c wyra\u017cenie po lewej zwraca jedno z dw\u00f3ch l-value\n</code></pre> <p>Jednak najcz\u0119stszym wykorzystaniem tych poj\u0119\u0107 jest <code>std::move</code>. Jest to funkcja, kt\u00f3ra pozwala na przeniesienie obiektu z jednego miejsca do drugiego. Jest to bardzo przydatne w przypadku, gdy chcemy przenie\u015b\u0107 obiekt, a nie kopiowa\u0107 go, poniwea\u017c kopiowanie obiekt\u00f3w mo\u017ce by\u0107 kosztowne. link1</p> <pre><code>template &lt;class T&gt; swap(T&amp; a, T&amp; b)\n{\nT tmp(a);   // teraz mamy 2 kopie a\na = b;      // teraz mamy 2 kopie b\nb = tmp;    // teraz mamy 2 kopie tmp (czyli a)\n}\n// aby zrobi\u0107 to bez kopii mo\u017cemy u\u017cy\u0107 std::move\ntemplate &lt;class T&gt; swap(T&amp; a, T&amp; b)\n{\nT tmp(std::move(a));\na = std::move(b);\nb = std::move(tmp);\n}\n</code></pre> <p>Z jego pomoc\u0105 m\u00f3wimy te\u017c kompilatorowi, \u017ce nie zamierzamy ju\u017c korzysta\u0107 z danego obiektu, po przekazaniu.</p> <pre><code>std::vector&lt;int&gt; v1 = {1, 2, 3, 4, 5};\nstd::vector&lt;int&gt; v2 = std::move(v1); //przenosimy v1 do v2\n// v1.clear(); //b\u0142\u0105d kompilacji, v1 jest ju\u017c przeniesione i nie powinni\u015bmy z niego korzysta\u0107\n</code></pre> <p><code>std::move</code> \u0142\u0105czy si\u0119 z operatorem <code>&amp;&amp;</code>, kt\u00f3ry jest oznaczeniem R-Value Reference.</p> <pre><code>class Klasa\n{\npublic:\nObj o;\nKlasa() {}\n// prosty konstruktor przenosz\u0105cy\nKlasa(Klasa&amp;&amp; other): o(std::move(other.o)) {}\n};\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#mechanizmy-jezyka","title":"Mechanizmy j\u0119zyka","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#zarzadzanie-pamiecia","title":"Zarz\u0105dzanie pami\u0119ci\u0105","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#new-i-delete","title":"<code>new</code> i <code>delete</code>","text":"<p>Zarz\u0105dzanie pami\u0119ci\u0105 w C++ jest podobne do zarz\u0105dzania w C. Jednak jest oparta o s\u0142owa kluczowe <code>new</code> i <code>delete</code>. (NIGDY nie mieszajmy tych dw\u00f3ch sposob\u00f3w)</p> <p>artyku\u0142</p> <p><code>new</code> s\u0142u\u017cy do tworzenia nowych obiekt\u00f3w i alokowania pami\u0119ci dla nich, natomiast <code>delete</code> s\u0142u\u017cy do zwalniania zarezerwowanej wcze\u015bniej pami\u0119ci.</p> <p>Przyk\u0142ad u\u017cycia s\u0142owa kluczowego new:</p> <pre><code>int *p = new int; // alokuje pami\u0119\u0107 dla zmiennej typu int\n*p = 5; // przypisuje warto\u015b\u0107 5 do zmiennej\ndelete p; // zwalnia pami\u0119\u0107 zarezerwowan\u0105 dla zmiennej p\n</code></pre> <p>Mo\u017cliwe jest tak\u017ce u\u017cycie s\u0142owa kluczowego new do tworzenia tablic dynamicznych:</p> <pre><code>int *tab = new int[10]; // alokuje pami\u0119\u0107 dla tablicy 10-elementowej\ntab[0] = 5; // przypisuje warto\u015b\u0107 5 do pierwszego elementu tablicy\ndelete[] tab; // zwalnia pami\u0119\u0107 zarezerwowan\u0105 dla tablicy tab\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#sprytne-wskazniki-smart-pointers","title":"Sprytne wska\u017aniki - Smart Pointers","text":"<p>W zwi\u0105zku z wieloma problemami wyst\u0119puj\u0105cymi przy zarz\u0105dzaniu pami\u0119ci\u0105 w C++, takimi jak wycieki pami\u0119ci, powsta\u0142y tzw. smart pointery. S\u0105 to obiekty, kt\u00f3re pomagaj\u0105 zautomatyzowa\u0107 zarz\u0105dzanie pami\u0119ci\u0105.</p> <ul> <li><code>std::unique_ptr</code> - jest to smart pointer, kt\u00f3ry przechowuje wska\u017anik do obiektu i zwalnia pami\u0119\u0107 po wyj\u015bciu poza zakres. Nie mo\u017cna go kopiowa\u0107, ale mo\u017cna przenie\u015b\u0107.</li> </ul> <pre><code>std::unique_ptr&lt;int&gt; p(new int);\n*p = 5;\n</code></pre> <ul> <li>obiekty unique_ptr maj\u0105 wielko\u015b\u0107 zwyk\u0142ego wska\u017anika</li> <li>zast\u0105pi\u0142 on <code>auto_ptr</code> z C++98</li> <li>automatycznie usuwaj\u0105 wskazywany obiekt w destruktorze</li> <li>mog\u0105 by\u0107 przechowywane w kontenerach standardowych</li> <li>nie mo\u017cna kopiowa\u0107, ale mo\u017cna przenie\u015b\u0107</li> </ul> <pre><code>  std::unique_ptr&lt;Foo&gt; f() {\nreturn std::unique_ptr&lt;Foo&gt;(new Foo(42));\n}\nstd::unique_ptr&lt;Foo&gt; q = f(); //konstruktor kopiuj\u0105cy z r-value\n// v.push_back(p); //b\u0142\u0105d kompilacji - nie ma konstruktora kopiuj\u0105cego\nv.push_back( std::move(p) ); //v staje si\u0119 w\u0142. wskazywanego obiektu\n//teraz p wskazuje na null\n</code></pre> <ul> <li> <p><code>std::shared_ptr</code> - jest to smart pointer, kt\u00f3ry przechowuje wska\u017anik do obiektu i zwalnia pami\u0119\u0107 po wyj\u015bciu poza zakres, je\u017celi nie ma innych shared_ptr wskazuj\u0105cych na ten obiekt. Mo\u017cna go kopiowa\u0107.</p> </li> <li> <p>obiekty shared_ptr maj\u0105 dodatkowo licznik referencji</p> </li> <li>konstruktor ustwia licznik na 1</li> <li>konstruktor kopiuj\u0105cy zwi\u0119ksza licznik referencji</li> <li>destruktor zmniejsza licznik</li> </ul> <pre><code>#include &lt;memory&gt;\nclass Foo { /* ... */ };\n{\nstd::shared_ptr&lt;Foo&gt; p1(new Foo(1) );\n{\nstd::shared_ptr&lt;Foo&gt; p2(p1);\n//licznik odniesien == 2\n/* ... */\n} //destruktor p2, licznik = 1\n} //destruktor p1 usuwa obiekt\n</code></pre> <ul> <li> <p><code>std::weak_ptr</code> - jest to smart pointer, kt\u00f3ry przechowuje wska\u017anik do obiektu, ale nie zwi\u0119ksza licznika referencji. Mo\u017cna go kopiowa\u0107.</p> </li> <li> <p>u\u017cywany do unikni\u0119cia cyklicznych referencji</p> </li> <li>nie zwi\u0119ksza licznika referencji</li> <li>nie ma operatora <code>-&gt;</code> ani <code>*</code></li> <li>mo\u017cna go zamieni\u0107 na shared_ptr za pomoc\u0105 <code>lock()</code></li> </ul> <pre><code>std::shared_ptr&lt;int&gt; p(new int(42));\nstd::weak_ptr&lt;int&gt; q(p);\nif (std::shared_ptr&lt;int&gt; r = q.lock()) {\n// r jest teraz shared_ptr\n}\n</code></pre> <p>Przy okazji korzystania ze sprytnych wska\u0144nik\u00f3w warto wspomni\u0107 o istnieniu funkcji <code>std::make_shared</code> i <code>std::make_unique</code>, kt\u00f3re pozwalaj\u0105 na tworzenie obiekt\u00f3w bezpo\u015brednio w smart pointerach, bez u\u017cywaniu operatora <code>new</code>.</p> <pre><code>#include &lt;boost/make_shared.hpp&gt;\nstd::shared_ptr&lt;Foo&gt; pf = make_shared&lt;Foo&gt;(); //konstruktor domy\u015blny\nstd::shared_ptr&lt;Foo&gt; pf2 = make_shared&lt;Foo&gt;(arg1,...,argN);\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#petle","title":"P\u0119tle","text":"<p>Typy p\u0119tli:</p> <ul> <li>Podstawowa p\u0119tla <code>for</code></li> </ul> <pre><code>for (int i = 0; i &lt; 5; ++i)\n</code></pre> <ul> <li>p\u0119tla <code>while</code></li> </ul> <pre><code>int j = 0;\nwhile (j &lt; 10) {\n// r\u00f3b co\u015b\n++j;\n}\n</code></pre> <ul> <li>p\u0119tla <code>do-while</code></li> </ul> <pre><code>int k = 0;\ndo {\n// Wykonuj przynajmniej raz, potem sprawdzaj warunek\n++k;\n} while (k &lt; 3);\n</code></pre> <ul> <li>range-based <code>for</code> - jest to zalecana metoda dla zbior\u00f3w iterowalnych</li> </ul> <pre><code>std::vector&lt;int&gt; numbers = {1, 2, 3, 4, 5};\nfor (int num : numbers) {\n// Iteracja po elementach kontenera\n}\n</code></pre> <p>W wypadku bardziej z\u0142o\u017conych obiekt\u00f3w mo\u017cna u\u017cy\u0107 te\u017c referencji</p> <pre><code>for(auto&amp;&amp; element: lista)\n</code></pre> <p>mo\u017ce by\u0107 te\u017c u\u017cywany do rozpakowywania link</p> <pre><code>for (auto&amp;&amp; [first, second] : mymap)\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#wyjatki","title":"Wyj\u0105tki","text":"<p>Wyj\u0105tki s\u0142u\u017c\u0105 do niesekwencyjnego przekazania sterowania, kiedy pojawi si\u0119 jaki\u015b nieoczywisty problem. W C++ wyj\u0105tki s\u0105 rzucane za pomoc\u0105 s\u0142owa kluczowego <code>throw</code>, a \u0142apane za pomoc\u0105 bloku <code>try-catch</code>.</p> <p>S\u0105 rzucane w rzadkich sytuacjach, kiedy nie da si\u0119 kontynuowa\u0107 programu. Nale\u017cy unika\u0107 rzucania wyj\u0105tk\u00f3w w miejscach, gdzie mo\u017cna to zast\u0105pi\u0107 zwracaniem warto\u015bci. (ich koszt obliczeniowy jest du\u017co wi\u0119kszy)</p> <pre><code>try {\nthrow std::runtime_error(\"Error\");\n} catch (std::runtime_error&amp; e) {\nstd::cout &lt;&lt; e.what() &lt;&lt; std::endl;\n}\n</code></pre> <p>Zasady u\u017cywania:</p> <ul> <li>Wyj\u0105tki powinny dziedziczy\u0107 po klasie <code>std::exception</code>.</li> <li>Nie nale\u017cy rzuca\u0107 wyj\u0105tk\u00f3w w destruktorach. Bo podczas wyj\u0105tku niszczymy stare klasy i wtedy po raz drugi wywo\u0142a\u0142by si\u0119 nasz destruktor i poraz drugi pojawi\u0142by si\u0119 wyj\u0105tek.</li> <li>Wyj\u0105tek rzuca\u0107 przez warto\u015b\u0107.</li> </ul> <pre><code>throw Exception //zg\u0142asza wyj\u0105tek przez warto\u015b\u0107\nthrow new Exception;//zajmuje pami\u0119\u0107 na stercie\n</code></pre> <ul> <li>Wyj\u0105tek przechwytywa\u0107 przez referencj\u0119</li> </ul> <pre><code>catch (const Exception&amp; e) //przechwytuje przez referencj\u0119\n//catch(Exception e) //tworzy lokaln\u0105 kopi\u0119\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#templatki","title":"Templatki","text":"<p>Pozwalaj\u0105 kompilatorowi na \u0142atw\u0105 autogeneracj\u0119 kodu.</p> <p>Templatka metody</p> <pre><code>template &lt;class myType&gt;\nmyType GetMax (myType a, myType b) {\nreturn (a&gt;b?a:b);\n}\n</code></pre> <p>Templatka klasy</p> <pre><code>template &lt;class T&gt;\nclass mypair {\nT values [2];\npublic:\nmypair (T first, T second)\n{\nvalues[0]=first; values[1]=second;\n}\n};\n</code></pre> <p>Specjalizacje templatek - pozwalaj\u0105 na \u0142atwe doprecyzowanie implementacji dla pewnych \u015bci\u0107le okre\u015blonych typ\u00f3w.</p> <pre><code>template &lt;class T&gt; class mycontainer { ... };\ntemplate &lt;&gt; class mycontainer &lt;char&gt; { ... };\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#typy-castow-operatorow-rzutowania","title":"Typy cast\u00f3w (operator\u00f3w rzutowania)","text":"<p>U\u017cywaj\u0105c tych operator\u00f3w na og\u00f3\u0142 powinno si\u0119 operowa\u0107 na wska\u017anikach (albo referencjach)</p> <ul> <li><code>static_cast&lt;naCoChcemyZrzutowac&gt;(wyrazenie)</code> - wykorzystywany do konwersji danych w zmiennych r\u00f3\u017cnych typ\u00f3w (np pomi\u0119dzy typami reprezentuj\u0105cymi liczby), jest on wykonywany w trakcie kompilacji.</li> <li><code>dynamic_cast&lt;naCoChcemyZrzutowac&gt;(wyrazenie)</code> - s\u0142u\u017cy do przekszta\u0142cania typ\u00f3w klas pomi\u0119dzy klasami kt\u00f3re po sobie dziedzicz\u0105. W wypadku niepowodzenia zwraca <code>null</code> Wyr\u00f3\u017cniamy:</li> <li>Downcasting - kastujemy klas\u0119 bazow\u0105 na potomn\u0105</li> <li>Upcasting - gdy chcemy uzyska\u0107 instancj\u0119 klasy bazowej</li> <li><code>reinterpret_cast&lt;naCoChcemyZrzutowac&gt;(wyrazenie)</code> - dzia\u0142a podobnie do dynamic casta, ale nie zwraca nulla, zaleca si\u0119 u\u017cywanie tylko kiedy dobrze wiesz co robisz.</li> <li><code>const_cast&lt;naCoChcemyZrzutowac&gt;(wyrazenie)</code> - pozwala zmieni\u0107 sta\u0142\u0105 na zmienn\u0105 i na odwr\u00f3t na og\u00f3\u0142 jego u\u017cywanie nie jest zalecane</li> </ul> <pre><code>     const double liczbaPI = 3.14;\nconst double *wskDoStalej = &amp;liczbaPI;\n\ndouble *wskaznik = const_cast&lt;double *&gt;(wskDoStalej); //przypisujemy dane ze sta\u0142ej do zwyk\u0142ego wska\u017anika\n\ncout &lt;&lt; *wskaznik &lt;&lt; endl; //wypisze 3.14\n*wskaznik = 43;\n// *wskDoStalej = 43; ERROR\ncout &lt;&lt; *wskaznik &lt;&lt; endl; //wypisze 3.14\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#wydajnosc","title":"Wydajno\u015b\u0107","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#watki","title":"W\u0105tki","text":"<p>Jest wiele sposob\u00f3w na w\u0105tki, ale najprostszym do u\u017cycia jest <code>std::thread</code></p> <pre><code>#include &lt;thread&gt;\n\nvoid foo() {\n// funkcja, kt\u00f3r\u0105 chcemy uruchomi\u0107 w nowym w\u0105tku\n}\n\nint main() {\nstd::thread t(foo); // tworzymy nowy w\u0105tek, kt\u00f3ry uruchomi funkcj\u0119 foo\n//robimy co\u015b w g\u0142\u00f3wnym w\u0105tku\nt.join(); // czekamy na zako\u0144czenie w\u0105tku\n}\n</code></pre> <p>W wypadku klas wygl\u0105da to nast\u0119puj\u0105co:</p> <pre><code>#include &lt;thread&gt;\n\nclass Klasa\n{\npublic:\nvoid foo()\n{\n// funkcja, kt\u00f3r\u0105 chcemy uruchomi\u0107 w nowym w\u0105tku\n}\n};\n\nint main()\n{\nKlasa k;\n//std::thread t(&amp;Klasa::moja_metoda,&amp;instancja_klasy, argument1, argument2, argument3);\nstd::thread t(&amp;Klasa::foo, &amp;k); // tworzymy nowy w\u0105tek, kt\u00f3ry uruchomi funkcj\u0119 foo\n//robimy co\u015b w g\u0142\u00f3wnym w\u0105tku\nt.join(); // czekamy na zako\u0144czenie w\u0105tku\n}\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#wielowatkowosc-z-uzyciem-stdpar","title":"Wielow\u0105tkowo\u015b\u0107 z u\u017cyciem <code>std::par</code>","text":"<p>W C++11 i C++17 pojawi\u0142y si\u0119 nowe sposoby przetwarzania wielow\u0105tkowego mog\u0105cego stanowi\u0107 swego rodzaju alternatyw\u0119 dla OpenMP.</p> <p>W tym podej\u015bciu wykorzystujemy standardowe kontenery oraz algorytmy znajduj\u0105ce si\u0119 w bibliotece standardowej. Takie jak <code>std::for_each</code>, <code>std::sort</code>, czy <code>std::reduce</code> etc.</p> <pre><code>#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n\n//Using functor\nstruct Suma\n{\nvoid operator()(int n) { sum += n; }\nint sum{0};\n};\n\nint main()\n{\nstd::vector&lt;int&gt; nums{3, 4, 2, 8, 15, 267};\n\nauto print = [](const int&amp; n) { std::cout &lt;&lt; \" \" &lt;&lt; n; };\n\nstd::cout &lt;&lt; \"before:\";\nstd::for_each(nums.cbegin(), nums.cend(), print);\nstd::cout &lt;&lt; '\\n';\n\nstd::for_each(nums.begin(), nums.end(), [](int &amp;n){ n++; });\n\n// calls Sum::operator() for each number\nSuma s = std::for_each(nums.begin(), nums.end(), Suma());\n\nstd::cout &lt;&lt; \"after: \";\nstd::for_each(nums.cbegin(), nums.cend(), print);\nstd::cout &lt;&lt; '\\n';\nstd::cout &lt;&lt; \"suma: \" &lt;&lt; s.sum &lt;&lt; '\\n';\n}\n</code></pre> <p>Wrac z C++17 do algorytm\u00f3w pojawi\u0142y si\u0119 polityki wykonania (<code>execution policies</code>) kt\u00f3re pozwalaj\u0105 na wykorzystanie wielow\u0105tkowo\u015bci w algorytmach.</p> <p>Wyr\u00f3\u017cnia si\u0119:</p> <ul> <li><code>std::execution::seq</code> - wykonanie sekwencyjne. Domy\u015blna polityka. Zabrania zr\u00f3wnoleglania</li> <li><code>std::execution::par</code> - umo\u017cliwia wykonanie r\u00f3wnoleg\u0142e</li> <li><code>std::execution::par_unseq</code> - umo\u017cliwia wykonanie r\u00f3wnoleg\u0142e i wektorowe //TODO wyja\u015bni\u0107 dok\u0142adniej</li> </ul> <pre><code>std::sort(std::execution::par, c.begin(), c.end());\n</code></pre> <p>Przy wykonaniu r\u00f3wnoleg\u0142ym nale\u017cy pami\u0119ta\u0107, \u017ce zmienne musz\u0105 znajdowa\u0107 si\u0119 na stercie (heap). W przeciwnym wypadku mog\u0105 wyst\u0105pi\u0107 problemy z dost\u0119pem do pami\u0119ci.</p> <pre><code>std::array&lt;int, 1024&gt; a = ...;\nstd::sort(std::execution::par, a.begin(), a.end()); // Error, elementy snadjuj\u0105 si\u0119 na stosie\n\nstd::vector&lt;int&gt; v = ...;\nstd::sort(std::execution::par, v.begin(), v.end()); // OK, wektor alokuje na stercie\n</code></pre> <p>Przy takim podje\u015bciu warto pami\u0119ta\u0107 o ochronie pami\u0119ci. W tym celu mo\u017cna u\u017cy\u0107 <code>std::mutex</code> lub <code>std::atomic</code>.</p> <pre><code>std::atomic&lt;int&gt; *suma = new std::atomic&lt;int&gt;[nbin];\n</code></pre> <p>Dzi\u0119ki uniwersalnemu kodowi mo\u017cliwa jest tak\u017ce kompilacja kodu r\u00f3wloleg\u0142ego w taki spos\u00f3b, aby m\u00f3g\u0142 wykorzysta\u0107 zasoby chocia\u017cby kart graficznych. link dla nvidii CUDA i AMD z ROCm</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#inne-sowa-kluczowe","title":"Inne S\u0142owa kluczowe","text":"<p>explicit TODO</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#nowe-standardy","title":"Nowe standardy","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#c17","title":"C++17","text":"<p>Artyku\u0142</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#c20","title":"C++20","text":"<p>Pe\u0142na lista z om\u00f3wieniem</p> <p>Z fajnych rzeczy s\u0105 kontrakty //TODO C++ contracts https://www.modernescpp.com/index.php/c-core-guidelines-a-detour-to-contracts (similar to java JML, or Dafny for C#)</p> <p>Oraz modu\u0142y https://en.cppreference.com/w/cpp/language/modules.html</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/1_cpp/#do-zrobienia","title":"Do zrobienia","text":"<p>TODO: og\u00f3lnie o klasach i dziedziczeniu, explicit C- czyli co musi by\u0107 kompilowane jako czyste C, typy smart pointer\u00f3w.</p> <p>//TODO VOLATILE https://en.cppreference.com/w/cpp/language/cv</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/2_gdb/","title":"Praca z GDB","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/2_gdb/#kompilacja-z-flagami-debugowymi","title":"Kompilacja z flagami debugowymi","text":"<p>W wypadku najprostszych aplikacji kompilowanych za pomoc\u0105 gcc g++ wystarczy dodanie flagi <code>-g</code></p> <pre><code>gcc -g hello.c\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/2_gdb/#uruchomienie-aplikacji-za-pomoca-gdb","title":"Uruchomienie aplikacji za pomoc\u0105 GDB","text":"<p>Aby uruchomi\u0107 aplikacj\u0119 z pomoc\u0105 debugera wystarczy wpisa\u0107:</p> <pre><code>gdb a.out\n</code></pre> <p>Wtedy uruchamiamy nasz program w trybie terminalowym.</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/2_gdb/#praca-ze-zrzucona-pamiecia-coredump","title":"Praca ze zrzucon\u0105 pami\u0119ci\u0105 (coredump)","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/2_gdb/#przygotowania","title":"Przygotowania","text":"<p>Do stworzenia zrzutu cz\u0119sto nale\u017cy zwi\u0119kszy\u0107 ilo\u015b\u0107 dozwolonej ilo\u015bci pami\u0119ci: <code>ulimit -c unlimited</code></p> <p>Kompilujemy nasz program z flagami debugowymi: - Cmake - <code>cmake .. -DCMAKE_BUILD_TYPE=Debug &amp;&amp; cmake --build .</code> - make - TODO</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/2_gdb/#zbieranie-stosu","title":"Zbieranie stosu","text":"<p>Na og\u00f3\u0142 zrzuty ze stosu s\u0105 pzechowywane w folderze <code>/var/crash</code> s\u0105 to pliki z rozszerzeniem .crash Np <code>_usr_share_teams_teams.1000.crash</code> = \"http://127.0.0.1:5000/\"; // let url2 = \"https://httpbin.org/post\";</p> <p>// xhr.open(\"POST\", url, true); // xhr.setRequestHeader(\"Content-Type\", \"application/json\"); // xhr.onreadystatechange = function () { // console.log(\"Jest git\"); // console.log(this.responseText); // }; // var data = JSON.stringify({ name: \"xxx\", code: \"xx=12\" }); // xhr.send(data);</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/2_gdb/#analiza-w-terminalu","title":"Analiza (w terminalu)","text":"<p>Uruchomienie <code>gdb ./plik/wykonywalny ./plik/zrzutu/core</code></p> <p><code>backtrace</code> / <code>bt full</code> - pokazywanie stanu stosu</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/","title":"Programming with OpenMP","text":"<p>OpenMP is an open, multi-platform API specification for easy parallel programming in Fortran, C and C++. Main website</p> <p>OpenMP programming is mainly based on compiler directives.</p> <p><code>#pragma omp &lt;directive&gt; [clause [...]]</code></p> <p>For function usage you have to include <code>omp.h</code></p> <pre><code>#include &lt;omp.h&gt;\n...\niam = omp_get_thread_num();\n</code></pre> <p>Simple usage example</p> <pre><code>void daxpy(int n, double a, double *x, double *y, double *z)\n{\nint i;\n#pragma omp parallel for //the loop below will be executed on multiple cores\nfor (i=0; i&lt;n; i++)\nz[i] = a*x[i] + y[i];\n}\n</code></pre> <p>Compile it with</p> <pre><code>gcc -fopenmp prg-omp.c\n</code></pre> <p>Loop iterations are shared among threads. All the variables are shared except loop variable <code>i</code>, which is private.</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#cmake","title":"Cmake","text":"<p>//TODO</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#threads-management","title":"Threads management","text":"<p>Link do docs</p> <p>Managing threads numbers</p> <pre><code>omp_set_num_threads(x);\nomp_get_num_threads(); // returns the number of threads\nomp_get_thread_num(); // returns the identifier of the thread (starting from 0, main thread is always 0)\n</code></pre> <p>We can also use env variable <code>OMP_NUM_THREADS</code></p> <pre><code>OMP_NUM_THREADS=10 app\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#scheduling","title":"Scheduling","text":"<p><code>schedule(type[,chunk])</code></p> <p>//TODO S2 - slajd 24</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#loop-parallelization","title":"Loop Parallelization","text":"<p>General usage</p> <pre><code>#pragma omp parallel for [clause [...]]\nfor (index=first; test_expr; increment_expr) {\n// loop body\n}\n</code></pre> <p>NOTE - inside of loop we can't use <code>break</code> <code>continue</code> etc (//TODO check this sentence)</p> <p>Thank to clause we may define variables scope, way of obtaining results etc.</p> <p>Clauses:</p> <ul> <li>private -each thread has a different replica</li> <li>shared - each threads can read and write</li> <li>reduction - used when neither private or shared can be used</li> <li>firstprivate, lastprivate</li> <li>default - forces to specify scope of all of variables</li> </ul> <p>By default all of variables are shared with following exceptions:</p> <ul> <li>Index variable of the parallelized loop</li> <li>Local variables of the called subroutines (except if they are declared static)</li> <li>Automatic variables declared inside the loop</li> </ul> <pre><code>sum = 0;\n//for sum shared we have races for private we won't get any result\n#pragma omp parallel for reduction(+:sum)\nfor (i=0; i&lt;n; i++) {\nsum = sum + x[i]*x[i];\n}\n</code></pre> <p>Reduction - allows easy aggregation of results</p> <p><code>reduction (operator : list)</code></p> <p>Available operators: <code>+</code>, <code>*</code>, <code>-</code>, <code>&amp;</code>, <code>|</code>, <code>\u02c6</code>, <code>&amp;&amp;</code>, <code>||</code>, <code>max</code>, <code>min</code></p> <p>firstprivate, lastprivate - in general private variables have undefined value during the first execution and after execution</p> <ul> <li><code>firstprivate</code> initializes to the value of selected variable the begining of the block.</li> </ul> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;omp.h&gt;\n\nint main (void)\n{\nint i = 10;\n#pragma omp parallel firstprivate(i)\n{\n//in case of regular private variable we would get random values\nprintf(\"thread %d: i = %d\\n\", omp_get_thread_num(), i);\ni = 1000;\n}\nprintf(\"i = %d\\n\", i);\nreturn 0;\n}\n</code></pre> <ul> <li><code>lastprivate</code> the value of the variable after the block is the one of the \u201clast\u201d iteration of the loop</li> </ul> <pre><code>alpha = 5.0;\n#pragma omp parallel for firstprivate(alpha) lastprivate(i)\nfor (i=0; i&lt;n; i++) {\nz[i] = alpha*x[i];\n}\nk = i;\n/* i has value n*/\n</code></pre> <p>if clause - runs loop in pararell only if the expression is true (because of the overhead linked with initializing threads)</p> <pre><code>#pragma omp parallel for if(n&gt;5000)\nfor (i=0; i&lt;n; i++)\nz[i] = a*x[i] + y[i];\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#parallel-regions","title":"Parallel Regions","text":"<p>Pragma <code>parallel</code> executes block of code in replicated threads.</p> <pre><code>#pragma omp parallel [clause [clause ...]]\n{\n// block\n}\n</code></pre> <p>Example</p> <pre><code>#pragma omp parallel private(myid)\n{\nmyid = omp_get_thread_num();\nprintf(\"I am thread %d\\n\",myid);\n}\n</code></pre> <p>They are used for sharing work in a bit different manner.</p> <ul> <li>Each thread works on a part of the data structure, or</li> <li>Each thread performs a different operation</li> </ul> <p>Possible mechanisms for worksharing:</p> <ul> <li>Based on the thread identifier</li> </ul> <pre><code>#pragma omp parallel private(myid)\n{\nnthreads = omp_get_num_threads();\nmyid = omp_get_thread_num();\ndowork(myid, nthreads);\n}\n</code></pre> <ul> <li>Parallel task queue</li> </ul> <pre><code>int get_next_task() {\nstatic int index = 0;\nint result;\n#pragma omp critical\n{\nif (index==MAXIDX) result=-1;\nelse { index++; result=index; }\n}\nreturn result;\n}\n...\nint myindex;\n#pragma omp parallel private(myindex)\n{\nmyindex = get_next_task();\nwhile (myindex&gt;-1) {\nprocess_task(myindex);\nmyindex = get_next_task();\n}\n}\n</code></pre> <ul> <li>Using OpenMP specific constructs - thank to them programmer doesn't have to worry about splitting workload. Types:</li> <li>for construct to split iterations of loops</li> <li>Sections to distinguish different parts of the code</li> <li>Code to be executed by a single thread</li> </ul>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#worksharing-constructs","title":"Worksharing constructs","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#the-for-construct","title":"The <code>for</code> construct","text":"<pre><code>#pragma omp parallel\n{\n...\n#pragma omp for\nfor (i=1; i&lt;n; i++)\nb[i] = (a[i] + a[i-1]) / 2.0;\n}\n</code></pre> <p>The loop iterations are not replicated but shared among the threads <code>parallel</code> and <code>for</code> directives can be combined in one.</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#loop-construct-nowait","title":"Loop Construct - <code>nowait</code>","text":"<p><code>nowait</code> Clause - removes implicit barrier after for loop</p> <pre><code>void a8(int n, int m, float *a, float *b, float *y, float *z)\n{\nint i;\n#pragma omp parallel\n{\n#pragma omp for nowait\nfor (i=1; i&lt;n; i++)\nb[i] = (a[i] + a[i-1]) / 2.0;\n\n//loop below can start execution before the one above will finish\n#pragma omp for\nfor (i=0; i&lt;m; i++)\ny[i] = sqrt(z[i]);\n}\n}\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#sections-construct","title":"<code>sections</code> Construct","text":"<p>represents pliece of code, which can be split into small independent sections</p> <ul> <li>Individually they represent little work, or</li> <li>Each fragment is inherently sequential   It can also be combined with parallel</li> </ul> <pre><code>#pragma omp parallel sections\n{\n#pragma omp section\nXaxis();\n#pragma omp section\nYaxis();\n#pragma omp section\nZaxis();\n}\n</code></pre> <p>A thread may execute more than one section Clauses: private, first/lastprivate, reduction, nowait</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#single-and-master-construct","title":"<code>single</code> and <code>master</code> Construct","text":"<p>Code fragments that must be executed by a single thread</p> <pre><code>#pragma omp parallel\n{\n// we will see info about starting and ending work1\n// only once\n#pragma omp single\nprintf(\"work1 starts\\n\");\n\n//Other threads will wait until \"work1 starts\" will be printed\nwork1();\n\n#pragma omp single\nprintf(\"work1 ends\\n\");\n\n\n#pragma omp single nowait\nprintf(\"work1 ended in all of the threads, work2 started\\n\");\nwork2();\n}\n</code></pre> <p><code>master</code> Directive</p> <p>Differences with single:</p> <ul> <li>It does not require all threads to reach this construction</li> <li>There is no implicit barrier (other threads simply skip this code)</li> </ul> <pre><code>#pragma omp parallel\n{\n#pragma omp master\nprintf(\"Begin work\\n\");\n#pragma omp for\nfor (i=0; i&lt;n; i++)\ncalc1();\n\n//this will be launched after finishing loop above\n#pragma omp master\nprintf(\"Work finished\\n\");\n}\n</code></pre> <p>Some allowed clauses: private, firstprivate, nowait</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#synchronization","title":"Synchronization","text":"<p>The main point of synchronization is avoiding race conditions.</p> <p>The most basic way of avoiding this is mutual exclusion. (directive <code>critical</code>, <code>atomic</code> or locks - <code>_lock</code> routines).</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#critical-directive","title":"<code>critical</code> directive","text":"<p><code>#pragma omp critical [(Name)]</code></p> <p>Allows execution of critical section by only one thread at once</p> <pre><code>cur_max = -100000;\n#pragma omp parallel for\nfor (i=0; i&lt;n; i++) {\n#pragma omp critical\nif (a[i] &gt; cur_max) {\ncur_max = a[i];\n}\n}\n</code></pre> <p>When a thread reaches the <code>if</code> block (the critical section), it waits until no other thread is executing it at the same time.</p> <p>Code above is not optimal, because entering critical section costs, and we can limit it</p> <pre><code>cur_max = -100000;\n#pragma omp parallel for\nfor (i=0; i&lt;n; i++) {\nif (a[i] &gt; cur_max) {\n#pragma omp critical\nif (a[i] &gt; cur_max)\ncur_max = a[i];\n}\n}\n</code></pre> <p>We can also use named critical sections</p> <pre><code>cur_max = -100000;\ncur_min = 100000;\n#pragma omp parallel for\nfor (i=0; i&lt;n; i++) {\nif (a[i] &gt; cur_max) {\n#pragma omp critical (maxlock)\nif (a[i] &gt; cur_max)\ncur_max = a[i];\n}\nif (a[i] &lt; cur_min) {\n#pragma omp critical (minlock)\nif (a[i] &lt; cur_min)\ncur_min = a[i];\n}\n}\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#atomic-directive","title":"<code>atomic</code> directive","text":"<p>It is much more efficient than critical section, but supports only very simple operations.</p> <pre><code>#pragma omp atomic\nx &lt;binop&gt;= exp\n</code></pre> <p>where <code>&lt;binop&gt;</code> can be <code>+, *, -, /, %, &amp;, |, ^, &lt;&lt;, &gt;&gt;</code></p> <pre><code>#pragma omp parallel for shared(x, index, n)\nfor (i=0; i&lt;n; i++) {\n#pragma omp atomic\nx[index[i]] += work1(i);\n}\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#barrier-directive","title":"<code>barrier</code> directive","text":"<p>When reaching a barrier, threads wait for the rest to arrive</p> <pre><code>#pragma omp parallel private(index)\n{\nindex = generate_next_index();\nwhile (index&gt;0) {\nadd_index(index);\nindex = generate_next_index();\n}\n#pragma omp barrier\nindex = get_next_index();\nwhile (index&gt;0) {\nprocess_index(index);\nindex = get_next_index();\n}\n}\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#ordered-directive","title":"<code>ordered</code> directive","text":"<p>Ensures, that portions of code in the loops are executed in the original sequential order</p> <pre><code>#pragma omp parallel for ordered\nfor (i=0; i&lt;n; i++) {\na[i] = ...\n/* complex computation */\n#pragma omp ordered\nfprintf(fd, \"%d %g\\n\", i, a[i]);\n}\n</code></pre> <p>Only one ordered section is allowed per iteration</p> <p>//TODO ask about this \u2757 // std::cout &lt;&lt; \"xx\"</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#programming-gpu","title":"Programming GPU","text":"<p>OpenMP can be also used for harnessing compute resources of GPUs like Nvidia.</p> <p>There are some additional clauses like <code>target</code>, </p> <p><code>target</code> construct consists of a target directive and an execution region. target directive defines a target region, a block of computation that operates within a distinct data environment and is intended to be offloaded onto a parallel computation device during execution ( GPU in our case). Data used within the region may be implicitly or explicitly mapped to the device. OpenMP is allowed within target regions, but only a subset will run well on GPUs.</p> <p>This target platform can be a GPU, CPU, or different kind of accelerator</p> <pre><code>while (iter &lt; iter_max )\n{\nerror = 0.0;\n//Moves this region of code to the GPU and implicitly maps data.\n#pragma omp target\n{\n#pragma omp parallel for reduction(max:error)\nfor( int j = 1; j &lt; n-1; j++) {\nANew[j] = A [j-1] + A[j+1];\n}\n}\niter++;\n}\n</code></pre> <p><code>target data</code> - allows to map data to the device.</p> <p><code>#pragma omp target date map(map-type: list)</code></p> <p>mapping types:</p> <ul> <li><code>to</code> - data is copied from the host to the device</li> <li><code>from</code> - data is copied from the device to the host</li> <li><code>alloc</code> - allocates memory ot the device. If the data is already present on the device a reference counter is incremented</li> </ul> <pre><code>while (iter &lt; iter_max )\n{\nerror = 0.0;\n//Moves this region of code to the GPU and explicitly maps data.\n#pragma omp target data map(to:A[:n]) map(from:ANew[:n])\n{\n#pragma omp parallel for reduction(max:error)\nfor( int j = 1; j &lt; n-1; j++) {\nANew[j] = A [j-1] + A[j+1];\n}\n}\niter++;\n}\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/5_openMP/#teams-and-distribute","title":"<code>teams</code> and <code>distribute</code>","text":"<p><code>teams</code> directve creates a league of thread teams where the master thread of each team executes the region. Each of these master threads executes sequentially. In other words, teams directive spawn one or more thread teams with the same number of threads. The execution continues on the master threads of each team (redundantly). There is no synchronization allowed between teams.</p> <p></p> <p>OpenMP calls that somewhere a team, which might be a thread on the CPU or maying a CUDA threadblock or OpenCL workgroup. It will choose how many teams to create based on where you're running, only a few on a CPU (like 1 per CPU core) or lots on a GPU (1000's possibly). teams allow OpenMP code to scale from small CPUs to large GPUs because each one works completely independently of the other teams.</p> <p><code>distribute</code> directive is used to distribute the iterations of a loop across the master threads of the teams.</p> <p>There's a good chance that we don't want the loop to be run redundantly in every master thread of <code>teams</code> though, that seems wasteful and potentially dangerous. With the usage of <code>distribute</code> construct the iterations of the next loop are broken into groups that are distributed to the master threads of the teams. The iterations are distributed statically and there is no guarantee about the order teams will execute. Also it does not generate parallelism/worksharing within the thread teams.</p> <pre><code>#pragma omp target teams distribute\nfor( int j = 1; j &lt; n-1; j++) {\nfor( int i = 1; i &lt; m-1; i++) {\nAnew[j][i] = 0.25 * ( A[j][i+1] + A [j][i-1]\n+ A[j-1][i] + A[j+1][i]);\nerror = fmax (error, fabs(Anew[j][i] - A[j][i]));\n}}\n</code></pre> <p>In many cases compilers can deal with distributing load by themselves using the <code>teams loop</code> construct, which is a shortcut for specifying a teams construct containing a loop construct and no other statements</p> <pre><code>#pragma omp target teams loop reduction(max:error) \nfor( int j = 1; j &lt; n-1; j++) {\n#pragma omp loop reduction(max:error)\nfor( int i = 1; i &lt; m-1; i++ ) {\nAnew[j][i] = 0.25f * ( A[j][i+1] + A[j][i-1]\n+ A[j-1][i] + A[j+1][i]);\nerror = fmaxf( error, fabsf(Anew[j][i]-A[j][i]));\n}\n}\n</code></pre> <p>General execution model for OpenMP:</p> <p>  source: https://www.researchgate.net/figure/OpenMP-40-Execution-model_fig1_335478417</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/","title":"Cmake","text":"<p>Na podstawie: https://cmake.org/cmake/help/latest/guide/tutorial/index.html</p> <p>Inny tutorial: Cmake in 15 min</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#podstawy","title":"Podstawy","text":"<p>Mamy tu minimalny przyk\u0142ad</p> <pre><code>#na pocz\u0105tku zawsze okre\u015blamy min wersj\u0119 CMake'a\ncmake_minimum_required(VERSION 3.10)\n\n# set the project name\nproject(Tutorial)\n\n# Tworzymy tylko jeden plik wyj\u015bciowy `Tutorial` ze skompilowanego pliku tutorial.cxx\nadd_executable(Tutorial tutorial.cxx)\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#budowanie","title":"Budowanie","text":"<pre><code>#warto stworzy\u0107 sobie nowy folder i w nim budowa\u0107\nmkdir build; cd build\n\ncmake SCIEZKA_DO_FOLDERU_GLOWNEGO # zwykle do folderu z plikiem CMakeLists.txt\ncmake --build . #mo\u017cna tu te\u017c u\u017cy\u0107 po prostu make (Linux)\n</code></pre> <p>Inne u\u017cyteczne komendy</p> <pre><code>cmake --build . --target help # wypisanie cel\u00f3w w ramach projektu\n\ncmake --build . --target # budowanie danego celu\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#konfigurowalne-pliki-nagowkowe","title":"Konfigurowalne pliki nag\u0142\u00f3wkowe","text":"<p>Za pomoc\u0105 CMake'a mo\u017cemy generowa\u0107 pliki nag\u0142\u00f3wkowe zawieraj\u0105ce zmienne oraz parametry zawarte w plikach CMake.</p> <p>Przyk\u0142adowo mo\u017cemy w ten spos\u00f3b zapisywa\u0107 wersj\u0119 naszego programu.</p> <pre><code>cmake_minimum_required(VERSION 3.10)\n\n# set the project name and version\nproject(Tutorial VERSION 1.0)\n\n# opisujemy tu na podstawie czego ma by\u0107 wygenerowany nasz plik nag\u0142\u00f3wkowy\nconfigure_file(TutorialConfig.h.in TutorialConfig.h)\n\n# Skoro utworzony zostanie plik TutorialConfig.h to warto doda\u0107 \u015bcie\u017ck\u0119 na kr\u00f3rej si\u0119 znajduje do listy \u015bcie\u017cek w kt\u00f3rych b\u0119d\u0105 szukane pliki\ntarget_include_directories(Tutorial PUBLIC\n\"${PROJECT_BINARY_DIR}\"\n)\n</code></pre> <p>Zawarto\u015b\u0107 pliku TutorialConfig.h.in</p> <pre><code>// the configured options and settings for Tutorial\n#define Tutorial_VERSION_MAJOR @Tutorial_VERSION_MAJOR@\n#define Tutorial_VERSION_MINOR @Tutorial_VERSION_MINOR@\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#okreslenie-wymaganej-wersji-c","title":"Okre\u015blenie wymaganej wersji C++","text":"<pre><code># specify the C++ standard\nset(CMAKE_CXX_STANDARD 11)\nset(CMAKE_CXX_STANDARD_REQUIRED True)\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#biblioteki","title":"Biblioteki","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#tworzenie-wasnych","title":"Tworzenie w\u0142asnych","text":"<p>Podobnie jak programy, za pomoc\u0105 cmake'a mo\u017cemy definiowa\u0107 te\u017c biblioteki W wypadku prostych bibliotek wewn\u0105trz naszych preojekt\u00f3w wystarczy jednolinijkowy plik <code>CMakeLists.txt</code> w ich folderze.</p> <pre><code># Dodaj bibliotek\u0119 o nazwie MathFunctions zawieraj\u0105c\u0105 plik mysqrt.cxx\nadd_library(MathFunctions mysqrt.cxx)\n</code></pre> <p>(Ta biblioteka znajduje si\u0119 w folderze <code>MathFunctions</code> w g\u0142\u00f3wnym folderze projektu. W folderze tym mamy jeszcze plik nag\u0142\u00f3wkowy <code>MathFunctions.h</code>)</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#linkowanie-bibliotek","title":"Linkowanie bibliotek","text":"<pre><code># add the MathFunctions library\nadd_subdirectory(MathFunctions)\n\n# add the executable\nadd_executable(Tutorial tutorial.cxx)\n\n# Musimy podlinkowa\u0107 wszystkie biblioteki u\u017cywane przez plik Tutorial\ntarget_link_libraries(Tutorial PUBLIC MathFunctions)\n\n# add the binary tree to the search path for include files\n# so that we will find TutorialConfig.h\ntarget_include_directories(Tutorial PUBLIC\n\"${PROJECT_BINARY_DIR}\"\n\"${PROJECT_SOURCE_DIR}/MathFunctions\"\n)\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#logika","title":"Logika","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#zmienne","title":"Zmienne","text":"<p>Zmienne s\u0105 definiowane podczas przypisywania im warto\u015bci.</p> <ul> <li>listy</li> </ul> <pre><code># Dodanie elementu do listy\nlist(APPEND EXTRA_LIBS MathFunctions)\n\n# Dodanie element\u00f3w do listy regexem (warto tu pami\u0119ta\u0107, \u017ce domy\u015blnie te\n# te \u015bcie\u017cki s\u0105 globalne, wi\u0119c aby je potem z\u0142apa\u0107 regexem trzeba za\u0142\u00f3\u017cy\u0107, \u017ce zaczynaj\u0105 si\u0119 od /\nfile(GLOB TARGET_SRC \"src/*.cpp\" )\n\n# Usuwanie elementu z listy\nlist(REMOVE_ITEM TARGET_SRC \"/*main.cpp\" )\n</code></pre> <p>Aby zmienna zosta\u0142a podmieniona przez generator na jej zawarto\u015b\u0107 musi by\u0107 ona umieszczona w klamrach, bez nich po prostu przekazujemy stringa.</p> <pre><code>message(HEADERS)\n#&gt;&gt;&gt; [cmake] HEADERS\n</code></pre> <pre><code>message(${HEADERS})\n#&gt;&gt;&gt; [cmake] /include/plik.hpp /inlude/plik2.hpp\n</code></pre> <p>TODO-uporz\u0105dkowa\u0107 ten punkt</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#opcje","title":"Opcje","text":"<p>S\u0105 to parametry dla buildu, kt\u00f3re b\u0119d\u0105 potem tak\u017ce widoczne w narz\u0119dziach z GUI dla CMake.</p> <pre><code>option(USE_MYMATH \"Use tutorial provided math implementation\" ON)\n</code></pre> <p>Ta opcja b\u0119dzie widoczna z domy\u015bln\u0105 warto\u015bci\u0105 <code>ON</code></p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#if-y","title":"IF-y","text":"<p>W CMake'u mo\u017cemy tworzy\u0107 ca\u0142e wyra\u017cenia warunkowe za pomoc\u0105 wcze\u015bniej predefiniowanych amiennych.</p> <pre><code>if(USE_MYMATH)\nadd_subdirectory(MathFunctions)\nlist(APPEND EXTRA_LIBS MathFunctions)\nlist(APPEND EXTRA_INCLUDES \"${PROJECT_SOURCE_DIR}/MathFunctions\")\nendif()\n\n# add the executable\nadd_executable(Tutorial tutorial.cxx)\n\ntarget_link_libraries(Tutorial PUBLIC ${EXTRA_LIBS})\n\n# add the binary tree to the search path for include files\n# so that we will find TutorialConfig.h\ntarget_include_directories(Tutorial PUBLIC\n\"${PROJECT_BINARY_DIR}\"\n${EXTRA_INCLUDES}\n)\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#pliki","title":"Pliki","text":""},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#szukanie-i-dodawanie-plikow","title":"Szukanie i dodawanie plik\u00f3w","text":"<pre><code>#prosty spos\u00f3b na wczytanie wszystkich plik\u00f3w z danego folderu do zmiennej\nfile(GLOB_RECURSE SOURCES ${CMAKE_SOURCE_DIR} \"src/*\")\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#domyslne-sciezki-w-cmake","title":"Domy\u015blne \u015bcie\u017cki w CMake","text":"<ul> <li><code>CMAKE_SOURCE_DIR</code></li> </ul> <p>TODO</p> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#instalacja","title":"Instalacja","text":"<p>dokumentacja</p>"},{"location":"C%20i%20C%2B%2B%20%F0%9F%87%A8/Cmake/#lepsze-wsparcie-dla-ide","title":"Lepsze wsparcie dla IDE","text":"<p>Poni\u017csza komenda wygeneruje przy budowie plik <code>compile_commands.json</code>, kt\u00f3ry mo\u017ce by\u0107 potem u\u017cywane przez IDE.</p> <pre><code>set(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n</code></pre> <p>Np aby VScode u\u017cy\u0142 tego pliku nale\u017cy go poda\u0107 w ustawieniach:</p> <pre><code>  \"configurations\": [\n{\n\"name\": \"Mac\",\n\"intelliSenseMode\": \"clang-x64\",\n\"includePath\": [\"${myDefaultIncludePath}\", \"/another/path\"],\n\"macFrameworkPath\": [\"/System/Library/Frameworks\"],\n\"defines\": [\"FOO\", \"BAR=100\"],\n\"forcedInclude\": [\"${workspaceFolder}/include/config.h\"],\n\"compilerPath\": \"/usr/bin/clang\",\n\"cStandard\": \"c11\",\n\"cppStandard\": \"c++17\",\n\"compileCommands\": \"/path/to/compile_commands.json\",\n\"browse\": {\n\"path\": [\"${workspaceFolder}\"],\n\"limitSymbolsToIncludedHeaders\": true,\n\"databaseFilename\": \"\"\n}\n}\n],\n</code></pre>"},{"location":"Inne/haskell/","title":"Haskell \u03bb","text":"<p>Jest to statycznie typowany, g\u0142\u00f3wnie deklaratywny, czysto funkcyjny j\u0119zyk programowania.</p> <p>Jego najpopularniejszym kompilatorem jest GHC (Glasgow Haskell Compiler).</p> <p>Podczas programowania korzystamy z wyra\u017ce\u0144 (opisuj\u0105cych co\u015b) a nie z instrukcji (m\u00f3wi\u0105cych co ma by\u0107 zrobione).</p> <p>Jedn\u0105 z najwa\u017cniejszych w\u0142a\u015bciwo\u015bci tego j\u0119zyka jest to, \u017ce funkcje zawsze zwracaj\u0105 t\u0105 sam\u0105 warto\u015b\u0107 dla tych samych argument\u00f3w wej\u015bciowych. (nie ma \u017cadnych zmiennych globalnych, statycznych ani innych rzeczy, kt\u00f3re mog\u0142yby wp\u0142ywa\u0107 na wynik).</p>"},{"location":"Inne/haskell/#zmienne","title":"Zmienne","text":"<p>Wi\u0119kszo\u015b\u0107 przydatnych rzeczy jest w dokumentacji</p> <ul> <li><code>Char</code> - znak</li> <li><code>isAlpha</code>, <code>isAlphaNum</code>, <code>isDigit</code>, <code>isLower</code>, <code>isUpper</code> :: Char -&gt; Bool</li> <li><code>toLower</code>, <code>toUpper</code> :: Char -&gt; Char</li> <li><code>putChar</code> :: Char -&gt; IO ()</li> <li><code>String</code> - <code>type String = [Char]</code></li> <li><code>Num</code>, <code>Int</code>, <code>Float</code> - liczba</li> <li><code>div</code>, <code>mod</code></li> <li><code>()</code> krotka</li> <li><code>fst</code> - zwraca pierwszy element</li> <li><code>snd</code> - zwraca drugi element</li> <li><code>Bool</code></li> <li>Operatory</li> <li><code>[]</code> - lista (patrz Operacje na listach)</li> </ul> <p>Do zdefiniowania zmiennej mo\u017cemy u\u017cy\u0107 s\u0142owa kluczowego <code>let</code></p> <pre><code>let x = 4 in x * x\n</code></pre> <p>Int &lt;-&gt; Char konwersja pomi\u0119dzy tymi typami jest mo\u017cliwa</p> <pre><code>ord \u2018b\u2019\n&gt;98\nchr 98\n&gt;\u2018b\u2019\n</code></pre>"},{"location":"Inne/haskell/#typy","title":"Typy","text":"<p>Poza wbudowanymi typami zmiennych mo\u017cemy definiowa\u0107 w\u0142asne</p> <p>Synonymous types - u\u017cywaj\u0105 ju\u017c istniej\u0105cych typ\u00f3w u\u017cywamy tu s\u0142owa kluczowego <code>type</code></p> <pre><code>type Name = String\ntype Position = String\ntype Age = Int\ntype Course = Int\n\ntype Point = (Float, Float)\ntype Path = [Point]\n</code></pre> <p>Algebraic types - typy algebraiczne s\u0105 typami z\u0142o\u017conymi zdefiniowanymi przez u\u017cytkownika. U\u017cywamy tu s\u0142owa kluczowego <code>data</code></p> <pre><code>data Person =   Student Age Name Course |\nProfessor Name Position |\nDirector Name\n\nnamePerson :: Person -&gt; Name\nnamePerson (Student e n c) = n\nnamePerson (Professor n c) = n\nnamePerson (Director n) = n\n\nstud1 = Student 21 \"Marian\" 12\n</code></pre> <p>Tutaj s\u0142owa Student, Professor, Director s\u0142u\u017c\u0105 do okre\u015blenia typu danej struktury. (data constructor symbols)</p> <p>Wykorzystuj\u0105c same symbole konstruktor\u00f3w mo\u017cemy tworzy\u0107 enumy</p> <pre><code>data Day = Mon | Tue | Wed | Thu | Fri | Sat | Sun\n</code></pre> <p>Functional types - buduj\u0105 i opisuj\u0105 funkcje</p> <pre><code>type MyType = (Int -&gt; Int)\nfib :: MyType\n</code></pre> <p>Przyk\u0142ady:</p> <ul> <li><code>not</code> to warto\u015b\u0107 typu <code>Bool -&gt; Bool</code></li> <li><code>(2 +)</code> ma typ <code>Int -&gt; Int</code></li> <li><code>map</code> daje <code>(a -&gt; b) -&gt; [a] -&gt; [b]</code> (przyjmuje funkcj\u0119 robi\u0105z\u0105 z a b oraz tablic\u0119 a z potem zwraca tablic\u0119 b)</li> </ul> <p>Operator -&gt; zwija si\u0119 z prawej strony</p> <p>Tzn <code>a -&gt; b -&gt; c</code> jest r\u00f3wnoznaczne z <code>a -&gt; (b -&gt; c)</code> a nie <code>(a -&gt; b) -&gt; c</code></p> <p>Nale\u017cy jednocze\u015bnie pami\u0119ta\u0107, \u017ce funkcje zwijaj\u0105 si\u0119 od prawej</p> <p><code>f a b</code> to ekwiwalent <code>(f a) b</code> a nie <code>f (a b)</code> Czyli <code>$ not not false</code> da nam error</p>"},{"location":"Inne/haskell/#operacje","title":"Operacje","text":"<p>Funkcje s\u0105 wywo\u0142ywane poprzez podanie ich nazwy oraz argument\u00f3w</p> <pre><code>sort [42,13,22]\n&gt; [13,22,42]:: (Num a, Ord a) =&gt; [a]\n</code></pre>"},{"location":"Inne/haskell/#listy","title":"Listy","text":""},{"location":"Inne/haskell/#tworzenie-i-dodawanie","title":"Tworzenie i dodawanie","text":"<p>Aby doda\u0107 element do listy u\u017cywamy <code>:</code></p> <pre><code>'a' : []\n&gt; \"a\":: [Char]\n</code></pre> <p>Tutaj do pustej listy dodali\u015bmy liter\u0119 <code>a</code> dzi\u0119ki czemu dostali\u015bmy stringa.</p> <p>Do tworzenia list mo\u017cemy te\u017c u\u017cywa\u0107 automatycznego generowania</p> <p>Przyk\u0142ady:</p> <ul> <li><code>[2..10]</code> is <code>[2,3,4,5,6,7,8,9,10]</code></li> <li><code>[1..]</code> is <code>[1,2,3,4,...</code></li> <li><code>[1,3..10]</code> is <code>[1,3,5,7,9]</code></li> <li><code>[\u2019a\u2019..\u2019e\u2019]</code> is <code>\u201cabcde\u201d</code></li> </ul> <p>Lub mechanizmu <code>List comprehension</code></p> <p><code>[wyra\u017cenie przyjmuj\u0105ce zmienne | generator, filtry, generator, filtry, ...]</code></p> <p>Na przyk\u0142ad</p> <pre><code>[ x*x | x&lt;-[1..5], odd x ]\n&gt; [1, 9, 25]\n</code></pre> <p>repeat niesko\u0144czone listy</p> <pre><code>Prelude&gt; repeat 3\n[3,3,3,3,3...]\n</code></pre>"},{"location":"Inne/haskell/#operacje_1","title":"Operacje","text":"<p>Pobieranie - poni\u017cej</p> <p></p> <p>Inne - operator <code>++</code></p> <pre><code>-- \u0141\u0105czenie list\nPrelude&gt; [3,4]++[5]\n[3,4,5]\n\n-- Indeksowane elementy\nPrelude&gt; [45,43,12,54] !! 2\n12\n\n-- branie x element\u00f3w z listy\nPrelude&gt; take 3 (repeat 1)\n[1,1,1]\n\n-- usuwanie elementu z listy\nPrelude&gt;\n</code></pre>"},{"location":"Inne/haskell/#funkcje-dla-list","title":"Funkcje dla list","text":"<p>Funkcja <code>zip</code> \u0142\u0105czy dwie listy w list\u0119 krotek</p> <pre><code>zip [1,2] [\"a\",\"b\"]\n&gt; [ (1,\"a\"), (2,\"b\")]\n</code></pre> <pre><code>&gt; length [1,2,3]\n3\n</code></pre> <p><code>filter (a -&gt; Bool) -&gt; [a] -&gt; [a]</code> - przefiltrowuje wybran\u0105 list\u0119, otrzymujemy tylko elementy dla kt\u00f3rych nasza funkcja zwraca <code>True</code></p> <pre><code>&gt; filter even [1,2,4,5,32]\n[2,4,32]\n</code></pre> <p><code>map :: (a -&gt; b) -&gt; [a] -&gt; [b]</code> - aplikuje wybran\u0105 funkcj\u0119 na wszystkie elementy wybranej listy i zwraca list\u0119 wynik\u00f3w</p> <pre><code>&gt; map square [9,3]\n[81,9]\n&gt; map (&lt;3) [1,2,3]\n[True,True,False]\n</code></pre> <p><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b</code> - funkcja, kt\u00f3ra pozwala \u0142\u0105czy\u0107 warto\u015bci w tablicy. Podajemy jej argumenty:</p> <ul> <li>funkcja</li> <li>pierwszy element typu docelowego</li> <li>lista</li> </ul> <pre><code>suma = foldr (+) 0\niloczyn = foldr (*) 1\n</code></pre>"},{"location":"Inne/haskell/#funkcje","title":"Funkcje","text":"<p>FUnkcje s\u0105 podstawot\u0105 cz\u0119\u015bci\u0105 j\u0119zyka. Mog\u0105 by\u0107 przekazywane jako argumenty, lub modyfikowane i cz\u0119\u015bciowo aplikowane (partial application)</p> <p>partial applications:</p> <pre><code>(+) :: Int -&gt; Int -&gt; Int\n$ (2 +) 5\n7\n</code></pre> <pre><code>add_2 :: (Int -&gt; Int)\nadd_2 = (2 +)\n$ add_2 5\n7\n</code></pre>"},{"location":"Inne/haskell/#definiowanie","title":"Definiowanie","text":"<p>Funkcja sk\u0142ada si\u0119 z opcjonalnego opisu typ\u00f3w <code>nazwaFun :: Typ -&gt; Typ -&gt; Typ...</code> Oraz samej definicji, tutaj mamy 2 warianty:</p> <pre><code>addRange :: Int -&gt; Int -&gt; Int\naddRange x y\n| x == y = x\n| x &lt; y = x + addRange (x + 1) y\n| otherwise = y + addRange (y + 1) x\n</code></pre> <p>oraz</p> <pre><code>numCbetw2 :: Char -&gt; Char -&gt; Int\nnumCbetw2 c1 c2 =\nlet x = ord c2 - ord c1\nin if abs x == 0 then abs 0 else abs x - 1\n</code></pre> <p>TODO Argumenty przekazywane do funkcji mog\u0105 mie\u0107 form\u0119 listy (\u0142\u0105czonej strza\u0142kami <code>-&gt;</code>) lub krotek <code>(el1,el2,...)</code>.</p>"},{"location":"Inne/haskell/#aczenie-funkcji","title":"\u0141\u0105czenie funkcji","text":"<p>Wykorzystuj\u0105c kropk\u0119 <code>.</code> mo\u017cemy \u0142\u0105czy\u0107 funkcje w ci\u0105gi</p> <pre><code>(sum . map square . filter even) [1 .. 10]\n</code></pre> <p>Powy\u017cszy kod zwr\u00f3ci nam sum\u0119 kwadrat\u00f3w liczb parzystych dla liczb z zakresu 1-10.</p>"},{"location":"Inne/haskell/#moduy","title":"Modu\u0142y","text":"<p>Modu\u0142y s\u0105 odpowiednikami paczek/bibliotek dla innych j\u0119zyk\u00f3w.</p> <p>Aby go w\u0142\u0105czy\u0107 nale\u017cy go zaimportowa\u0107</p> <pre><code>import MojModul\n-- jest to plik MojModul\n</code></pre> <p>Przy tworzeniu nowego modu\u0142u od razu zaznaczamy jakie inne modu\u0142y improstujemy</p> <pre><code>module ModuleNameX where\nimport ModuleNameY\n</code></pre> <p>Przy plikach w folderach u\u017cywamy kropek. Np je\u015bli w folderze <code>A/B/C</code> mamy plik <code>EjemImport.hs</code> to importujemy go tak:</p> <pre><code>import A.B.C.EjemImport\n</code></pre> <p>Eksportowanie - przy definiowaniu modu\u0142u mo\u017cemy zaznaczy\u0107 co chcemy z niego eksportowa\u0107.</p> <pre><code>-- Tutaj wida\u0107 \u017ce eksportujemy tylko 2 funkcje\nmodule Geometry2D (areaSquare, perimeterSquare) where\nareaRectangle :: Float -&gt; Float -&gt; Float\nareaRectangle base height = base * height\nperimeterRectangle :: Float -&gt; Float -&gt; Float\nperimeterRectangle base height = 2 * (base + height)\nareaSquare :: Float -&gt; Float\nareaSquare side = areaRectangle side side\nperimeterSquare :: Float -&gt; Float\nperimeterSquare side = perimeterRectangle side side\n</code></pre> <p>W wypadku, gdy wyst\u0119puje kolizja nazw mo\u017cemy u\u017cy\u0107 s\u0142owa kluczowego <code>qualified</code></p> <pre><code>module NormalizeAll where\nimport qualified NormalizeSpaces\nimport qualified NormalizeCase as NC\nnormalizeAll :: String -&gt; String\nnormalizeAll =NormalizeSpaces.normalize . NC.normalize\n</code></pre>"},{"location":"Java%E2%98%95/java_podstawy/","title":"Java podstawy","text":""},{"location":"Java%E2%98%95/java_podstawy/#narzedzia","title":"Narz\u0119dzia","text":"<ul> <li><code>jshell</code> \u2013 interpretator interaktywny ?jak importowa\u0107 w nim w\u0142asne pakiety?</li> <li><code>jlink</code> \u2013 generacja modu\u0142u aplikacji</li> </ul>"},{"location":"Java%E2%98%95/java_podstawy/#helloworld-w-javie","title":"HelloWorld w javie","text":"<pre><code>public class HelloWorldApp {\npublic static void main(String[] args) {\nSystem.out.println(\"Hello world from Java!\");\n}\n}\n</code></pre> <p>Wszystko jest tu klas\u0105, nasza apka te\u017c. Je\u017celi chcemy, aby jaka\u015b klasa zacz\u0119\u0142a co\u015b robi\u0107 przy jej samodzielnym uruchomieniu to dodajemy funkcj\u0119: <code>public static void main(String[] args)</code></p>"},{"location":"Java%E2%98%95/java_podstawy/#pakiety","title":"Pakiety","text":"<p>W jednym pliku .java mo\u017cna zdefiniowa\u0107 wiele klas, ale tylko jedna z nich mo\u017ce bypubliczna i jej nazwa musi odpowiada\u0107 nazwie pliku.</p> <p>Ka\u017cda klasa nale\u017cy do jakiego\u015b pakietu. Je\u015bli w pliku z kodem \u017ar\u00f3d\u0142owym klasy nie wyst\u0119puje na pocz\u0105tku deklaracja przynale\u017cno\u015bci tej klasy do konkretnego pakietu, w\u00f3wczas klasa ta b\u0119dzie nale\u017ce\u0107 do domy\u015blnego pakietu. Klasy nale\u017c\u0105ce do tego samego pakietu mog\u0105 odwo\u0142ywa\u0107 si\u0119 do siebie bez konieczno\u015bci stosowania nazw kwalifikowanych (bez przedrostka)</p> <p>Konwencja nazewnicza dla nazw pakiet\u00f3w: nazwa_firmy.nazwa_pakietu.</p> <pre><code>import java.applet.Applet;\npublic class App extends Applet {////kod\n}\n//LUB\npublic class App extends java.applet.Applet {////kod\n}\n</code></pre> <p>Klasa System jest zawarta w java.lang, importowanym automatycznie</p>"},{"location":"Java%E2%98%95/java_podstawy/#typy-danych","title":"Typy danych","text":"<p>Wbudowane \u2013 okre\u015blone przez tw\u00f3rc\u00f3w j\u0119zyka \u2013 typy proste (albo: typy dla warto\u015bci, value-type): zmienne tych typ\u00f3w zawieraj\u0105 warto\u015bci tych\u017ce typ\u00f3w \u2013 typy referencyjne: zmienne tych typ\u00f3w zawieraj\u0105 odniesienie do tablicy lub obiektu, kt\u00f3ry reprezentuj\u0105 Definiowane przez programist\u0119 \u2013 klasy \u2013 typy wyliczeniowe (enumeration)</p> <p>Java ma statyczne typowanie tzn, \u017ce raz zdefiniowana zmienna nie zmienia swojego typu (jak np. w pythonie)</p> <p>Wbudowane typy proste</p> <ul> <li>ca\u0142kowitoliczbowe, kodowane U2</li> <li><code>byte</code> jednobajtowy</li> <li><code>short</code> dwubajtowy</li> <li><code>int</code> czterobajtowy</li> <li><code>long</code> o\u015bmiobajtowy</li> <li>zmiennoprzecinkowe, kodowane IEEE 754</li> <li><code>float</code> czterobajtowy</li> <li><code>double</code> o\u015bmiobajtowy</li> <li>inne</li> <li><code>char</code> dwubajtowy, kodowany Unicode (utf-16)</li> <li><code>boolean</code> warto\u015b\u0107 logiczna true lub false</li> </ul> <p>do javy 11 mo\u017cna stosowa\u0107 identyfikator typu wywnioskowanego: <code>var s = \"test\";</code></p>"},{"location":"Java%E2%98%95/java_podstawy/#stae","title":"Sta\u0142e","text":"<p>Litera\u0142y \u2013 sta\u0142e bez nazwy, o typie wynikaj\u0105cym ze sposobu zapisu litera\u0142u, np.</p> 78, 8864L, 37.266, 37.266D, 37.266F, \u2019c\u2019, true, null int long double double float char boolean <p>oraz \u0142a\u0144cuchy znak\u00f3w, typu String: \"ala ma kota\" Sta\u0142e symboliczne \u2013 sta\u0142e opatrzone nazw\u0105 i jawn\u0105 deklaracj\u0105 typu</p> <pre><code>final typ NAZWA_STA\u0141EJ = warto\u015b\u0107;\n//np.\nfinal float PI= 3.14;\n</code></pre> <p>Lokaln\u0105 sta\u0142\u0105 symboliczn\u0105 mo\u017cna zainicjowa\u0107 p\u00f3\u017aniej \u2013 najpierw wyst\u0105pi sama deklaracja, a p\u00f3\u017aniej przypisanie pierwszej (i ostatecznej) warto\u015bci.</p> <pre><code>final int STA\u0141A_CZYSTA; // Definicja sta\u0142ej\n/**/\nSTA\u0141A_CZYSTA = 0; // Inicjalizacja sta\u0142ej\n</code></pre>"},{"location":"Java%E2%98%95/java_podstawy/#typ-wyliczeniowy","title":"Typ wyliczeniowy","text":"<pre><code>enum Season { WINTER, SPRING, SUMMER, FALL }\n</code></pre> <p>\u2013 kompilator sprawdza zgodno\u015b\u0107 typu \u2013 mo\u017ce by\u0107 u\u017cyty w instrukcji switch</p> <pre><code>Season anything=Season.WINTER;\nswitch(anything){\ncase SUMMER: System.out.println(\"Lato\");\n//\u2026\n}\n</code></pre>"},{"location":"Java%E2%98%95/java_podstawy/#referencja","title":"Referencja","text":"<p>Referencja to zmienna, kt\u00f3rej warto\u015bci\u0105 jest adres. Typy referencyjne:</p> <ul> <li>tablice,</li> <li>klasy,</li> <li>interfejsy.</li> </ul> <p>Zmienna referencyjna odnosi si\u0119 do miejsca pami\u0119ci, w kt\u00f3rym pomieszczono dan\u0105 lub wektor danych reprezentowanych t\u0105 zmienn\u0105. Java nie zna typu wska\u017anikowego, tzn. jawnego korzystania z adres\u00f3w.</p>"},{"location":"Java%E2%98%95/java_podstawy/#konwencje-nazewnicze-dla-nazw-zmiennych-i-klas","title":"Konwencje nazewnicze dla nazw zmiennych i klas","text":"<ul> <li>nazwa zmiennej rozpoczyna si\u0119 ma\u0142\u0105 liter\u0105,</li> <li>nazwa klasy rozpoczyna si\u0119 wielk\u0105 liter\u0105,</li> <li>kolejne s\u0142owa w nazwie rozpoczyna si\u0119 wielk\u0105 liter\u0105, np. isVisible,</li> <li>znak podkre\u015blenia (_) jest wprawdzie poprawny w nazwie, ale powinien by\u0107 u\u017cywany jedynie w nazwach sta\u0142ych.</li> </ul>"},{"location":"Java%E2%98%95/java_podstawy/#cykl-zycia-obiektu","title":"Cykl \u017cycia obiektu","text":"<ol> <li>Utworzenie zmiennej typu referencji do obiektu (<code>typ nazwa;</code>) Dla typu klasy lub interfejsu zmienna przechowuje adres do obiektu klasy \u2013 nie jest on dost\u0119pny bezpo\u015brednio, lecz stanowi referencj\u0119. Do momentu przypisania jej adresu ma ona warto\u015b\u0107 zerow\u0105 (null).</li> <li>Utworzenie obiektu (<code>new</code> alokuje obszar pami\u0119ci) <code>nazwa=new typ(argumenty)</code> Operator new zwraca referencj\u0119 do nowo utworzonego obiektu.</li> <li>Inicjalizacja -wywo\u0142anie konstruktora</li> <li>U\u017cywanie</li> <li>Usuwanie obiektu - \"Garbage Collector\" \u015brodowisko samodzielnie usuwa obiekt, je\u017celi wykryje, \u017ce ju\u017c wi\u0119cej nie b\u0119dzie u\u017cywane w programie, wywo\u0142uje si\u0119 on samoczynnie co jaki\u015b czas, ale mo\u017cna to zrobi\u0107 r\u0119cznie <code>System.gc()</code></li> <li>Ewentualne wykonanie metody <code>finalize()</code> dziedziczona po klasie Obiect- pozwala wykona\u0107 dodatkowe czynno\u015bci zwi\u0105zane z usuwaniem obiektu</li> </ol>"},{"location":"Java%E2%98%95/java_podstawy/#operatory","title":"Operatory","text":"<p>Operator \u2013 funkcja podana w notacji operatorowej - z 1, 2 lub 3 argumentami (operandami).</p> <ul> <li>1-argumentowe operatory mog\u0105 by\u0107 przedrostkowe i przyrostkowe:   operator operand // notacja przedrostkowa   operand operator // notacja przyrostkowa</li> <li>przedrostkowe i przyrostkowe <code>++</code> i <code>--</code></li> <li>2-argumentowe operatory wyst\u0119puj\u0105 pomi\u0119dzy swoimi operandami:   operand1 operator operand2</li> <li>Dzia\u0142ania matematyczne<code>+</code>,<code>-</code>,<code>*</code>,<code>/</code>,<code>%</code></li> <li>Por\u00f3wnania <code>&gt;</code>,<code>&gt;=</code>,<code>==</code>,<code>&lt;=</code>,<code>&lt;</code>,<code>!=</code></li> <li>Tylko dla warto\u015bci logicznych:<ul> <li><code>&amp;&amp;</code> , <code>&amp;</code> \"and\"</li> <li><code>||</code>, <code>|</code> \"or\"</li> <li><code>!</code> negacja</li> <li><code>^</code> op1 ^ op2 true, gdy op1 i op2 maj\u0105 r\u00f3\u017cne warto\u015bci</li> </ul> </li> <li>Przesuni\u0119cia<ul> <li><code>&gt;&gt;</code> np op1&gt;&gt;op2 przesu\u0144 op1 w prawo o op2 bit\u00f3w</li> <li><code>&lt;&lt;</code> np op1&lt;&lt;op2 przesu\u0144 op1 w lewo o op2 bit\u00f3w</li> <li><code>&gt;&gt;&gt;</code> op1&gt;&gt;&gt;op2 przesu\u0144 op1 w prawo o op2 bit\u00f3w, zast\u0119puj\u0105c bit znaku zerem</li> </ul> </li> <li>Bitowe logiczne<ul> <li><code>&amp;</code> op1 &amp; op2 iloczyn bitowy op1 i op2</li> <li><code>|</code> op1 | op2 suma bitowa op1 i op2</li> <li><code>^</code> op1 ^ op2 bitowa r\u00f3\u017cnica symetryczna op1 i op2</li> <li><code>~</code> ~op bitowa negacja op</li> </ul> </li> <li>Przypisania<ul> <li>op1=op2</li> <li><code>*=</code>,<code>+=</code>,<code>-=</code>,<code>|=</code>,<code>%=</code>itp...</li> </ul> </li> <li>3-argumentowy operator (jedyny w Javie):   operand1 ? operand2 : operand3</li> <li><code>op1?op2:op3</code> gdy op1 jest \u201etrue\u201d, zwraca op2, w przeciwnym razie zwraca op3</li> <li>Inne</li> <li><code>typ[]</code>/<code>typ[liczba]</code> deklaracja tablicy</li> <li><code>op[liczba]</code> pobranie elementu z tablicy</li> <li><code>(typ)op</code> konwersja wyra\u017cenia op do typu typ</li> <li><code>net op1</code> utowrzenie obiektu lub tablicy</li> <li><code>op1 instanceof op2</code> zwraca \u201etrue\u201d, gdy obiekt op1 jest instancj\u0105 klasy op2</li> </ul> <p>Za wyj\u0105tkiem operatora + u\u017cywanego te\u017c do \u0142\u0105czenia napis\u00f3w, operatory arytmetyczne s\u0105 przeznaczone tylko dla operand\u00f3w liczbowych.</p>"},{"location":"Java%E2%98%95/java_podstawy/#kolekcje","title":"Kolekcje","text":"<p>Kolekcja to obiekt:</p> <ul> <li>zawieraj\u0105cy wiele element\u00f3w (teoretycznie dowolna liczba, nieokre\u015blona zawczasu),</li> <li>udost\u0119pniaj\u0105cy operacje</li> <li>wstawiania,</li> <li>przegl\u0105dania,</li> <li>usuwania.</li> <li>stosowany do magazynowania, przetwarzania i transmisji danych.</li> </ul> <p>Biblioteka kolekcji w Javie:</p> <ul> <li>Interfejsy \u2013 definiuj\u0105ce zachowanie kolekcji,</li> <li>Implementacje interfejs\u00f3w (na r\u00f3\u017cne sposoby),</li> <li>Algorytmy \u2013 typowe operacje na kolekcjach r\u00f3\u017cnego rodzaju</li> </ul> <p>Kolekcje w Javie zosta\u0142y umieszczone w java.util. Mimo, \u017ce w java.util wyst\u0119puje interfejs Collection, nie wszystkie kolekcje go implementuj\u0105 czy dziedzicz\u0105. Dlatego terminu kolekcja u\u017cywamy w szerszym sensie.</p> <p>Kolekcje a typy uog\u00f3lnione:</p> <ul> <li>Wersje podstawowe \u2013 nieparametryzowane typem przechowywanych danych \u2013 np. <code>List.insert(Object o)</code></li> <li>Wersje parametryzowane typem \u2013 np. <code>List&lt;MojTyp&gt;.insert(MojTyp o)</code></li> <li>Klasy parametryzowane typem - przyk\u0142ad</li> </ul> <pre><code>public class CircularBuffer&lt;T&gt; {\nprivate T[] buffer;\nprivate int head = 0, tail = 0;\n\npublic CircularBuffer() {\nbuffer = (T[]) new Object[10];\n}\n\npublic void add(T f) {\nif (head == tail - 1) // nadpisanie\ntail = ++tail % buffer.length;\nbuffer[head++] = f;\nhead = head % buffer.length;\n}\n\npublic T get() {\nint adjTail = tail &gt; head ? tail - buffer.length : tail;\nif (adjTail &lt; head) {\nT t = buffer[tail++];\ntail = tail % buffer.length;\nreturn t;\n} else {\nthrow new Error();\n}\n}\n}\n</code></pre> <p>Pos\u0142uguj\u0105c si\u0119 interfejsami, mo\u017cemy tworzy\u0107 algorytmy operuj\u0105ce na kolekcjach niezale\u017cnie od sposobu, w jaki zaimplementowano kolekcj\u0119 (programowanie abstrakcyjne)  S\u0105 2 niezale\u017cne hierarchie: \u201ew\u0142a\u015bciwych kolekcji\u201d oraz wykazy asocjacyjne, czyli kolekcje par {klucz,warto\u015b\u0107}. Opr\u00f3cz tego dysponujemy obiektami do przegl\u0105dania kolekcji: jednokierunkowym (Iterator) i dwukierunkowym (ListIterator). Kolekcje mo\u017cna r\u00f3wnie\u017c przegl\u0105da\u0107, korzystaj\u0105c z obiekt\u00f3w funkcyjnych w po\u0142\u0105czeniu z metod\u0105 forEach().</p> <p>Podstawowe zale\u017cno\u015bci pomi\u0119dzy interfejsami kolekcji:</p> <ul> <li>Collection okre\u015bla zachowanie najog\u00f3lniejszego zbioru obiekt\u00f3w,mog\u0105cego zawiera\u0107 obiekty identyczne</li> <li>Set \u201erozszerza\u201d Collection: nie dopuszcza duplikat\u00f3w</li> <li>List rozszerza Collection, dopuszczaj\u0105c indeksowanie przez pozycj\u0119 obiektu</li> <li>Map definiuje funkcjonalno\u015bci podobne do Collection, ale nie jest z nim spokrewniony</li> </ul>"},{"location":"Java%E2%98%95/java_podstawy/#metody-interfejsow","title":"Metody interfejs\u00f3w","text":"<p><code>Collection</code> i <code>Iterator</code>:</p> <ul> <li>Metody \u201ejednostkowe\u201d   add, contains, remove</li> <li>Metody zbiorcze   addAll, containsAll, removeAll, retainAll (dla teorii zbior\u00f3w r\u00f3\u017cnica zbior\u00f3w iloczyn itp.)</li> <li>Inne   clear, isEmpty, size, toArray</li> <li>iterator \u2013 produkuje nowy iterator (na pocz\u0105tku na nic nie wskazuje, jest przed pierwszym elementem)</li> <li>hasNext</li> <li>next - przeskakuje dalej i zwraca kolejny element (wskazywa\u0142 pierwszy, po przeskoku zwraca drugi itd.)</li> <li>remove \u2013 usuwa ostatnio \u201eprzeskoczony\u201d element</li> <li>forEach(), Spliterator \u2013 do iterowania r\u00f3wnoleg\u0142ego (pojedynczego lub w blokach)</li> </ul> <p>Interfejs <code>Map</code>:</p> <ul> <li>get(key)</li> <li>containsKey(key)</li> <li>containsValue(value)</li> </ul> <p></p> <p>Parametryzacja np: <code>Map&lt;String,Float&gt;</code></p> <p>Standardowe algorytmy: klasa Collections \u2022 sort \u2013 sortowanie listy \u2022 binarySearch \u2013 przeszukiwanie metod\u0105 bisekcji \u2022 shuffle \u2013 tasowanie element\u00f3w \u2022 reverse \u2013 odwr\u00f3cenie kolejno\u015bci element\u00f3w \u2022 rotate \u2013 przesuni\u0119cie element\u00f3w \u2022 fill \u2013 nadanie wszystkim elementom takiej samej warto\u015bci \u2022 copy, swap, addAll (typowe dzia\u0142ania pomocnicze) \u2022 binarySearch \u2013 wyszukiwanie w li\u015bcie \u2022 frequency \u2013 zliczanie wyst\u0105pie\u0144 \u2022 disjoint \u2013 test roz\u0142\u0105czno\u015bci \u2022 min, max \u2013 szukanie ekstrem\u00f3w</p>"},{"location":"Java%E2%98%95/java_podstawy/#uporzadkowanie-elementow-kolekcji","title":"Uporz\u0105dkowanie element\u00f3w kolekcji","text":"<p>Mamy dwa sposoby porz\u0105dkowania kolekcji obiekt\u00f3w:</p> <ul> <li>Interfejs Comparable zapewnia automatyczny naturalny porz\u0105dek dla klas go implementuj\u0105cych.   W interfejsie deklarowana jest metoda compareTo(obj)</li> <li>Interfejs Comparator umo\u017cliwia programi\u015bcie wyznaczenie w\u0142asnego sposobu porz\u0105dkowania obiekt\u00f3w.</li> </ul>"},{"location":"Java%E2%98%95/java_podstawy/#implementacje-biblioteczne-kolekcji","title":"Implementacje Biblioteczne kolekcji","text":"<p> W\u0142a\u015bciwo\u015bci:</p> <ol> <li>Implementuj\u0105 wszystkie opcjonalne operacje    Mamy gwarancj\u0119, \u017ce nie wyst\u0105pi UnsupportedOperationException</li> <li>Nie s\u0105 synchronizowane    Mamy gwarancj\u0119, \u017ce przy wsp\u00f3\u0142bie\u017cnej modyfikacji i przegl\u0105daniu wyst\u0105pi    ConcurrentModificationException</li> <li> <p>S\u0105 serializowalne i posiadaj\u0105 metod\u0119 <code>clone()</code>.</p> </li> <li> <p>HashSet \u2013 funkcja skr\u00f3tu indeksuje miejsce w tablicy, gdzie znajduje si\u0119 element; je\u015bli skr\u00f3t si\u0119 powiela, tworzona jest lista element\u00f3w. \u015aredni czas dost\u0119pu do elementu praktycznie sta\u0142y. Tablica mo\u017ce zmienia\u0107 sw\u00f3j rozmiar.</p> </li> <li>LinkedHashSet \u2013 j.w. ale zapami\u0119tuje kolejno\u015b\u0107 dodania element\u00f3w do zbioru; minimalnie wolniejsza.</li> <li>TreeSet \u2013 elementy przechowywane w posortowanym i wywa\u017conym drzewie binarnym (wymaga okre\u015blenia relacji wi\u0119kszo\u015bci na elementach)</li> <li>ArrayList \u2013 zapewnia sta\u0142y czas wykonywania operacji size, isEmpty, get, set, iterator i listIterator oraz sta\u0142y czas operacji add.</li> <li>LinkedList \u2013 implementacja wykorzystuj\u0105ca listy dwukierunkowe. W zwi\u0105zku z tym realizacja dost\u0119pu do element\u00f3w tej kolekcji za pomoc\u0105 indeks\u00f3w jest nieefektywna. Natomiast mo\u017ce by\u0107 szybsza od ArrayList w przypadku cz\u0119stego usuwania i wstawiania element\u00f3w. Ponadto implementuje interfejsy Queue i Deque, wi\u0119c nadaje do implementowania stos\u00f3w i kolejek. LinkedList zawiera min. operacje addFirst, getFirst, removeFirst, addLast, getLast, removeLast.</li> </ol>"},{"location":"Java%E2%98%95/java_podstawy/#instrukcje-sterujace-petle-i-warunki","title":"Instrukcje steruj\u0105ce (p\u0119tle i warunki)","text":"<pre><code>while (wyra\u017cenie) {\ninstrukcje\n} // Wykonuj p\u0119tl\u0119 gdy wyra\u017cenie jest prawdziwe\n\ndo {\ninstrukcje\n} while (wyra\u017cenie);\n// Sprawdzenie warunku nast\u0119puje po zako\u0144czeniu p\u0119tli\n\nfor (inicjalizacja; warunek; inkrementacja) {\ninstrukcje\n} // Wszystkie trzy wyra\u017cenia s\u0105 opcjonalne; mo\u017ce by\u0107: for(;;)\n\nfor (typ zm_lokalna:ref_obiekt_iterowany_lub_tablica) {\ninstrukcje\n}\n\nif( wyra\u017cenie ) {\ninstrukcje\n} else {\ninstrukcje\n}\n\nswitch( zmienna ) {\ncase warto\u015b\u01071: instrukcje; break;\ncase warto\u015b\u01072: instrukcje; break;\n\u2026\ndefault: instrukcje; break;\n}\n</code></pre> <p>S\u0142owa kluczowe:</p> <ul> <li><code>break</code> bez etykiety \u2013 ko\u0144czy wykonywanie aktualnej wewn\u0119trznej instrukcji steruj\u0105cej switch, for, while, do-while</li> <li>instrukcja break z etykiet\u0105 \u2013 ko\u0144czy wykonywanie zewn\u0119trznego switch, for, while, do-while o danej etykiecie:   <code>break etykieta_instrukcji;</code></li> <li><code>continue</code> ko\u0144czy bie\u017c\u0105c\u0105 iteracj\u0119 wewn\u0119trznej p\u0119tli</li> <li><code>continue</code> z etykiet\u0105 -analogicznie</li> <li><code>return</code> \u2013 powr\u00f3t z wykonywanej metody</li> </ul>"},{"location":"Java%E2%98%95/java_podstawy/#klasa","title":"Klasa","text":"<p>Definicja klasys k\u0142ada si\u0119 z</p> <ul> <li>nag\u0142\u00f3wka definicji klasy</li> <li>class nazwa_klasy (obligatoryjnie)</li> <li>specyfikacje: dost\u0119pu i dziedziczenia (opcjonalnie)</li> <li>bloku definicji klasy</li> </ul> <p>Specyfikacje domy\u015blne klasy:</p> <ul> <li>niepubliczna (istniej\u0105 restrykcje dost\u0119pu)</li> <li>nieabstrakcyjna (mo\u017cna tworzy\u0107 obiekty tej klasy)</li> <li>niefinalna (mo\u017ce mie\u0107 klasy pochodne)</li> <li>dziedziczy niejawnie po klasie Object</li> <li>nie implementuje niejawnie \u017cadnych interfejs\u00f3w</li> </ul> <p>Specyfikacje dodatkowe (niedomy\u015blne) klasy:</p> <ul> <li>public \u2013 klasa jest dost\u0119pna dla wszystkich klas (domy\u015blnie: tylko dla klas z tego samego pakietu)</li> <li>abstract \u2013 nie mo\u017cna tworzy\u0107 obiekt\u00f3w tej klasy</li> <li>final \u2013 nie mo\u017cna dziedziczy\u0107 z tej klasy</li> <li>extends klasa_bazowa \u2013 deklaruje dziedziczenie po klasie bazowej</li> <li>implements interfejs1, interfejs2 \u2013 deklaruje implementowanie jednego lub wi\u0119cej interfejs\u00f3w</li> </ul> <p>Blok definicji klasy \u2013 ograniczony par\u0105 nawias\u00f3w klamrowych, zawiera</p> <ul> <li>deklaracje wszystkich zmiennych sk\u0142adowych - p\u00f3l (w tym obiekt\u00f3w i p\u00f3l statycznych)</li> <li>deklaracje i definicje wszystkich funkcji sk\u0142adowych - metod (w tym metod wywo\u0142ywanych na rzecz obiektu lub metod statycznych)</li> <li>ewentualnie, definicje jednego lub wi\u0119cej konstruktor\u00f3w</li> </ul> <p>Konstruktory Nazwy konstruktor\u00f3w s\u0105 takie same jak nazwa konstruowanej klasy. Wywo\u0142ania konstruktor\u00f3w: <code>new Stack();</code> <code>new Stack(123);</code> Odpowiednikiem destrukotr\u00f3w jest metoda <code>finalize()</code> Je\u015bli w klasie nie zdefiniowano \u017cadnego konstruktora, tworzony jest automatycznie domy\u015blny konstruktor (pusty) Klasy dziedzicz\u0105ce korzystaj\u0105 z konstruktora pustego, je\u017celi go nie ma to nale\u017cy samodzielnie wywo\u0142a\u0107 inny Konstruktory \u2013 specyfikacja dost\u0119pu</p> <ul> <li><code>private</code> - \u017cadna inna klasa nie mo\u017ce bezpo\u015brednio u\u017cy\u0107 takiego konstruktora do tworzenia obiekt\u00f3w danej klasy</li> <li><code>protected</code> \u2013 obiekty mog\u0105 by\u0107 tworzone przez klasy pochodne danej klasy i klasy nale\u017c\u0105ce do tego samego pakietu</li> <li><code>public</code> - ka\u017cda klasa mo\u017ce tworzy\u0107 obiekty danej klasy</li> <li>brak specyfikatora dost\u0119pu - ka\u017cda klasa z tego samego pakietu mo\u017ce tworzy\u0107 obiekty danej klasy</li> </ul>"},{"location":"Java%E2%98%95/java_podstawy/#pola-klasy","title":"Pola klasy","text":"<p>Specyfikatory</p> <ul> <li><code>private</code>, <code>public</code>, <code>protected</code>, (package) \u2013 specyfikacja dost\u0119pu</li> <li><code>static</code> \u2013 deklaracja pola statycznego (przynale\u017cnego do klasy, a nie \u2013 jej obiekt\u00f3w)</li> <li><code>final</code> \u2013 deklaracja pola sta\u0142ego</li> <li><code>transient</code> \u2013 specyfikacja pola, kt\u00f3re nie powinno podlega\u0107 serializacji</li> <li><code>volatile</code> \u2013 specyfikacja pola ulotnego, niepodlegaj\u0105cego optymalizacji: przypisanie zmiennej warto\u015bci odbywa si\u0119 zawsze w pami\u0119ci (wsp\u00f3\u0142dzielonej przez w\u0105tki), a nie w rejestrze procesora, wi\u0119c jest od razu widoczne dla wsp\u00f3\u0142bie\u017cnych w\u0105tk\u00f3w</li> </ul> <p>Dost\u0119p do p\u00f3l</p> Specyfikator Dost\u0119pu Klasa Podklasa z tego samego pakietu Podklasy z innego pakietu Wszystkie klasy private \u2714\ufe0f protected \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f public \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f (package) \u2714\ufe0f \u2714\ufe0f <p>*Tylko przy odwo\u0142aniu niejawnym do p\u00f3l klasy bazowej</p> <p>Pole i metoda jednej klasy mog\u0105 nosi\u0107 tak\u0105 sam\u0105 nazw\u0119:</p> <pre><code>public class CircularBuffer{\nprivate float[] buffer; // pole buffer\nprivate float[] buffer(); // metoda buffer\n}\n</code></pre>"},{"location":"Java%E2%98%95/java_podstawy/#inicjalizacja","title":"Inicjalizacja","text":"<p>Sk\u0142adowe zwyk\u0142e i statyczne mog\u0105 by\u0107 inicjalizowane w miejscu deklaracji. Np.:</p> <pre><code>public class StaticInit {\nstatic int MAX_LINES = 1000;\nint maxLines = 300;\n}\n</code></pre> <p>Ograniczenia inicjalizowania w miejscu deklaracji:</p> <ul> <li>wykonywana tyko operatorem przypisania.</li> <li>tylko wyra\u017ceniem, kt\u00f3re nie deklaruje, \u017ce mo\u017ce zg\u0142osi\u0107 wyj\u0105tek.</li> <li>wyst\u0105pienie wyj\u0105tku w wyra\u017ceniu ko\u0144czy program.</li> </ul> <p>W ka\u017cdym innym przypadku trzeba u\u017cy\u0107 bloku statycznej inicjalizacji lub konstruktora.</p> <pre><code>public class StaticInit {\nstatic int MAX_LINES;\nstatic {//Przyk\u0142ad dla bloku inicjalizacji\ntry{\nMAX_LINES = Integer.parseInt(new java.util.Properties().getProperty(\"maxLinesLimit\"));\n}\ncatch(Exception e){ // obs\u0142uga wyj\u0105tku\n}\n}\n}\n</code></pre> <p>Liczba blok\u00f3w statycznej inicjalizacji w programie jest dowolna (wykonywane wg ich kolejno\u015bci wyst\u0105pienia w kodzie \u017ar\u00f3d\u0142owym).</p>"},{"location":"Java%E2%98%95/java_podstawy/#metody","title":"Metody","text":"<p>Deklaracja metody \u2013 specyfikacja</p> <ul> <li>poziomu dost\u0119pu</li> <li>typu wyniku</li> <li>nazwy</li> <li>listy argument\u00f3w formalnych (typy proste lub referencje do obiekt\u00f3w)   <code>public Object push(Object item)</code></li> </ul> <p>Wszystkie mo\u017cliwe elementy nag\u0142\u00f3wka definicji metody (w ich kolejno\u015bci)</p> <ul> <li>poziom dost\u0119pu - <code>public</code>, <code>protected</code>, <code>package</code>, <code>private</code></li> <li><code>static</code> - deklaruje metod\u0119 jako statyczn\u0105</li> <li><code>abstract</code> \u2013 metoda nie posiada definicji, jej klasa musi by\u0107 abstrakcyjna</li> <li><code>final</code> - nie mo\u017ce by\u0107 nadpisana przez metody klas pochodnych</li> <li><code>native</code> - metoda rodzima, napisana w innym j\u0119zyku programowania</li> <li><code>synchronized</code> \u2013 mo\u017ce by\u0107 jednocze\u015bnie wykonywana (na rzecz konkretnego obiektu) tylko przez jeden w\u0105tek</li> <li>typ wyniku OBOWI\u0104ZKOWE</li> <li>nazwa metody OBOWI\u0104ZKOWE</li> <li>lista parametr\u00f3w (w nawiasach) OBOWI\u0104ZKOWE</li> <li>throws wyj\u0105tki - lista wyj\u0105tk\u00f3w zg\u0142aszanych przez metod\u0119</li> </ul> <p>Wynik metody Mo\u017cna zwr\u00f3ci\u0107</p> <ul> <li>nic -<code>void</code> <code>return;</code></li> <li>zmienn\u0105 np int <code>return 10;</code></li> <li> <p>obiekt (referencja) np. <code>return new String();</code></p> </li> <li> <p>Metody przeci\u0105\u017cone r\u00f3\u017cni\u0105 si\u0119 liczb\u0105 lub typem parametr\u00f3w</p> </li> <li>Metoda nadpisana (polimorficzna) ma t\u0119 sam\u0105 sygnatur\u0119, co metoda w klasie bazowej. Nie mo\u017ce rozszerza\u0107 zbioru zg\u0142aszanych wyj\u0105tk\u00f3w.</li> </ul> <p>Odwo\u0142ania w metodach</p> <ul> <li><code>this</code>-odwo\u0142anie do obiektu, na rzecz kt\u00f3rego wykonywana jest metoda</li> <li><code>super</code> - odwo\u0142anie do \"nadobiektu\", okre\u015blonego przez klas\u0119 bazow\u0105</li> </ul>"},{"location":"Java%E2%98%95/java_podstawy/#dziedziczenie","title":"Dziedziczenie","text":"<ul> <li>Mo\u017cna dziedziczy\u0107 (extends) tylko z jednej klasy</li> <li>Wszystkie obiekty dziedzicz\u0105 (niejawnie, obowi\u0105zkowo, po\u015brednio lub bezpo\u015brednio) z klasy java.lang.Object</li> <li>Klasa pochodna dziedziczy wszystkie sk\u0142adowe, kt\u00f3re s\u0105 dost\u0119pne dla niej i kt\u00f3rych sama nie przes\u0142ania (pola) lub nie nadpisuje (metody)</li> <li>Konstruktor\u00f3w nie dziedziczy si\u0119</li> <li>Nadpisana metoda mo\u017ce deklarowa\u0107 zg\u0142aszanie tylko podzbioru wyj\u0105tk\u00f3w zg\u0142aszanych przez metod\u0119 dziedziczon\u0105.</li> <li> <p>Specyfikator dost\u0119pu do metody nadpisanej mo\u017ce zezwoli\u0107 na wi\u0119kszy dost\u0119p ni\u017c metoda dziedziczona ale nie na mniejszy. Np. metoda chroniona (protected) w klasie bazowej mo\u017ce zosta\u0107 upubliczniona, ale nie \"uprywatniona\"</p> </li> <li> <p>Metody klasy bazowej, kt\u00f3rych nie mo\u017cna nadpisa\u0107 w klasie pochodnej:</p> </li> <li>metoda zadeklarowana jako final w klasie bazowej</li> <li>metoda statyczna (mo\u017cna jedynie ukry\u0107 metod\u0119 statyczn\u0105 dziedziczon\u0105 przez jej ponowne zadeklarowanie)</li> <li>Metody klasy bazowej, kt\u00f3re musz\u0105 zosta\u0107 nadpisane w klasie pochodnej:</li> <li>metody zadeklarowane jako abstrakcyjne w klasie bazowej</li> <li>wszystkie metody bazowej klasy abstrakcyjnej</li> </ul> <p>Dziedziczenie po java.lang.Object Metody klasy Object, kt\u00f3re mog\u0105 by\u0107 nadpisane:</p> <ul> <li>clone</li> <li>equals, hashCode - por\u00f3wnywanie obiekt\u00f3w</li> <li>finalize - destruktor</li> <li>toString - zamienia obiekt w klas\u0119 String pozwalaj\u0105c na \"tekstowy wydruk\" zawarto\u015bci za pomoc\u0105 <code>System.out.println</code></li> </ul> <p>Metody final (nie mog\u0105 by\u0107 nadpisane):</p> <ul> <li>getClass -Metoda zwraca reprezentacj\u0119 \"run-time\" klasy obiektu w postaci obiektu typu Class. Mo\u017cna dowiedzie\u0107 si\u0119 z niego o nazwie klasy, jej klasie bazowej i interfejsach, kt\u00f3re implementuje klasa</li> </ul> <pre><code>void PrintClassName(Object obj) {\nSystem.out.println(\"Klasa obiektu to \"+ obj.getClass().getName()); }\nObject createNewInstanceOf(Object obj) {\nreturn obj.getClass().newInstance(); //Nowa instancja tego samego obiektu\n}\n</code></pre> <ul> <li>notify</li> <li>notifyAll</li> <li>wait</li> </ul>"},{"location":"Java%E2%98%95/java_podstawy/#interfejs","title":"Interfejs","text":"<p>Interfejs \u2013 typ referencyjny, zawieraj\u0105cy deklaracje metod, implementacje domy\u015blne metod, pola sta\u0142e, metody statyczne, interfejsy i klasy</p> <pre><code>[modyfikatory] interface NazwaInterfejsu [extends Interfejs1,\u2026]\n{\n// cia\u0142o interfejsu\n}\n</code></pre> <p>Interfejs jest domy\u015blnie <code>publiczny</code> i obowi\u0105zkowo <code>abstrakcyjny</code> Metody interfejsu \u2013 domy\u015blnie <code>publiczne</code>; albo abstrakcyjne, albo domy\u015blne, albo statyczne Pola interfejsu \u2013 domy\u015blnie <code>publiczne</code>, statyczne i finalne.</p> <p>Przyk\u0142ad</p> <pre><code>interface A {int i=2;}\ninterface B {void foo();}\ninterface C extends A, B{\nint i=3; //przes\u0142oni to i z interfejsu A\n}\nclass D implements C{\nvoid foo(){System.out.println(i);}\n}\n</code></pre> <p>implementacje domy\u015blne i statyczne metod</p> <pre><code>public interface Addressable {\nString getStreet();\nString getCity();\ndefault String getFullAddress() {\nreturn getStreet()+\", \"+getCity();\n}\nstatic void foo(){\nSystem.out.println(\"foo\");\n}\n</code></pre> <p>Umo\u017cliwiaj\u0105 zdefiniowanie metod, kt\u00f3rych dzia\u0142anie jest niezale\u017cne od potencjalnych sposob\u00f3w implementacji interfejsu. Metody domy\u015blne mog\u0105 by\u0107 nadpisywane w klasach implementuj\u0105cych interfejs.</p>"},{"location":"Java%E2%98%95/java_podstawy/#wyjatki","title":"Wyj\u0105tki","text":"<p>Java wymaga, aby metody obs\u0142ugiwa\u0142y lub specyfikowa\u0142y wszystkie sprawdzalne wyj\u0105tki, kt\u00f3re mog\u0105 wyst\u0105pi\u0107 podczas wykonania programu. Wyj\u0105tki, kt\u00f3re s\u0105 powodowane przez z\u0142\u0105 logik\u0119 samego programu (np. b\u0142\u0119dy arytmetyczne lub b\u0142\u0119dy dost\u0119pu do pami\u0119ci danych programu), nie s\u0105 sprawdzane przez kompilator. Nie ma wymogu ich obs\u0142ugi lub deklarowania ich wyst\u0105pienia. Np. s\u0105 nimi:</p> <ul> <li>wyj\u0105tki arytmetyczne (np. dzielenie przez zero),</li> <li>wyj\u0105tki wskaza\u0144 (np. pr\u00f3ba odwo\u0142ania do obiektu poprzez zerow\u0105 referencj\u0119, pr\u00f3ba rzutowania na obiekt niew\u0142a\u015bciwej klasy),</li> <li>wyj\u0105tki indeksowania (np. odwo\u0142anie do elementu tablicy poprzez z\u0142y indeks).</li> </ul> <p>Wyrzucenie wyj\u0105tku: <code>throw obiekt</code> Obs\u0142uga:</p> <pre><code>try {\ninstrukcje // tu mo\u017ce wyst\u0105pi\u0107 throw\n} catch (typ_wyj\u0105tku|inny_typ nazwa) { // obs\u0142uga wyj\u0105tk\u00f3w dw\u00f3ch typ\u00f3w\ninstrukcje\n} finally { // wykonywana zawsze niezale\u017cnie od zaistnienia wyj\u0105tku\ninstrukcje\n}\n</code></pre> <p>Jako wyj\u0105tek mo\u017ce by\u0107 zg\u0142oszony jedynie obiekt klasy <code>Throwable</code> lub klasy pochodnej od Throwable. W innym razie wyst\u0105pi b\u0142\u0105d kompilacji</p> <p>Hierarchia klas wyj\u0105tk\u00f3w</p> <ul> <li><code>Error</code>. B\u0142\u0105d dynamicznej konsolidacji programu lub inny \"ci\u0119\u017cki\" b\u0142\u0105d w JVM. Programy nie powinny obs\u0142ugiwa\u0107 ani zg\u0142asza\u0107 takich wyj\u0105tk\u00f3w. (b\u0142\u0105d w maszynie albo np brak pami\u0119ci itp.)</li> <li><code>Exception</code>. Jest to klasa bazowa wyj\u0105tk\u00f3w w programach Javy. S\u0105 ju\u017c liczne klasy pochodne tej klasy, np. IllegalAccessException, NegativeArraySizeException.</li> <li><code>RuntimeException</code>. Specjalna klasa pochodna od Exception, kt\u00f3ra dotyczy wyj\u0105tk\u00f3w niesprawdzalnych, zg\u0142aszanych przez Runtime (\u015brodowisko czasu wykonania programu). np dzielenie przez 0</li> </ul> <p>Delegowanie wyj\u0105tk\u00f3w \"w g\u00f3r\u0119\"</p> <pre><code> public class Example3 {\npublic static void notMainYet(String[] args) throws IOException {\ntry(BufferedReader br = new BufferedReader(new FileReader(\"/testing.txt\")))\n{\nString line;\nwhile ((line = br.readLine()) != null) {\nSystem.out.println(line);\n}\n}\n}\n</code></pre> <pre><code>try{\nnotMainYet(null);\n}\ncatch(IOException e){\ne.getSuppressed(); // zwraca tablic\u0119 wyj\u0105tk\u00f3w powsta\u0142ych przy zwalnianiu zasob\u00f3w\n}\n</code></pre> <p>Kompilator automatycznie generuje niejawny blok finally z kodem bezpiecznie zamykaj\u0105cym zasoby.</p>"},{"location":"Java%E2%98%95/java_podstawy/#modu","title":"Modu\u0142","text":"<p>Modu\u0142 grupuje powi\u0105zane ze sob\u0105 pakiety, okre\u015blaj\u0105c, kt\u00f3re z nich zostan\u0105 udost\u0119pnione oraz to jakie pakiety i modu\u0142y s\u0105 jemu potrzebne.</p> <p>Budowa:</p> <ul> <li>Katalog bazowy (root direcotry) modu\u0142u nazwany tak samo jak nazwa modu\u0142u.</li> <li>deskryptor modu\u0142u <code>module-info.java</code> -zawiera opis modu\u0142u</li> </ul> <pre><code>module com.mycompany.factories {\nexports com.mycompany.interfaces;  //exports opisuje kt\u00f3re paczki maj\u0105 by\u0107 dost\u0119pne w pozosta\u0142ych modu\u0142ach\nexports com.mycompany.factories;\n\nrequires modulename;  //requires opisujeod jakich modu\u0142\u00f3w zale\u017cy ten modu\u0142\n}\n</code></pre> <p>exports and exports\u2026to. An exports module directive specifies one of the module\u2019s packages whose public types (and their nested public and protected types) should be accessible to code in all other modules. An exports\u2026to directive enables you to specify in a comma-separated list precisely which module\u2019s or modules\u2019 code can access the exported package\u2014this is known as a qualified export.</p> <p>uses. A uses module directive specifies a service used by this module\u2014making the module a service consumer. A service is an object of a class that implements the interface or extends the abstract class specified in the uses directive.</p> <p>provides\u2026with. A provides\u2026with module directive specifies that a module provides a service implementation\u2014making the module a service provider. The provides part of the directive specifies an interface or abstract class listed in a module\u2019s uses directive and the with part of the directive specifies the name of the service provider class that implements the interface or extends the abstract class. //TODO</p> <p><code>javac --module-source-path . -d out -m com.mycompany.factories</code></p> <pre><code>import com.mycompany.interfaces.*;\nimport com.mycompany.factories.*;\n\npublic class Test{\npublic static void main(String args[]){\nRestClientInterface i = RestClientFactory().makeClient(null,null);\nString[] query = {\"key?2389fg38\",\"loc:21.1,50.9\"};\ni.runQuery(query);\n}\n}\n</code></pre> <p>Kompilacja: <code>javac --module-path out --add-modules com.mycompany.factories Test.java</code></p> <p>Uruchomienie: <code>java --module-path out --add-modules com.mycompany.factories Test</code></p> <p>//TODO Beans + Swing (w3 i w4 w6)</p>"},{"location":"Java%E2%98%95/java_podstawy/#programowanie-wspobiezne","title":"Programowanie wsp\u00f3\u0142bie\u017cne","text":"<p>Uruchomienie nowego w\u0105tku \u2013 zadanie do wykonania przez nowy w\u0105tek zdefiniowane w metodzie <code>run()</code></p> <p>S\u0105 2 sposoby:</p> <p>Klasa implementuj\u0105ca Runnable</p> <pre><code>public class MyRunnable implements Runnable {\npublic void run() {\nSystem.out.println(\"Hello from a thread!\");\n}\npublic static void main(String args[])\n{\n(new Thread(new MyRunnable())).start();\n}\n}\n</code></pre> <p>Klasa dziedzicz\u0105ca po Thread</p> <pre><code>public class HelloThread extends Thread {\npublic void run() {\nSystem.out.println(\"Hello from a thread!\");\n}\npublic static void main(String args[])\n{\n(new HelloThread()).start();\n}\n}\n</code></pre>"},{"location":"Java%E2%98%95/java_podstawy/#diagram-stanow-watku","title":"Diagram stan\u00f3w w\u0105tku","text":"<pre><code>class MyThread extends Thread{public void run(){\u2026}}\n</code></pre>"},{"location":"Java%E2%98%95/java_podstawy/#przyczyny-blokowania-watkow","title":"Przyczyny blokowania w\u0105tk\u00f3w","text":"<p>III</p> <pre><code>public class Test3 {\npublic static void main(String args[]) {\nThread p = new Producent();\np.setDaemon(true);\np.start();\ntry {\np.join(); //join-oczekiwanie\n}\ncatch(InterruptedException e)\n{\ne.printStackTrace();\n}\n}\n}\n</code></pre> <p>IV</p> <p>s\u0142owo kluczowe <code>synchronized</code> sprawia, \u017ce dane obiekty /metody nie mog\u0105 by\u0107 u\u017cywane dednocze\u015bnie przez kilka w\u0105tk\u00f3w i je\u017celi jeden w\u0105tek w\u0142a\u015bnie korzysta z takiego obiektu to wszystkie pozosta\u0142e musz\u0105 poczeka\u0107</p> <pre><code>class Schowek {int wartosc = -1;}\nclass Producent [\u2026]\nSchowek schowek;\nProducent(Schowek s) {schowek=s};\npublic void run [\u2026]\nSystem.out.print(\" p\"+i);\nsynchronized(schowek) {\nschowek.wartosc=i;\n} [\u2026]\n\nclass Konsument [\u2026]\npublic void run() {\ntry\n{\nfor(int i=0; i&lt;6; i++)\n{\nint w;\nsynchronized(schowek) {\nw=schowek.wartosc;\n}\nSystem.out.print(\" k\"+w);\nsleep((long)(Math.random()*3000));\n}\n} [\u2026]\npublic static void main(String args[]) {\nSchowek s = new Schowek();\nThread p = new Producent(s);\nThread k = new Konsument(s);[\u2026]\n</code></pre> <p>V Tak jak ma to miejsce w monitorach</p> <pre><code>class Schowek [\u2026]\nboolean jestZapelniony = false; [\u2026]\n\nclass Producent [\u2026]\nsynchronized(schowek) {\nwhile( schowek.jestZapelniony )\nschowek.wait();\nschowek.wartosc=i;\nschowek.jestZapelniony=true;\nschowek.notifyAll();\n} [\u2026]\n\nclass Konsument [\u2026]\nsynchronized(schowek) {\nwhile(!schowek.jestZapelniony )\nschowek.wait();\nw=schowek.wartosc;\nschowek.jestZapelniony=false;\nschowek.notifyAll();\n}\n</code></pre> <p>Przy takim schemacie dzia\u0142ania nale\u017cy zawsze:</p> <ul> <li>Sprawdza\u0107 zmienn\u0105 warunkow\u0105 w schemacie while(warunek) <code>wait() [\u2026] notify/All()</code></li> <li>Pami\u0119ta\u0107 o nadaniu zmiennej warunkowej odpowiedniej warto\u015bci (unikanie zakleszcze\u0144)</li> <li>Obs\u0142ugiwa\u0107 monitor po zaj\u0119ciu zamka (IllegalStateException)</li> </ul>"},{"location":"Java%E2%98%95/java_podstawy/#javautilconcurrentlocks","title":"java.util.concurrent.locks.*","text":"<p>Obiekty u\u0142atwiaj\u0105ce synchronizacj\u0119 w\u0105tk\u00f3w - Po\u0142\u0105czenie funkcjonalno\u015bci zamka i monitora w jednym obiekcie, implementuj\u0105cym interfejs <code>Lock</code></p> <ul> <li>U\u0142atwienie podzia\u0142u i obs\u0142ugi w\u0105tk\u00f3w oczekuj\u0105cych na zas\u00f3b ze zr\u00f3\u017cnicowanymi warunkami wznowienia \u2013 obiekt <code>Condition</code></li> <li>Dodatkowe mo\u017cliwo\u015bci, w zale\u017cno\u015bci od implementacji \u2013 np. wyb\u00f3r strategii aktywacji w\u0105tk\u00f3w wznawianych do wykonania (<code>ReentrantLock</code>)</li> </ul> <pre><code>void schowaj(int i) [\u2026]\nzamek.lock();\nwhile(!warunek_zapisu)\nzapis.await();\n[\u2026] // zapis do bufora\nodczyt.signal();\n[\u2026] finally {zamek.unlock();}\n\nvoid schowaj(int i) [\u2026]\nzamek.lock();\nwhile(!warunek_zapisu)\nzapis.await();\n[\u2026] // zapis do bufora\nodczyt.signal();\n[\u2026] finally {zamek.unlock();}\n</code></pre> <p>//TODO fork/join</p>"},{"location":"Java%E2%98%95/java_podstawy/#siec","title":"Sie\u0107","text":"<p>Dwa podstawowe rodzaje protoko\u0142\u00f3w oparte na IP: \u25aa TCP \u2013 Transmission Control Protocol \u2013 po\u0142\u0105czeniowy kontroluje poprawno\u015b\u0107 przes\u0142anych danych, dostosowuje si\u0119 do przepustowo\u015bci \u0142\u0105cza, wymagaj\u0105c informacji zwrotnej od odbiorcy \u25aa UDP \u2013 User Datagram Protocol \u2013 bezpo\u0142\u0105czeniowy ca\u0142e sterowanie transmisj\u0105 pozostawione u\u017cytkownikowi, mo\u017cliwo\u015b\u0107 transmisji rozg\u0142oszeniowej</p> <p>Pakiet <code>java.net</code> zawiera podstawowe klasy zwi\u0105zane z komunikacj\u0105 sieciow\u0105: URL, socket i pochodne, itp</p> <p>TCP - przyk\u0142adowy serwer:</p> <pre><code>import...\npublic class MyHttpServer {\npublic static void main(String[] args) throws Exception {\nServerSocket sSocket = new ServerSocket(1777);\nwhile(true) {\nSocket newSocket = sSocket.accept(); //zawiesza w oczekiwaniu na po\u0142\u0105czenie\nOutputStream os = newSocket.getOutputStream();\nStringBuffer sb = new StringBuffer();\nsb.append(\"&lt;html&gt;&lt;body&gt;HTTPServer works!&lt;/body&gt;&lt;/html&gt;\");\nbyte[] byteArray = sb.toString().getBytes();\nos.write(\"HTTP/1.0 200 OK\\n\".getBytes());\nos.write(new String(\"Content-Length: \"+byteArray.length+\"\\n\").getBytes());\nos.write(\"Content-Type: text/html\\n\\n\".getBytes());\nos.write(byteArray);\nos.flush();\nos.close();\nbr.close();\nnewSocket.close();\n}\n}\n}\n</code></pre> <p>http://www.java2s.com/Code/Java/Network-Protocol/BufferedReaderforServerSocket.htm</p>"},{"location":"Java%E2%98%95/java_podstawy/#rmi-remote-method-invocation","title":"RMI - Remote Method Invocation","text":"<p>Pozwala odnosi\u0107 si\u0119 poprzez referencj\u0119 do obiekt\u00f3w na innych maszynach</p> <p>Hello world of RMI \u2013 wywo\u0142anie zwrotne</p> <p>Klient udost\u0119pnia us\u0142ug\u0119:</p> <pre><code>public interface Callback extends Remote{\npublic void callback() throws RemoteException;\n}\npublic static class CallbackImpl extends UnicastRemoteObject implements Callback{\nprotected CallbackImpl() throws RemoteException {\nsuper();\n}\npublic void callback(){\nSystem.out.println(\"Hello from the callback\");\n}\n}\n</code></pre> <p>Serwer definiuje now\u0105 us\u0142ug\u0119 (asynchroniczn\u0105):</p> <pre><code>public void hello(Object o) throws RemoteException{\n((Client.Callback)o).callback();\n}\n</code></pre> <p>Wywo\u0142anie u klienta:</p> <pre><code>worker.hello(UnicastRemoteObject.toStub(new CallbackImpl()));\n</code></pre>"},{"location":"Java%E2%98%95/java_podstawy/#java-messaging-system-jms","title":"Java Messaging System (JMS)","text":"<p>Komunikacja pomi\u0119dzy wieloma JVM \u2013 typowe zadania: \u25aa kolejka komunikat\u00f3w (z buforowaniem) \u25aa transmisja rozg\u0142oszeniowa do wybranych odbiorc\u00f3w \u25aa filtrowanie komunikat\u00f3w w transmisji rozg\u0142oszeniowej \u25aa synchroniczne i asynchroniczne modele komunikacji \u25aa zarz\u0105dzanie trwa\u0142o\u015bci\u0105 i wa\u017cno\u015bci\u0105 komunikat\u00f3w (data wa\u017cno\u015bci, priorytet, przechowywanie, gdy nie ma odbiorcy) \u25aa gwarancja dostarczenia \u25aa grupowanie serii komunikat\u00f3w w niepodzieln\u0105 transakcj\u0119 \u25aa r\u00f3wnie\u017c: komunikacja z komponentami stworzonymi w innych j\u0119zykach</p> <p>//TODO jms</p>"},{"location":"Java%E2%98%95/java_podstawy/#atrybuty-systemowe","title":"Atrybuty Systemowe","text":"<p>S\u0105 to dane na temat \u015brodowiska takie jak:</p> <ul> <li>nazwa komputera</li> <li>nazwa u\u017cytkownika</li> <li>katalog roboczy</li> <li>identyfikator systemu operacyjnego</li> <li>itp</li> </ul> <p>Atrybuty przechowywane w postaci par: (nazwa,warto\u015b\u0107). Ustawiane na trzy sposoby:</p> <ul> <li>\u0142adowane przez klas\u0119 <code>java.util.Properties</code> \u2013 na spos\u00f3b trwa\u0142y mi\u0119dzy uruchomieniami maszyny wirtualnej</li> <li>poprzez argumenty wiersza polece\u0144 \u2013 na czas wykonania aplikacji <code>-Dnazwa=warto\u015b\u0107</code></li> <li>poprzez parametry apletu \u2013 na czas wykonania apletu</li> </ul> <p></p> <p>Metody klasy Properties:</p> <ul> <li><code>contains(Object value)</code>, <code>containsKey(Object key)</code> \u2013 sprawdzaj\u0105, czy obiekt zawiera dan\u0105 warto\u015b\u0107 b\u0105d\u017a nazw\u0119 atrybutu (podawane jako String)</li> <li><code>getProperty(String key)</code>, <code>getProperty(String key, String default)</code>\u2013zwraca warto\u015b\u0107 danego atrybutu / warto\u015b\u0107 domy\u015bln\u0105 je\u015bli atrybut nie istnieje</li> <li><code>setProperty(String key, String value)</code> \u2013 zapisuje warto\u015b\u0107 atrybutu</li> <li><code>list(PrintStream s)</code>, <code>list(PrintWriter w)</code> \u2013 zapisuje wszystkie w\u0142asno\u015bci do strumienia</li> <li><code>elements()</code>, <code>keys()</code> \u2013 zwraca iteratory warto\u015bci i nazw atrybut\u00f3w</li> <li> <p><code>load(From)/store(ToXML)</code> \u2013 umo\u017cliwia pobranie/zapis atrybut\u00f3w (w formacie XML)</p> </li> <li> <p>Za\u0142adowanie atrybut\u00f3w przy starcie</p> </li> </ul> <pre><code>Properties p=new Properties();\nFileInputStream is=new FileInputStream(\"my.properties\");\np.load(is);\nis.close();\n</code></pre> <ol> <li> <p>Odczyt/wykorzystanie/modyfikacja atrybut\u00f3w podczas pracy programu</p> </li> <li> <p>Zapami\u0119tanie (zmodyfikowanych) atrybut\u00f3w przy wyj\u015bciu z programu</p> </li> </ol> <pre><code>FileOutputStream os=new FileOutputStream(\"my.properties\");\np.store(os, \"---No Comment---\");\nos.close();\n</code></pre> Nazwa atrybutu Opis file.separator separator nazw plik\u00f3w i katalog\u00f3w java.class.path \u015bcie\u017cka przeszukiwania klas Javy java.class.version wersja biblioteki systemowej Javy java.home katalog, w kt\u00f3rym zainstalowano Jav\u0119 java.vendor nazwa producenta u\u017cywanego JRE java.vendor.url adres www producenta u\u017cywanego JRE java.version wersja Javy line.separator separator wierszy tj. znak nowego wiersza os.arch architektura sprz\u0119towa syst. operacyjnego os.name nazwa systemu operacyjnego os.version wersja systemu operacyjnego path.separator separator wpis\u00f3w na \u015bcie\u017cce (set) user.dir katalog roboczy user.home katalog domowy u\u017cytkownika user.name nazwa u\u017cytkownika uruchamiaj\u0105cego JRE"},{"location":"Java%E2%98%95/java_podstawy/#runtime","title":"Runtime","text":"<p>Wi\u0119kszo\u015b\u0107 potrzeb aplikacji dost\u0119pu do systemu obs\u0142uguje klasa System. W rzadkich przypadkach aplikacja mo\u017ce odwo\u0142a\u0107 si\u0119 bezpo\u015brednio do \u015brodowiska czasu wykonania, reprezentowanego przez jeden obiekt klasy java.lang.Runtime, b\u0119d\u0105cy sprz\u0119giem aplikacji ze \u015brodowiskiem wykonania VM w systemie operacyjnym.</p> <pre><code>public static Runtime getRuntime();//zwraca akt. obiekt Runtime\n</code></pre> <p>Obiekt Runtime umo\u017cliwia m.in. \u2022 wykonanie programu funkcj\u0105 systemow\u0105 exec \u2022 pobranie informacji o liczbie dost\u0119pnych procesor\u00f3w, pami\u0119ci operacyjnej \u2022 zlecenie za\u0142adowania biblioteki dynamicznej \u2022 bezwarunkowe zatrzymanie maszyny wirtualnej</p> <p>//TODO wy\u017cej te\u017c s\u0105 todo</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/","title":"Terminal - podstawowe komendy i koncepty","text":""},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#szukanie-pomocy","title":"Szukanie pomocy","text":"<p>Sprawdzanie co jest czym oraz do czego s\u0142u\u017cy</p> <ul> <li>man - manual</li> <li>apropos - wyszukujemy nim s\u0142\u00f3w kluczowych (np w opisach program\u00f3w etc)</li> <li>whatis -</li> <li>file - opisuje typ pliku</li> </ul>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#wyrazenia-regularne","title":"Wyra\u017cenia regularne","text":"<p>link do regex\u00f3w</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#pliki","title":"Pliki","text":""},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#uprawnienia-plikow","title":"Uprawnienia plik\u00f3w","text":"<p>Ka\u017cdy plik w linuxie  ma swoje uprawnienia, kt\u00f3re s\u0105 podzielone na trzy grupy:</p> <ul> <li>w\u0142a\u015bciciel <code>u</code></li> <li>grupa <code>g</code></li> <li>inni <code>o</code></li> </ul> <p>Ka\u017cda z tych grup ma swoje uprawnienia do pliku, kt\u00f3re s\u0105 podzielone na:</p> <ul> <li>odczyt <code>r</code></li> <li>zapis <code>w</code></li> <li>wykonanie <code>x</code></li> </ul> <p>Poza tym s\u0105 te\u017c specjalne uprawnienia:</p> <ul> <li><code>s</code> - setuid (gdy dla w\u0142a\u015bciciela), setgid (gdy dla grupy), sticky bit - jest to flaga, kt\u00f3ra mo\u017ce mie\u0107 r\u00f3\u017cne efekty w zale\u017cno\u015bci od tego, czy jest ustawiona na piku, czy nafolderze. przyk\u0142ad</li> <li>na pliku wykonywalnym - je\u015bli jest ustawiona to plik b\u0119dzie wykonywany z uprawnieniami w\u0142a\u015bciciela pliku, a nie osoby, kt\u00f3ra go uruchomi\u0142a. Tzn mo\u017ce by\u0107 u\u017cywana do uruchamiania aplikacji z uprawnieniami roota, nawet je\u015bli si\u0119 nim nie jest.</li> <li>na folderze - je\u015bli setgid jest ustawiony na folderze, to ka\u017cdy plik stworzony w tym folderze b\u0119dzie mia\u0142 grup\u0119 ustawion\u0105 na grup\u0119 folderu, a nie grup\u0119 u\u017cytkownika, kt\u00f3ry go stworzy\u0142.</li> </ul> Przyk\u0142adowe <p>Warto\u015b\u0107 <code>0770</code> wszyscy w grupie mog\u0105 dodawa\u0107, usuwa\u0107 i czyta\u0107 sobie nawzajem pliki w folderze, ale nie mog\u0105 sobie nawzajemi pisa\u0107.</p> <pre><code>sudo chmod 0770 folder\n</code></pre> <p>Warto\u015b\u0107 <code>1770</code> daje takie uprawnienia jak wy\u017cej z t\u0105 r\u00f3\u017cnic\u0105, \u017ce tylko w\u0142a\u015bciciel pliku mo\u017ce go usun\u0105\u0107.</p> <pre><code>sudo chmod 1770 folder\n</code></pre> <p>Warto\u015b\u0107 <code>2770</code> oznacza, \u017ce wszyscy u\u017cytkownicy grupy mog\u0105 dodawa\u0107, czyta\u0107, zadpisywa\u0107 i usuwa\u0107 sobie nawzajem pliki w folderze.</p> <p>Warto\u015b\u0107 <code>3770</code> oznacza to samo co wy\u017cej z t\u0105 r\u00f3\u017cnic\u0105, \u017ce tylko w\u0142a\u015bciciel mo\u017ce usuwa\u0107 pliki.</p> <p>pierwsza cyfra jest wynikiem sumowania <code>sticky bit + 2 * setgid</code></p> <pre><code>ls -l\n#-rw-r--r-- 1 user privileged_users 0 Oct  9 12:00 plik.txt\n</code></pre> <p>Pierwszy znak to typ pliku, a kolejne trzy grupy to uprawnienia dla w\u0142a\u015bciciela, grupy i innych. Czyli przyk\u0142adowy ci\u0105g <code>-rw-r--r--</code> mo\u017cna rozpisa\u0107 na</p> <ul> <li>pierwszy bit jako <code>-</code> (plik zwyk\u0142y) (mo\u017ce by\u0107 te\u017c <code>d</code> dla folder\u00f3w) </li> <li>w\u0142a\u015bciciela jako <code>rw-</code> </li> <li>grup\u0119 jako <code>r--</code> </li> <li>i innych jako <code>r--</code>.</li> </ul> <p>Mo\u017cna to tak\u017ce przedstawi\u0107 w formacie zapisu liczbowego, gdzie ka\u017cda grupa ma swoj\u0105 warto\u015b\u0107: <code>r=4</code>, <code>w=2</code>, <code>x=1</code>.</p> <pre><code>#-rw-r--r--\n# 110 100 100\n# 6   4   4\n</code></pre> <p>Ten zapis mo\u017ce by\u0107 wykorzystywany chocia\u017cby przez komend\u0119 <code>chmod</code>, kt\u00f3ra przyjmuje r\u00f3\u017cne waroanty argument\u00f3w link.</p> <pre><code>chmod 777 plik.txt #nadanie pe\u0142nych uprawnie\u0144 wszystkim\nchmod 755 plik.txt #nadanie pe\u0142nych uprawnie\u0144 w\u0142a\u015bcicielowi, a grupie i innym tylko odczytu i wykonania\n\n# zapis zmieniaj\u0105cy uprawnienia\nchmod u+x plik.txt #dodanie uprawnie\u0144 do wykonania dla w\u0142a\u015bciciela\nchmod u-x plik.txt #usuni\u0119cie uprawnie\u0144 do wykonania dla w\u0142a\u015bciciela\nchmod g+rw plik.txt #dodanie uprawnie\u0144 do odczytu i zapisu dla grupy\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#szukanie-plikow","title":"Szukanie plik\u00f3w","text":"<pre><code>find -name a*n.java\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#rozmiary-folderow","title":"Rozmiary folder\u00f3w","text":"<p>domy\u015blne <code>ls</code> ni pokauje rozmiar\u00f3w folder\u00f3w. Do tego nale\u017cy u\u017cy\u0107 komandy <code>du</code></p> <pre><code>du -s /home/ja\n</code></pre> <p>Przydatne flagi:</p> <ul> <li><code>-s</code> -poka\u017c tylko wybrany folder bez podfolder\u00f3\u0153</li> <li><code>-h</code> - human readable, zaokr\u0105gla do GB, MB etc.</li> <li><code>--max-depth=2</code> - maksymalna g\u0142\u0119boko\u015b\u0107 przy pokazywaniu podfolder\u00f3w</li> </ul> <p>Alternatywnie do badania struktury katalog\u00f3w mo\u017cna u\u017cy\u0107 <code>tree</code></p> <pre><code>tree --du -h -d\n</code></pre> <p>Flagi:</p> <ul> <li><code>-d</code> - wy\u015bwietl tylko foldery</li> <li><code>--du</code> - podlicz rozmiary folder\u00f3w</li> <li><code>-h</code> podawaj rozmiary w czytelnym formacie</li> </ul>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#pisanie-do-plikow","title":"Pisanie do plik\u00f3w","text":"<p>Ka\u017cda aplikacja ma wej\u015bcie (<code>stdin</code>) oraz dwa wyj\u015bcia (<code>stdout</code>-zwyk\u0142e i <code>stderr</code>-dla b\u0142\u0119d\u00f3w)</p> <p>Z pomoc\u0105 poni\u017cszych komend mo\u017cemy przekierowywa\u0107 wyj\u015bcia program\u00f3w do urz\u0105dze\u0144 lub plik\u00f3w</p> Komenda Dzia\u0142anie <code>&lt;</code> deviceredirects stdin to the device <code>&gt;&gt;</code> deviceredirects stdout to the device (appends to the end) <code>&gt;</code> device redirects stdout to the device (overwrites previous content) <code>2&gt;</code> device redirects stderr to the device (overwrites previous content) <code>2&gt;&amp;1</code> redirects stderr to the device associated to stdout <pre><code>cat logi.log | grep \"10-10-2022\" &gt; logs_from_10-10-2022.log\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#obrobka-tekstu","title":"Obr\u00f3bka tekstu","text":""},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#wyszukiwanie-wzorca","title":"Wyszukiwanie wzorca","text":"<pre><code>cat PLIKI | grep wyszukiwane_slowo\n</code></pre> <pre><code>grep -r . #przeszukanie wszystkich plik\u00f3w (nawet binarnych) w danym folderze\n</code></pre> <p>strings s\u0142u\u017cy do wypisywania string\u00f3w z plik\u00f3w binarnych (dobrze wsp\u00f3\u0142dzia\u0142a z grep)</p> <pre><code>strings PLIK\n</code></pre> <p>Inne przydatne flagi grepa</p> <code>-v</code> <code>--invert-match</code> odwr\u00f3cony grep, przekazuje tylko to, co nie pasuje <code>-B</code>, <code>--before-context=ILE</code> Wypisz ILE linii po przed znaleziskiem wy\u015bwietli\u0107 <code>-A</code>, <code>--after-context=ILE</code> Wypisz ILE linii po znalezisku wy\u015bwietli\u0107"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#dzielenie-duzszych-ancuchow-znakow","title":"Dzielenie d\u0142u\u017cszych \u0142a\u0144cuch\u00f3w znak\u00f3w","text":"<p><code>cut</code> - proste wycinanie fragment\u00f3w tekstu</p> <ul> <li><code>-b</code> byte - wydziela poszczeg\u00f3lne bajty</li> </ul> <pre><code>echo \"abcdefgh\" | cut -b 1,3,5-6\n# acef\n</code></pre> <pre><code>echo \"qwer tyui xxx\" | cut -d \" \" -f 2 #-d delimiter (separator) -f pole\n#tyui\n</code></pre> <p><code>-f</code> przyjmuje liczby w nast\u0119puj\u0105cych formatach: <code>N</code>, <code>N-M</code>, <code>-M</code>, <code>N-</code>, <code>X,Y,Z</code></p> <p><code>head</code> - s\u0142u\u017cy do pokazywania tylko wybranych linii.</p> <pre><code>cat ./dlugi_plik.log | head -n 100 #drukuje tylko 100 pierwszych linii\n</code></pre> <p>W wypadku, gdy chcemy wydzieli\u0107 sam\u0105 nazw\u0119 pliku ze \u015bcie\u017cki warto u\u017cy\u0107 komendy <code>basename</code></p> <pre><code>basename /sciezka/do/pliku/plik.txt\n# plik.txt\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#manipulacja-tekstem","title":"Manipulacja tekstem","text":"<p><code>sed</code> s\u0142u\u017cy do nieco bardziej zaawansowanych manipulacji</p> <pre><code>echo \"abcdefbc\" | sed \"s/bc/BC/\" # zamie\u0144 pierwszy pasuj\u0105cy ci\u0105g (bc) na BC\n#aBCdefbc\n</code></pre> <pre><code>TODO\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#zmienne","title":"Zmienne","text":"<p>Zmienn\u0105 tworzymy za pomoc\u0105 znaku <code>=</code>, kt\u00f3ry przypisuje warto\u015b\u0107 do dane identyfikatora. <code>identyfikator=warto\u015b\u0107</code>. Aby uzyska\u0107 dost\u0119p do zawarto\u015bci u\u017cywamy <code>$</code> przed nazw\u0105 zmiennej.</p> <pre><code>$ msg=\u201dHello World\u201d\n$ echo $msg\nHello World\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#wstawianie-zmiennych-w-tekst","title":"Wstawianie zmiennych w tekst","text":"<p>Jest kilka sposob\u00f3w, aby mie\u0107 w sktyptach tekst, kt\u00f3ry jest zale\u017cny od sytuacji. Mo\u017cemy do tego wykorzystywa\u0107:</p> <ul> <li>Zmienne <code>/my/path/to/${EDITED_FILE}</code></li> <li> </li> </ul>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#wyniki-funkcji-dsd","title":"Wyniki funkcji ` dsd","text":""},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#argumenty","title":"Argumenty","text":"<p>Ka\u017cda funkcja, czy te\u017c skrypt bashowy mo\u017ce mie\u0107 przekazywane poprzez proste podanie ich po wywo\u0142aniu.</p> <p>Dla skryptu:</p> <pre><code>#!/bin/bash\n\nwyprintuj_argument()\n{\n#tutaj odwo\u0142ujemy si\u0119 do pierwszego argumentu przekazanego do funkcji\n#a nie do skryptu\necho \"argument $1\"\n}\n\nwyprintuj_argument $1\nwyprintuj_argument $2\n</code></pre> <p>przy wywo\u0142aniu <code>./skr.sh Hello 222</code> Otrzymamy</p> <pre><code>argument Hello\nargument 222\n</code></pre> <p>Zwroty przydatne przy obs\u0142udze argument\u00f3w</p> $0 Nazwa wo\u0142anej komendy/skryptu $1 $2 $3 poszczeg\u00f3lne argumenty (pierwszy, drugi, trzeci) $# Liczba argument\u00f3w $* Wszystkie argumenty jako jeden string $@ Wszystkie argumenty jako lista"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#xargs","title":"xargs","text":"<p>Je\u015bli chcemy wykorzystywa\u0107 wyj\u015bcia mechanizm strumieni do przekazywania argument\u00f3w to mo\u017cemy u\u017cy\u0107 tak\u017ce komendy xargs</p> <pre><code>#Wywo\u0142anie komendy rm dla ka\u017cdego znalezionego pliku\nfind /path -type f -print | xargs rm\n</code></pre> <p>Flagi:</p> <ul> <li><code>-n</code> - maksymalna liczba argument\u00f3w</li> <li><code>-d</code>, <code>--delimiter</code> - podzia\u0142 na cz\u0119\u015bci (komenda zostanie wywo\u0142ana wielokrotnie)</li> </ul> <pre><code>echo -n 123-456-7890 | xargs echo\n#&gt; 123-456-7890\necho -n \"123-456-789\" | xargs -n 1 -d - echo\n#&gt; 123\n#&gt; 456\n#&gt; 789\n</code></pre> <ul> <li><code>-I</code>, <code>-i</code>, <code>--replace=</code> pozwala na elastyczne wstawianie otrzymanego argumentu</li> </ul> <pre><code>#Stworzy pliki 123.txt 456.txt 789.txt\necho -n \"123-456-789\" | xargs -d - -n 1 -I{} echo {}.txt\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#procesy","title":"Procesy","text":"<p>\u0141\u0105czniki:</p> <ul> <li><code>&amp;&amp;</code> -wykonaj kolejny proces, je\u015bli poprzedni si\u0119 powiedzie (retcode 0)</li> <li><code>||</code> - wykonaj nast\u0119pny, gdy poprzedni to pora\u017cka</li> <li><code>&amp;</code> - proces jest utuchamiany w tle (jego pid mo\u017cna zdoby\u0107 za pomoc\u0105 <code>$!</code>)</li> </ul> <p>TODO wi\u0119cej</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#warunki","title":"Warunki","text":"<p>Warunki sprawdza si\u0119 za pomoc\u0105 komendy <code>test</code> z odpowiednimi flagami. Mo\u017cna to tak\u017ce robi\u0107 za pomoc\u0105 wmieszczaj\u0105c warunek w nawiasach <code>[]</code>. Mo\u017cliwy jest te\u017c wariant z dwoma nawiasami <code>[[ co\u015btam ]]</code> jest on wspierany przez wszystkie nowsze systemy u\u017cywaj\u0105ce Basha, ale mimo wszystko mo\u017ce byc on niekompatybilny ze starszymi.</p> <p>Warto pami\u0119ta\u0107, \u017ce bardzo wa\u017cne tu s\u0105 spacje i aby o nich nie zapomnie\u0107.</p> <p>Samo <code>test</code> jako komenda nie robi nic po prostu sprawdza warunek i zale\u017cnie od niego zwraca jaki\u015b kod.</p> <pre><code>[ 1 -gt 100 ]\necho \"Ret: $?\" #zwraca kod ostatnio dzia\u0142aj\u0105cej aplikacji\n# Ret: 1\n\n[ 100 -gt 1 ]\necho \"Ret: $?\"\n# Ret: 0\n</code></pre> Operator Description ! EXPRESSION The EXPRESSION is false. -n STRING The length of STRING is greater than zero. -z STRING The lengh of STRING is zero (ie it is empty). STRING1 = STRING2 STRING1 is equal to STRING2 STRING1 != STRING2 STRING1 is not equal to STRING2 INTEGER1 -eq INTEGER2 INTEGER1 is numerically equal to INTEGER2 INTEGER1 -gt INTEGER2 INTEGER1 is numerically greater than INTEGER2 INTEGER1 -lt INTEGER2 INTEGER1 is numerically less than INTEGER2 -d FILE FILE exists and is a directory. -e FILE FILE exists. -r FILE FILE exists and the read permission is granted. -s FILE FILE exists and it's size is greater than zero (ie. it is not empty). -w FILE FILE exists and the write permission is granted. -x FILE FILE exists and the execute permission is granted. <p>Dopiero po po\u0142\u0105czeniu z wyra\u017ceniami warunkowymi si\u0119 przydaje.</p> <p>Uwagi</p> <ul> <li><code>=</code> oraz <code>-eq</code> dzia\u0142aj\u0105 inaczej np <code>01 = 1</code> da fa\u0142sz, ale <code>01 -eq 1</code> da prawd\u0119</li> </ul>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#warunki-if","title":"Warunki if","text":"<pre><code> #nie musi tu by\u0107 koniecznie test, mo\u017ce to by\u0107 dowolna. Je\u015bli zwraca ona 0 to mamy sukces i wchodzimy do \u015brodka\nif apka_zwracaj\u0105ca_jaki\u015b_kod\nthen\nkomendy\nfi\n\n#wariant z else\nif apka_zwracaj\u0105ca_jaki\u015b_kod\nthen\nkomendy\nelse\ninne komendy\nfi\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/bash_cheatsheet/#petle","title":"P\u0119tle","text":"<p>for - iteruje po li\u015bcie</p> <pre><code>for variable in valuelist\ndo\nsomething\ndone\n</code></pre> <p>List\u0105 mog\u0105 by\u0107 argumenty programu</p> <pre><code>#!/bin/bash\necho The number of arguments is: $#\necho The entered command line is: $0 $@\necho The command arguments are:\nfor i in \"$@\"\ndo\necho $i\ndone\n</code></pre> <p>... albo pliki w folderze</p> <pre><code>for k in *\ndo\ncp $k $k.bak\n    echo $k copy created\ndone\n</code></pre> <p>lub wynik komendy (u\u017cywamy do tego <code>$()</code>)</p> <pre><code>for i in $(ls)\ndo\necho $i\ndone\n</code></pre> <p>//TODO opis skr\u00f3t\u00f3w klawiszowych Ctrl-C Ctrl-D etc // https://www.howtogeek.com/howto/ubuntu/keyboard-shortcuts-for-bash-command-shell-for-ubuntu-debian-suse-redhat-linux-etc/</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/o_systemie/","title":"Zarz\u0105dzanie systemem","text":""},{"location":"Linux%F0%9F%90%A7%20i%20Bash/o_systemie/#serwisy-i-demony","title":"Serwisy i demony","text":"<p><code>/etc/systemd/system/</code></p> <p><code>systemctl</code></p> <p>W wi\u0119kszo\u015bci dystrybucji Linuxa, zarz\u0105dzanie serwisami i demonami odbywa si\u0119 za pomoc\u0105 <code>systemd</code>. Wszystkie pliki konfiguracyjne znajduj\u0105 si\u0119 w katalogu <code>/etc/systemd/system/</code>.</p> <p>Do zarz\u0105dzania serwisami i demonami korzysta si\u0119 z aplikacji <code>systemctl</code>. Poni\u017cej znajduj\u0105 si\u0119 najwa\u017cniejsze komendy:</p> <ul> <li><code>systemctl start nazwa_serwisu</code> - uruchamia serwis</li> <li><code>systemctl stop nazwa_serwisu</code> - zatrzymuje serwis</li> <li><code>systemctl restart nazwa_serwisu</code> - restartuje serwis</li> <li><code>systemctl status nazwa_serwisu</code> - sprawdza status serwisu. Pokazuje nie tylko status, ale tak\u017ce wy\u015bwietla logi.</li> <li><code>systemctl enable nazwa_serwisu</code> - ustawia serwis do uruchamiania przy starcie systemu</li> <li><code>systemctl disable nazwa_serwisu</code> - usuwa serwis z uruchamiania przy starcie systemu</li> </ul> <p>Sk\u0142adnia plik\u00f3w opisuj\u0105cych serwisy jest dos\u0107 prosta. Przyk\u0142adowy plik konfiguracyjny (<code>/etc/systemd/system/http-map-socat.service</code>):</p> <pre><code>[Unit]\nDescription=Map HTTP port (80) to port 80 of another machine using socat\n#po jakich pozosta\u0142ych serwisach powinien si\u0119 uruchomi\u0107 (lista podzielona spacjami)\nAfter=network.target netbird.service\n\n[Service]\nExecStart=socat TCP-LISTEN:80,fork TCP:100.81.47.39:80\nRestartSec=15\nRestart=always\nStandardOutput=syslog\nStandardError=syslog\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Serwisy mog\u0105 mie\u0107 wiele instancji. Kiedy w nazwie pliku/seriwsu pojawia si\u0119 <code>@</code> to cz\u0119\u015b\u0107 po tym znaku jest nazw\u0105 instancji (np. <code>usb-mount@.service</code>). Wtedy uruchamiaj\u0105c serwis <code>systemctl start usb-mount@sdb1.service</code> towrzymy serwis, kt\u00f3rego nazw\u0105 jest <code>sdb1</code>. W pliku konfiguracyjnym serwisu jego nazw\u0119 reprezentuje <code>%i</code> lub <code>%I</code> (ten drugi wariant to nazwa poddana normalizacji). </p> <p>Automount usb devices with udev and systemd</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/o_systemie/#logi-systemowe","title":"Logi systemowe","text":"<p>Do prostego wy\u015bwietlania log\u00f3w kernela mo\u017ce by\u0107 uzyta komenda dmesg</p> <pre><code>sudo dmesg\n</code></pre> <p>Przydatne flagi to:</p> <ul> <li><code>-w</code> <code>--follow</code> - pod\u0105\u017canie za kolejnymi logami</li> <li><code>-T</code> - czas w formacie godziny (a nie liczony od startu)</li> </ul> <p>Do bardziej zaawansowanych zastosowa\u0144 mo\u017cna u\u017cywa\u0107 komendy journalctl.</p> <p>Przyk\u0142adowa komendy</p> <pre><code>journalctl --list-boots # wypisz ostatnie uruchomienia oraz ich czasy trwania\njournalctl -b-1 # wy\u015bwietl logi tylko z ostatniego uruchomienia (oznaczonego jako -1)\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/o_systemie/#domslne-foldery-systemowe","title":"Dom\u015blne foldery systemowe","text":"<p>TODO opisz te najwa\u017cniejsze dla mnie</p> <ul> <li><code>/home/</code></li> <li><code>/mnt</code></li> <li><code>/tmp</code></li> <li><code>/</code></li> </ul>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/o_systemie/#dyski-i-storage","title":"Dyski i storage","text":"<p>Do listowania dysk\u00f3w u\u017cywa si\u0119 komendy <code>lsblk</code></p> <pre><code>$ lsblk\nNAME                MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT\nsda                   8:0    0 465,8G  0 disk \n\u251c\u2500sda1                8:1    0   512M  0 part /boot/efi\n\u251c\u2500sda2                8:2    0     1K  0 part \n\u2514\u2500sda5                8:5    0 465,3G  0 part \u251c\u2500vgubuntu-root   253:0    0 464,3G  0 lvm  /\n  \u2514\u2500vgubuntu-swap_1 253:1    0   980M  0 lvm  [SWAP]\n</code></pre> <p>Do montowania manualnego montowania dysk\u00f3w mo\u017cna wykorzysta\u0107 komend\u0119 <code>mount</code> (w praktyce tego typu zagadnienia maj\u0105 znaczenie na serwerach, bo w dekstopowych systemach dyski s\u0105 montowane automatycznie)</p> <pre><code># Automatycznie zamontuj dyski z /etc/fstab\nsudo mount\n# Zamontuj DYSK w danej lokalizacji\nsudo mount /dev/sda1 /mnt/USB\n# Odmontowywanie\nsudo umount /mnt/USB\n</code></pre> <p>Do automatycznego montowania oraz opisywania dysk\u00f3w podczas bootowania systemu warto u\u017cy\u0107 konfiguracji z <code>/etc/fstab/</code>.</p> <pre><code># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;\n# / was on /dev/nvme0n1p2 during installation\nUUID=026c66e5-d1c4-444a-ba12-bcda1b15438f /               ext4    errors=remount-ro 0       1\n# /boot/efi was on /dev/nvme0n1p1 during installation\nUUID=8339-1FA4  /boot/efi       vfat    umask=0077      0       1\n/swapfile                                 none            swap    sw              0       0\n\n/dev/sda1   /mnt    auto    defaults,noauto,user    0   0\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/o_systemie/#udev","title":"Udev","text":"<p>Udev to system umo\u017cliwiaj\u0105cy automatyczn\u0105 obs\u0142ug\u0119 zdarze\u0144 zwi\u0105zanych z urz\u0105dzeniami. zdarzenia generowane przez udev dotycz\u0105 zdarze\u0144 takich jak np pod\u0142\u0105\u0107zenie/od\u0142\u0105czenie urz\u0105dze\u0144. Z pomoc\u0105 udeva mo\u017cemy ustali\u0107 zasady obs\u0142ugi takiego urz\u0105dzenia (jak np ustalenie miejsca montowania) b\u0105d\u017a uruchamia\u0107 skrypty dla wybranych zdarze\u0144.</p> <p>PLiki z konfiguracjami udev znajduj\u0105 si\u0119 w folderze <code>/etc/udev/rules.d/</code> (np. <code>60-antimicrox-uinput.rules</code> ).</p> <p>Przyk\u0142adowe konfiguracje wygl\u0105daj\u0105 w ten spos\u00f3b:</p> <pre><code>#Enable user access to keyboard using uinput event generator\nSUBSYSTEM==\"misc\", KERNEL==\"uinput\", OPTIONS+=\"static_node=uinput\", TAG+=\"uaccess\"\n\n# dla urz\u0105dze\u0144 pasuj\u0105cych do regexa z subsystemu usb uruchom skrypt gdy urz\u0105dzenie jest pod\u0142\u0105czane\nKERNEL==\"sd[a-z][0-9]\", SUBSYSTEMS==\"usb\", ACTION==\"add\", RUN+=\"/bin/systemctl start usb-mount@%k.service\"\n</code></pre> <p>Syntax:</p> <ul> <li><code>%k</code>, <code>$kernel</code> -wyra\u017cenie podmieniane dla warto\u015bci KERNELa</li> <li><code>%n</code>, <code>$number</code> - kernelowy numer dla urz\u0105dzenia, np dla <code>/dev/sda1</code> jest to <code>1</code></li> </ul> <p>Materia\u0142y: writing udev rules, About udev-Oracle.</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/o_systemie/#bootowanie-i-grub","title":"Bootowanie i GRUB","text":"<p>Podczas bootowania GRUB wybiera wpis opisuj\u0105cy obecn\u0105 konfiguracj\u0119 (czyli np jaki kernel u\u017cy\u0107 z jakimi flagami etc.). Jego konfiguracj\u0119 mo\u017cna znale\u017a\u0107 w pliku <code>/boot/grub2/grub.cfg</code> jednak jego edycja jest niezalecana.</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/o_systemie/#firewalle-i-siec","title":"Firewalle i sie\u0107","text":""},{"location":"Linux%F0%9F%90%A7%20i%20Bash/o_systemie/#podstawowa-konfiguracja","title":"Podstawowa Konfiguracja","text":"<p>Do sprawdzania konfiguracji sieciowej mo\u017cna u\u017cy\u0107 komendy <code>ifconfig</code> lub <code>ip a</code> (<code>ip addr</code>).   </p> <p>Wypisz\u0105 one wtedy dost\u0119pne interfejsy, ich adresy, maski, gatewaye itp.</p> <p>Do prostego uruchomienia danego interfejsu (przy dzia\u0142aj\u0105cym DHCP) mo\u017cna u\u017cy\u0107 komendy <code>dhclient INTERFEJS -v</code> (czyli np <code>dhclient eth0 -v</code>).</p> <p>W trudniejszych wypadkach u\u017cywa si\u0119 komendy <code>ip</code></p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/o_systemie/#komenda-ip","title":"komenda <code>ip</code>","text":"<p>Podstawowy syntax warto objerze\u0107 tutaj.     </p> <p>ip mo\u017cna go uzy\u0107 np do szybkiego przypisania adresu do interfejsu</p> <p>U\u017cywamy tu komendy o sk\u0142adni: <code>ip a add IP/MASKA dev INTERFACE</code> (dev to skr\u00f3t od device). Mo\u017ce to by\u0107 np <code>ip a add 192.168.1.119/24 dev eth0</code></p> <p>Do ustawiania bram warto u\u017cy\u0107 komendy route link</p> <p>TODO</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/o_systemie/#firewalle","title":"Firewalle","text":"<p>TODO</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/","title":"Przydatne aplikacje i programy terminalowe","text":"<p>Skr\u00f3cona lista apek:</p> <ul> <li><code>htop</code> - lepszy menad\u017cer zada\u0144</li> <li><code>btop</code> - jeszcze lepszy menad\u017cer zada\u0144</li> <li><code>atuin</code> - lesze zarz\u0105dzanie i przeszukiwanie historii terminala link (zamiennik <code>history</code>, oraz kommbinacji <code>Ctrl+R</code>)</li> <li><code>bat</code> - lepszy <code>cat</code> link</li> <li><code>tailspin</code> - aplikacja do wygodnego przegl\u0105dania log\u00f3w https://itsfoss.com/tailspin/</li> </ul>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#screen-czyli-jak-nie-zamykac-terminala","title":"Screen - czyli jak nie zamyka\u0107 terminala","text":"<p>Otwarcie nowej sesji screeen []</p> <p>Wyj\u015bcie z sesji Ctrl+a , potem</p> <p>lista aktywnych sesji screen -ls</p> <p>There is a screen on: 21512.pts-4.komp-pc (07.08.2020 12:54:54) (Attached) 1 Socket in /run/screen/S-komp.</p> <p>Do\u0142\u0105cz do jednej z sesji screen -r [numer_sesji]</p> <p>Uruchom skrypt w sesji i od\u0142\u0105cz si\u0119 od sesji (dobre do startupu)</p> <pre><code>screen -d -m moj_skrypt_albo_komenda\n</code></pre> <p>Wi\u0119kszo\u015b\u0107 komend wewn\u0105trz obs\u0142uguje si\u0119 za pomoc\u0105 kombinacji Ctrl+a (C-a) i po puszczeniu wci\u015bni\u0119ciu danego przycisku.</p> <p>Podstawowe:</p> <ul> <li><code>C-a + d</code> -detach, wyjd\u017a z sesji nie zamykaj\u0105c jej (sesja to nie terminal/ekran)</li> <li><code>C-a + N</code> - wy\u015bwietl numer obecnego ekranu</li> <li><code>C-a c</code>/<code>C-a C-c</code> - utw\u00f3rz nowy ekran</li> <li><code>C-a + [0-9]</code> - przejd\u017a do ekranu o danym numerze</li> <li><code>C-a + C-a</code> - prze\u0142\u0105cz na poprzedni ekran</li> <li><code>C-a \\</code> - zakmnij wszystkie okna i zako\u0144cz sesj\u0119</li> </ul> <p>Inne u\u017cyteczne (pe\u0142na lista jest w <code>man screen</code>):</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502C-a '         \u2502 (select)       \u2502 Prompt for a window name or number to switch to.    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a \"         \u2502 (windowlist -b)\u2502 Present a list of all windows for selection.        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a digit     \u2502 (select 0-9)   \u2502 Switch to window number 0 - 9                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a C-a       \u2502 (other)        \u2502 Toggle to the window  displayed  previously.   Note \u2502\n\u2502              \u2502                \u2502 that this binding defaults to the command character \u2502\n\u2502              \u2502                \u2502 typed twice, unless overridden.  For  instance,  if \u2502\n\u2502              \u2502                \u2502 you  use  the  option  \"-e]x\", this command becomes \u2502\n\u2502              \u2502                \u2502 \"]]\".                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a A         \u2502 (title)        \u2502 Allow the user to enter a name for the current win\u2010 \u2502\n\u2502              \u2502                \u2502 dow.                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a c,        \u2502 (screen)       \u2502 Create a new window with a shell and switch to that \u2502\n\u2502C-a C-c       \u2502                \u2502 window.                                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a C         \u2502 (clear)        \u2502 Clear the screen.                                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a d,        \u2502 (detach)       \u2502 Detach screen from this terminal.                   \u2502\n\u2502C-a C-d       \u2502                \u2502                                                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a D D       \u2502 (pow_detach)   \u2502 Detach and logout.                                  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a space,    \u2502 (next)         \u2502 Switch to the next window.                          \u2502\n\u2502C-a n,        \u2502                \u2502                                                     \u2502\n\u2502C-a C-n       \u2502                \u2502                                                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a N         \u2502 (number)       \u2502 Show the number (and title) of the current window.  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a backspace,\u2502 (prev)         \u2502 Switch to the previous window (opposite of C-a n).  \u2502\n\u2502C-a C-h,      \u2502                \u2502                                                     \u2502\n\u2502C-a p,        \u2502                \u2502                                                     \u2502\n\u2502C-a C-p       \u2502                \u2502                                                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a q,        \u2502 (xon)          \u2502 Send a control-q to the current window.             \u2502\n\u2502C-a C-q       \u2502                \u2502                                                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a Q         \u2502 (only)         \u2502 Delete  all  regions but the current one.  See also \u2502\n\u2502              \u2502                \u2502 split, remove, focus.                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a r,        \u2502 (wrap)         \u2502 Toggle the current window's line-wrap setting (turn \u2502\n\u2502C-a C-r       \u2502                \u2502 the current window's automatic margins on and off). \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a s,        \u2502 (xoff)         \u2502 Send a control-s to the current window.             \u2502\n\u2502C-a C-s;      \u2502                \u2502                                                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a S         \u2502 (split)        \u2502 Split  the current region horizontally into two new \u2502\n\u2502              \u2502                \u2502 ones.  See also only, remove, focus.                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a t,        \u2502 (time)         \u2502 Show system information.                            \u2502\n\u2502C-a C-t       \u2502                \u2502                                                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a v         \u2502 (version)      \u2502 Display the version and compilation date.           \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a C-v       \u2502 (digraph)      \u2502 Enter digraph.                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a w,        \u2502 (windows)      \u2502 Show a list of window.                              \u2502\n\u2502C-a C-w       \u2502                \u2502                                                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a X         \u2502 (remove)       \u2502 Kill the current region.   See  also  split,  only, \u2502\n\u2502              \u2502                \u2502 focus.                                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a z,        \u2502 (suspend)      \u2502 Suspend screen.  Your system must support BSD-style \u2502\n\u2502C-a C-z       \u2502                \u2502 job-control.                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a ?         \u2502 (help)         \u2502 Show key bindings.                                  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a \\         \u2502 (quit)         \u2502 Kill all windows and terminate screen.              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a {,        \u2502 (history)      \u2502 Copy and paste a previous (command) line.           \u2502\n\u2502C-a }         \u2502                \u2502                                                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a |         \u2502 (split -v)     \u2502 Split  the  current  region vertically into two new \u2502\n\u2502              \u2502                \u2502 ones.                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502C-a *         \u2502 (displays)     \u2502 Show a listing of all currently attached displays.  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#zdobywanie-informacji-o-systemie","title":"Zdobywanie informacji o systemie","text":""},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#ogolne-informacje-o-systemie","title":"Og\u00f3lne informacje o systemie","text":"<p>uname przydaje si\u0119 do og\u00f3lnych informacji o systemi operacyjnym, architekturze procesora i kernelu.</p> <pre><code>uname\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#miejsce-na-dyskach","title":"Miejsce na dyskach","text":"<pre><code>df\n\n#df --block-size=1M poda ci rozmiar w gigabajtach\n</code></pre> <p>Mo\u017ce by\u0107 przydatne w bombinacji z <code>du</code>, kt\u00f3re mo\u017ce pokazywa\u0107 ile miejsca zajmuj\u0105 dane foldery i pliki. (terminalowa alternatywa dla apki <code>baobab</code> link)</p> <pre><code>du -d 1\n# 1760    ./docs\n# 9876    ./.git\n# 12      ./.github\n# 8       ./.vscode\n# 11672   .\n</code></pre> <p>Zamiast <code>du</code> mo\u017cna tak\u017ce skorzysta\u0107 z aplikacji dust.</p> <pre><code>pawel@sys:~/PROJEKTY/Inne/notatki_z_jezykow$ dust\n3.7M   \u250c\u2500\u2500 docs                                                    \u2502\u2588        \u2502   5%\n3.3M   \u2502     \u251c\u2500\u2500 pack-5953b42e499e59029fe9772e94c3b024f01d7c41.pack\u2502\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2593 \u2502   5%\n 65M   \u2502   \u250c\u2500\u2534 pack                                                \u2502\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2502  92%\n 67M   \u2502 \u250c\u2500\u2534 objects                                               \u2502\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2502  94%\n 67M   \u251c\u2500\u2534 .git                                                    \u2502\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2502  95%\n 71M \u250c\u2500\u2534 .                                                         \u2502\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2502 100%\n</code></pre> <p>Ewentualnie inn\u0105 alternatyw\u0105 mo\u017ce by\u0107 <code>ncdu</code></p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#hardware","title":"Hardware","text":"<p><code>lsusb</code> - przydatne do sprawdzania tego, jakie urz\u0105dzenia usb mamy pod\u0142\u0105czone</p> <pre><code>lsusb\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#networking","title":"Networking","text":"<p><code>ip</code> - kombajn do sieci\u00f3wki w Linuxie</p> <p><code>ifconfig</code> (ju\u017c przestarza\u0142e) - zwraca informacje o wszystkich odst\u0119pnych interfejsach sieciowych, IP, adresy MAC etc. Zamiast niego zaleca si\u0119 <code>ip addr</code></p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#listowanie-urzadzen-w-sieci-lokalnej","title":"Listowanie urz\u0105dze\u0144 w sieci lokalnej","text":"<pre><code>sudo nmap -sn 192.168.1.0/24\n</code></pre> <p>lub bez sudo</p> <pre><code>nmap -sP 192.168.0.*\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#wypisywanie-portow-na-ktorych-maszyna-nasuchuje","title":"Wypisywanie port\u00f3w na kt\u00f3rych maszyna nas\u0142uchuje","text":"<p><code>ss</code> apka do badania gniazd</p> <pre><code>ss -plnt #p - procesy l-listening n-numeric t-tcp\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#generowanie-ruchu-na-jakis-port","title":"Generowanie ruchu na jaki\u015b port","text":"<p>Tutaj przyda si\u0119 komenda telnet, kt\u00f3ra pozwala na po\u0142\u0105czenie si\u0119 z jakim\u015b portem na jakim\u015b serwerze.</p> <pre><code>telnet adres port\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#montowanie","title":"Montowanie","text":"<p>mount TODO</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#ssh","title":"SSH","text":"<p>SSH s\u0142u\u017cy do zdalnego pod\u0142\u0105cznia si\u0119 do pow\u0142oki system\u00f3w.</p> <p>\u0141\u0105czymy si\u0119 komend\u0105 <code>ssh login@adres</code></p> <p>Na przyk\u0142ad</p> <pre><code>marian@192.168.0.32\n\nroot@serwer.moj.pl\n\n# Tutaj loginem jest pracownik@firma.com a adresem serwer.com\npracownik@firma.com@serwer.com\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#ssh-klucze","title":"SSH klucze","text":"<p>Po zalogowaniu na og\u00f3\u0142 musimy r\u0119cznie wpisywa\u0107 has\u0142o. Aby tego nie robi\u0107 mo\u017cemy doda\u0107 klucz publiczny do naszej maszyny.</p> <p>Dodatanie klucza do maszyny</p> <pre><code>ssh-copy-id login@adres\n</code></pre> <p>Aby upro\u015bci\u0107 wpisywanie adres\u00f3w maszyn (oraz konfiguracj\u0119) w terminalu mo\u017cemy dopisa\u0107 je do pliku <code>~/.ssh/config</code></p> <pre><code>Host fajnyserwer\n  HostName 198.43.32.33\n  User pawel\n  Port 9999\n</code></pre>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#ssh-tunelowanie","title":"SSH tunelowanie","text":"<p>Inn\u0105 przydatn\u0105 rzecz\u0105 jest tunelowanie port\u00f3w za pomoc\u0105 ssh. Pozwala to na dost\u0119p do zdalnych us\u0142ug na danych portach tak, jakby by\u0142y u nas lokalnie. link do artyku\u0142u oraz drugi link</p> <p>Na przyk\u0142ad komenda:</p> <pre><code>ssh -L 9999:localhost:9090 marian@moj_serwer\n</code></pre> <p>Sprawi, \u017ce na naszej lokalnej maszynie pod portem <code>9999</code> b\u0119dzie dost\u0119pna us\u0142uga, kt\u00f3ra jest dost\u0119pna pod portem <code>9090</code> naszego serwera. Czyli po ludzku: <code>U\u017bYWAMY WTEDY GDY CHCEMY MIE\u0106 U SIEBIE DOST\u0118P DO JEGO PORTU</code>.</p> <p>Mo\u017cliwe jest tak\u017ce odwr\u00f3cone tunelowanie port\u00f3w za pomoc\u0105 SSH</p> <pre><code>ssh -R [REMOTE:]REMOTE_PORT:DESTINATION:DESTINATION_PORT [USER@]SSH_SERVER\n</code></pre> <p>Na przyk\u0142ad komenda <code>ssh -R 3000:192.168.1.11:9090 marian@moj_serwer</code> sprawi, \u017ce na serwerze pod porcie <code>3000</code> b\u0119dzie dost\u0119pna us\u0142uga widoczna u nas pod adresem <code>192.168.1.11:9090</code> (mo\u017cna przet\u0142umaczy\u0107 na: <code>KIEDY CHCEMY, ABY NA SERWERZE BY\u0141 DOST\u0118P DO US\u0141UGI OBECNEJ NA NASZYM KLIENCIE</code>)</p> <p>Jest on najcz\u0119\u015bciej u\u017cywany, aby da\u0107 komu\u015b z zewn\u0105trz dost\u0119p do wewn\u0119trznego serwisu.</p> <p>Razem z tymi komendami przydaj\u0105 si\u0119 flagi:</p> <ul> <li><code>-N</code> - sprawia, \u017ce nie wykonujemy \u017cadnych zdalnych komend bashowych</li> <li><code>-f</code> - uruchamia ssh w tle</li> </ul> <p>Np: <code>ssh -R 8080:127.0.0.1:3000 -N -f user@remote.host</code></p> <p>W wypadku tunelowania czasem mog\u0105 by\u0107 problemy przy dost\u0119pie z zewn\u0119trznych maszyn do udost\u0119pnionych port\u00f3w link</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#ssh-aplikacje-okienkowe","title":"SSH aplikacje okienkowe","text":"<p>W niekt\u00f3rych wypadkach mo\u017cemy potrzebobowa\u0107 jakiej\u015b aplikacji okienkowej, wtedy u\u017cywamy flagi <code>-X</code> (forwardowanie dla X11)</p> <pre><code>ssh -X jkowalski@adres\n</code></pre> <p>Wtedy po uruchomieniu w tym terminalu aplikacji z GUI jak np gedit to b\u0119dziemy mogli zobaczy\u0107 jej okienko na naszej maszynie.</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/programy/#montowanie-plikow-ssh","title":"Montowanie plik\u00f3w ssh","text":"<p>Je\u015bli chcemy wygodnie pracowa\u0107 na plikach na drugiej maszynie mozemy wykorzysta\u0107 <code>sshfs</code></p> <pre><code>sshfs user@hostname:/path/ /localpath\n</code></pre> <p>Wtedy mamy zamontowany zdalny folder <code>/path</code> pod \u015bcie\u017ck\u0105 <code>/localpath</code>. Dodatkowo mo\u017cemy u\u017cy\u0107 flagi <code>-o</code> do przekazywania dodatkowych opcji montowania. kr\u00f3tki tutorial</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/regex/","title":"Wyra\u017cenia regularne (Regexy)","text":"<p>\u015awietna strona do ekspreymentowania z wyra\u017ceniami regularnymi Regex101 \u015aci\u0105gawka z BulldogJobs https://bulldogjob.pl/readme/samouczek-regex-sciagawka-z-przykladami</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/regex/#znaki","title":"Znaki","text":"symbol Opis \\s whitespace \\S nie whitespace \\d cyfra \\D nie cyfra \\w s\u0142owo \\W nie s\u0142owo \\n nowa linia \\t tabulacja \\A Pocz\u0105tek wyra\u017cenia $ koniec wyra\u017cenia lub/EOL/EOF \\Z koniec wyra\u017cenia . Jakikolwiek znak (nie licz\u0105c nowej linii \\n) <code>\\.</code> Kropka <code>.</code> (w grepie jednak trzeba da\u0107 <code>\\\\.</code> <p>Znaki specjalne: <code>^ [ . $ { * ( \\+ ) | ? &lt; &gt;</code> Do ich escape'owania na og\u00f3\u0142 wystarcza <code>\\</code>.</p>"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/regex/#grupy-i-zakresy","title":"Grupy i zakresy","text":"[a-c] znaki z zakresu a-c. Mog\u0105 by\u0107 \u0142\u0105czone w wi\u0119ksze grupy (np. [a-deA-D1-4]) [^a-c] Zaprzeczenie znakom z danego zakresu (nie a nie b i nie c) <code>(aIbIc)</code> Alternatywa a lub lub c (zamiast I powinny tam by\u0107 linie pionowe) <code>*</code> Znak/wyra\u017cenie znajduj\u0105cy si\u0119 przed gwiazdk\u0105 mo\u017ce pojawi\u0107 si\u0119 dowoln\u0105 ilo\u015b\u0107 razy <code>+</code> Znak/wyra\u017cenie sprzed plusa pojawi si\u0119 dowolnie wiele razy (ale co najmniej 1 raz) <code>?</code> Znak/wyra\u017cenie pojawia si\u0119 0 lub 1 raz <code>(?!slowo)</code> zaprzeczenie - wyklucz wyniki zawieraj\u0105ce <code>slowo</code> (negative lookahead) I alternatywa(nie litera i, lecz beleczka) - rzecz polewej albo po prawej"},{"location":"Linux%F0%9F%90%A7%20i%20Bash/regex/#podmienianie-znakow","title":"Podmienianie znak\u00f3w","text":"<p>U\u017cywaj\u0105c regex\u00f3w mo\u017cna w \u0142atwy spos\u00f3b podmienia\u0107 cz\u0119\u015bci naszych wyra\u017ce\u0144 na inne.</p> <p>Wystarczy tutaj opakowa\u0107 cz\u0119\u015b\u0107 wyra\u017cenia, kt\u00f3r\u0105 chcemy wymieni\u0107 w nawiasy <code>()</code> i potem w wyra\u017ceniu docelowym mo\u017cemy si\u0119 odwo\u0142ywa\u0107 do zawarto\u015bci poszczeg\u00f3lnych nawias\u00f3w.</p> <p>Najbardziej przydatne odwo\u0142ania:</p> <code>$1</code>, <code>$2</code> Pierwszy, drugi nawias <code>$&amp;</code> Ca\u0142e wyra\u017cenie <pre><code>Find        Carrots(With)Dip(Are)Yummy\nReplace     Bananas$1Mustard$2Gross\nResult      BananasWithMustardAreGross\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/","title":"Docker\ud83d\udc0b","text":"<p>Docker jest jednym z najpopularniejszych obecnie system\u00f3w do wirtualizacji systemu operacyjnego. Pozwala w prosty spos\u00f3b stworzy\u0107 instancj\u0119 systemu b\u0119d\u0105c\u0105 niemal\u017ce zupe\u0142nie niezale\u017cnym bytem od systemu maszyny na kt\u00f3rej si\u0119 znajduje, mo\u017ce mie\u0107 ona zainstalowane zupe\u0142nie inne oprogramowanie, r\u00f3\u017cni\u0107 si\u0119 konfiguracj\u0105 sieciow\u0105 etc. R\u00f3\u017cni si\u0119 on od zwyczajnej maszyny wirtualnej tym, \u017ce taki kontener jest du\u017co bardziej elastyczny od maszyny wirtualnej, poniewa\u017c nie ma na sta\u0142e przydzielonych zasob\u00f3w takich jak RAM, CPU etc.</p> <p>Docker cz\u0119sto jest wykorzystywany do pracy z r\u00f3\u017cnorodnym oprogramowaniem bez niepotrzebnego za\u015bmiecania \u015brodowiska deweloperskiego. Jest to tak\u017ce jeden ze sposob\u00f3w unikni\u0119cia piek\u0142a zale\u017cno\u015bci.</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#podstawowe-pojecia","title":"Podstawowe Poj\u0119cia","text":"<p>Obraz/Image - obrazy dockerowe s\u0105 ju\u017c gotowymi, wcze\u015bniej przygotowanymi paczkami zawieraj\u0105ce systemy w dockerze. Przyk\u0142adem obrazu jest <code>ubuntu:latest</code>.</p> <p>Kontener/Container - jest to uruchomiona instancja naszego dockera bazuj\u0105ca na danym obrazie. Zawiera on konfiguracj\u0119 oraz wszystkie dane unikalne dla danej instancji.</p> <p>Repozytorium - miejsce z kt\u00f3rego pobierane s\u0105 obrazy oraz ich aktualizacje. Jest to dockerhub, ale mo\u017cna te\u017c pobiera\u0107 z innych repozytori\u00f3w (np z gitlaba).</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#obsuga","title":"Obs\u0142uga","text":"<p>Mamy kilka grup komend</p> Grupa Opis config Zarz\u0105dzanie konfiguracj\u0105 container Operacje na kontenerach context Contexts for distributed deployment (k8s, \u2026) image Zarz\u0105dzanie obrazami network Zarz\u0105dzanie sieci\u0105 service Service (i.e. multiple containers that run the same image) management in distributed deployments (e.g.with docker-compose or docker swarm) system Global management volume Secondary storage management <p>Do zarz\u0105dzania mo\u017cemy te\u017c u\u017cywa\u0107 apek GUI, albo plugin\u00f3w do IDE.</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#zarzadzanie-obrazami","title":"Zarz\u0105dzanie obrazami","text":"<p>Do zarz\u0105dzania obrazami na naszej maszynie s\u0142u\u017cy polecenie <code>docker image</code>.</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#nowy-obraz","title":"Nowy obraz","text":""},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#baza","title":"Baza","text":"<p>W wi\u0119kszo\u015bci wypadk\u00f3w warto wykorzystywa\u0107 obrazy znajduj\u0105ce si\u0119 na stronie hub.docker.com - zawiera ona zar\u00f3wno obrazy wi\u0119kszo\u015bci dystrybucji Linuxa, jak i obrazy z systemami zawieraj\u0105ce ju\u017c przygotowane narz\u0119dzia deweloperskie (np obrazy zawieraj\u0105ce zainstalowane i skonfigurowane bazy danych).</p> <p>Aby pobra\u0107 taki obraz na nasz\u0105 maszyn\u0119 nale\u017cy u\u017cy\u0107 komendy:</p> <pre><code>docker image pull [OPTIONS] NAME[:TAG|@DIGEST]\n</code></pre> <p>Na przyk\u0142ad:</p> <pre><code>docker image pull alpine:latest # pobiera najnowszy obraz systemu alpine\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#budowanie-z-konfiguracji","title":"Budowanie z konfiguracji","text":"<p>Je\u015bli potrzebujemy stworzy\u0107 w\u0142asny obraz to mo\u017cemy go samodzielnie zbudowa\u0107 za pomoc\u0105 komendy:</p> <pre><code>docker image build .\n</code></pre> <p>Pozwala ona zbudowa\u0107 nam w\u0142asny obraz dockerowy na bazie pliku <code>dockerfile</code>. (Opis sk\u0142adni)</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#stworzenie-poprzez-commita","title":"Stworzenie poprzez commita","text":"<p>Do wygenerowania nowego obrazu mo\u017cemy te\u017c wykorzysta\u0107 ju\u017c istniej\u0105cy kontener, wystarczy u\u017cy\u0107 komendy <code>commit</code></p> <pre><code>docker commit containerName ImageName\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#zarzadzanie-posiadanymi-obrazami","title":"Zarz\u0105dzanie posiadanymi obrazami","text":"<p>Za pomocy komendy <code>docker image ls</code> mo\u017cemy \u0142atwo wypisa\u0107 lokalnie pobrane obrazy.</p> <pre><code>docker image ls\nREPOSITORY                                                TAG             IMAGE ID       CREATED         SIZE\n&lt;none&gt;                                                    &lt;none&gt;          93c4e800ab68   2 weeks ago     677MB\npostgres                                                  11-alpine       ec1e25ef56d1   5 weeks ago     156MB\nalpine                                                    latest          6dbb9cc54074   5 weeks ago     5.61MB\nnginx                                                     1.19.0-alpine   7d0cdcc60a96   11 months ago   21.3MB\n</code></pre> <p><code>docker image rm</code> usuwa dany obraz.</p> <pre><code>docker image rm [OPTIONS] IMAGE [IMAGE...]\n</code></pre> <p>Ale do czyszczenia jednak lepsze jest <code>docker image prune</code>, kt\u00f3re usuwa wszystkie \"wisz\u0105ce\" (dangling) obrazy, czyli np stare kopie obraz\u00f3w, kt\u00f3re zosta\u0142y ju\u017c przebudowane (na li\u015bcie obraz\u00f3w podpisane s\u0105 jako <code>&lt;none&gt;</code>). Dodanie flagi <code>-a</code> usuwa tak\u017ce wszystkie obrazy, kt\u00f3re s\u0105 nie s\u0105 u\u017cywane przez \u017cadne kontenery.</p> <pre><code>$ docker image prune -a\nWARNING! This will remove all images without at least one container associated to them.\nAre you sure you want to continue? [y/N] y\nDeleted Images:\nuntagged: alpine:latest\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#przenoszenie-obrazow","title":"Przenoszenie obraz\u00f3w","text":"<p>Mo\u017cliwe jest tak\u017ce zapisywanie istniej\u0105cych obraz\u00f3w do plik\u00f3w <code>.tar</code>.</p> <p>Dzi\u0119ki temu mo\u017cna je wczytywa\u0107 na maszynach pozbawionych dost\u0119\u00feu do sieci.</p> <pre><code>docker save -o &lt;path for generated tar file&gt; &lt;image name&gt;\n#na przyk\u0142ad\ndocker save -o ./image.tar ubuntu:20\n</code></pre> <p>Wczytuje si\u0119 analogicznie</p> <pre><code>docker load -i &lt;path to image tar file&gt;\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#zarzadzanie-kontenerami","title":"Zarz\u0105dzanie kontenerami","text":"<p><code>docker container ls</code> - wypisuje kontenery obecnie uruchomione w systemie, dodanie flagi <code>-a</code> sprawia, \u017ce pokazuje tak\u017ce te wy\u0142\u0105czone.</p> <pre><code>$ docker container ls -a\nCONTAINER ID   IMAGE                                     COMMAND                CREATED       STATUS                PORTS  NAMES\nbd1415cdc985   server_nginx                              \"/docker-entrypoint.\u2026\" 25 hours ago  Exited(0) 24 hours ago       server_nginx_1\n2474e0650b34   registry.gitlab.com/toolkit/server:latest \"sh -c 'python manag\u2026\" 25 hours ago  Exited(0) 25 hours ago       server_web_1\nce6a641e20c1   postgres:11-alpine                        \"docker-entrypoint.s\u2026\" 2 weeks ago   Exited(0) 21 hours ago       server_db_1\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#uruchamianie","title":"Uruchamianie","text":"<p>Do podstawowej pracy z kontenerem mo\u017cemy u\u017cywa\u0107 komend:</p> <ul> <li><code>docker container run</code> albo te\u017c <code>docker run</code></li> <li><code>docker container create</code></li> <li><code>docker container pause</code> / <code>unpause</code> - wstrzymuje (i wznawia) procesy w kontenerze</li> <li><code>docker container start</code> / <code>stop</code> - zabija wszystkie procesy w kontenerze i go zamyka</li> <li><code>docker container restart</code></li> <li><code>docker commit containerName ImageName</code> -zapisujemy zmiany wprowadzone w danym kontenerze jako nowy obraz</li> </ul> <p>Do usuwania kontener\u00f3w s\u0142u\u017c\u0105 <code>docker container prune</code> i <code>docker container rm</code>.</p> <p><code>docker container create [OPTIONS] IMAGE [COMMAND] [ARG...]</code> - tworzy nam nowy kontener bazuj\u0105cy na danym obrazie, mo\u017cemy tak\u017ce wybra\u0107 jaka komenda ma zosta\u0107 w nim uruchomiona. (ale go nie uruchamia) Mo\u017cemy go potem uruchomi\u0107 komend\u0105 <code>docker container start ID</code>.</p> <p>Do stworzenia nowego kontenera i natychmiastowego uruchomienia s\u0142u\u017cy <code>docker container run</code>.</p> <p>Przydatne flagi dla <code>docker run [flagi] nazwa-obrazu</code>:</p> <ul> <li><code>-rm</code> usuwa kontener po zako\u0144czeniu pracy</li> <li><code>-i</code>, <code>--interactive</code> po odpaleniu nadal mamy pod\u0142\u0105czone STDIN</li> <li><code>-t</code>, <code>--tty</code> Pod\u0142\u0105czamy si\u0119 terminalem do kontenera (warto u\u017cy\u0107 razem z <code>-i</code>)</li> <li><code>-d</code>, <code>--detach</code> Uruchom kontener w tle i wypisz jego ID</li> <li><code>-e</code>, <code>--env</code> Jakie zmienne \u015brodowiskowe maj\u0105 by\u0107 w naszym kontenerze (np <code>docker run -e BROKER_PORT=9999 client</code>)</li> <li><code>-p</code>, <code>--publish</code> udost\u0119pnij wewn\u0119trzne porty obrazu na portach hosta np <code>-p 8089:80</code> wystawia port 80 z wn\u0119trza kontenera na porcie 8089 hosta. (mo\u017cemy teraz na naszej maszynie otworzy\u0107 to pod adresem localhost:8089)   </li> <li><code>-v</code>, <code>--volume</code> okre\u015bla jakie pliki/foldery z hosta mamy udost\u0119pni\u0107 kontenerowi i pod jakimi adresami np <code>-v /tmp/logs.log:/tmp/runlog</code> sprawi \u017ce apka w kontenerze pisz\u0105c do plik\u00f3w w folderze <code>tmp/runlog/</code> b\u0119dzie tak na prawd\u0119 pisa\u0107 do folderu <code>/tmp/logs.log/</code> na ho\u015bcie.</li> <li><code>--rm</code> - usuwa kontener po zako\u0144czeniu</li> <li><code>--device</code> - pozwala na udost\u0119pnienie urz\u0105dze\u0144 kontenerowi dockerowemu (np. kamery) <code>--device=/dev/video0:/dev/video0</code> link</li> <li><code>--user</code> s\u0142u\u017cy do ustawiania u\u017cytkownika oraz warto\u015bci userid (format: <code>&lt;name|uid&gt;[:&lt;group|gid&gt;]</code>) np. <code>--user=$(id -u):$(id -g)</code> ustawia uid oraz gid uzytkownika wewn\u0105trz dockera na ten sam co ma u\u017cytkownik na ho\u015bcie (moze to pom\u00f3c unikn\u0105\u0107 problem\u00f3w z uprawnieniami do plik\u00f3w)</li> </ul> <pre><code>docker container run -i -t ubuntu bash\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#interakcje-z-dziaajacym-kontenerem","title":"Interakcje z dzia\u0142aj\u0105cym kontenerem","text":"<p>attach - podpinanie stdin i stdouta to dzia\u0142aj\u0105cego kontenera. <code>docker attach [OPTIONS] CONTAINER</code> lub <code>docker container attach</code></p> <p>cp - kopiowanie plik\u00f3w</p> <p>exec - uruchom w ju\u017c dzia\u0142aj\u0105cym kontenerze. Bardzo przydatne gdy chcemy np wej\u015b\u0107 tam z shellem. <code>docker exec [OPTIONS] CONTAINER COMMAND [ARG...]</code> lub <code>docker container exec ...</code></p> <pre><code>docker exec -it worker bash #-it podpina input i output\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#zarzadzanie-wolumenami","title":"Zarz\u0105dzanie wolumenami","text":"<p>R\u0119czne tworzenie volume</p> <p>Czasami mo\u017ce pojawi\u0107 si\u0119 potrzeba r\u0119cznego tworzenia wolumen\u00f3w. link</p> <pre><code>docker volume create [OPTIONS] [VOLUME]\n</code></pre> <p>Jedn\u0105 z przydatnych opcji w takim wariancie jest stworzenie go w konkretnym folderze.</p> <pre><code>docker volume create --opt type=none --opt o=bind --opt device=/data/volumes/testvol testvol\n</code></pre> <p>Korzystamy wtedy z flag:</p> <ul> <li><code>--driver</code> - okre\u015bla jakiego sterownika u\u017cy\u0107, domy\u015blnie u\u017cwany jest <code>local</code></li> <li><code>--opt</code> - pozwala na przekazanie dodatkowych opcji sterownika (odpowiadaj\u0105 one opcjom komendy mount)</li> <li><code>type</code> okre\u015bla typ wolumenu</li> <li><code>device</code> okre\u015bla miejsce na dysku, kt\u00f3re ma by\u0107 zmapowane na ten wolumen (ten folder musi ju\u017c istnie\u0107)</li> </ul> <p>Usuwanie</p> <pre><code>docker volume rm testvol\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#skadnia-pliku-dockerfile","title":"Sk\u0142adnia pliku dockerfile","text":"<p>Plik dockerfile opisuje kolejne operacje pokazuj\u0105ce, jak powinien by\u0107 zbudowany nasz obraz.</p> <p>Przyk\u0142adowy plik dockerfile:</p> <pre><code># wybierz obraz bazowy od kt\u00f3rego zaczynasz konstruowanie\nFROM ubuntu:latest\n\n# Ustaw zmienne \u015brodowiskowe\nENV APP_USER=user\n\n# Wykonaj dan\u0105 komend\u0119, np zainstaluj potrzebne pakiety etc.\nRUN apt install -y firefox\n\n# okre\u015bl po\u0142o\u017cenie folderu roboczego w kt\u00f3rym odpalane s\u0105 komendy\nWORKDIR /home/user\n\n# Kopiuj pliki z hosta do systemu plik\u00f3w wewn\u0105trz kontenera\nCOPY ./plik /home/user/\n</code></pre> <p>Tak zdefiniowany obraz budujemy komend\u0105 <code>docker build ./sciezka/folderu</code>.</p> <p>Ka\u017cda nowa linia/polecenie zaczyna si\u0119 od komendy DU\u017bYMI_LITERAMI (taka konwencja).</p> <p>Komendy:</p> <ul> <li><code>FROM imageBase</code> to jest zawsze pierwsza instrukcja pokazuj\u0105ca na jakim innym obrazie ma bazowa\u0107 nasz nowy obraz</li> <li><code>RUN command</code> wykonuje komendy w pow\u0142oce kontenera przy budowaniu</li> <li><code>ENV variable value</code> ustawia warto\u015bci w \u015brodowisku (mog\u0105 by\u0107 u\u017cywane przez wszystko co b\u0119dzie od teraz chodzi\u0107 w kontenerze)</li> <li><code>COPY source destination</code> kopiuje pliki ze \u017ar\u00f3d\u0142a (URL, plik, folder) do miejsca w kontenerze (UWAGA! z przycyn bezpiecze\u0144stwa pozwala on tylko na kopie rzeczy tylko z folderu w kt\u00f3rym uruchamiamy komend\u0119, czyli nie mo\u017cemy np skopiowa\u0107 sobie czego\u015b z katalogu <code>/home/jkowalski/pobrane</code>)</li> <li><code>ADD source destination</code> to samo co <code>ADD</code> z r\u00f3\u017cnic\u0105, \u017ce gdy potrafi zorpakowa\u0107 archiwum, gdy jest ono podane jako plik</li> <li><code>WORKDIR path</code> okre\u015bla folder roboczy w kt\u00f3rym maj\u0105 si\u0119 wykonywa\u0107 pozosta\u0142e komendy jak <code>RUN</code>, <code>CMD</code>, <code>ENTRYPOINT</code></li> <li><code>CMD command arg1 arg2 ...</code> dostarcza domy\u015blnych komend i warto\u015bci argument\u00f3w, kt\u00f3re zostan\u0105 uruchomione w kontenerze</li> <li><code>ENTRYPOINT command arg1 arg2 ...</code> uruchamia t\u0105 komend\u0119, kiedy kontener jest uruchamiany (kontener jest zamykany kiedy ta komenda si\u0119 ko\u0144czy)</li> <li><code>EXPOSE port</code> pokazuje na jakim porcie s\u0142ucha kontaner, sama go nie wystawia, pe\u0142ni raczej funkcj\u0119 informacyjn\u0105 dla u\u017cytkownika link</li> <li><code>VOLUME</code> pozwala kontenerowi pod\u0142\u0105czy\u0107 si\u0119 do innego systemu plik\u00f3w wi\u0119cej info</li> <li><code>HEALTHCHECK</code> pozwala na sprawdzanie czy kontener jest gotowy do pracy link <pre><code>HEALTHCHECK --interval=5m --timeout=3s \\\nCMD curl -f http://localhost/ || exit 1\n</code></pre></li> </ul> <p>Uwaga - w pliku dockerowym mo\u017ce by\u0107 tylko jeden <code>CMD</code> albo <code>ENTRYPOINT</code>, jak nie to tylko <code>ENTRYPOINT</code> jest u\u017cywany (na og\u00f3\u0142).</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#entrypoint-i-cmd","title":"ENTRYPOINT i CMD","text":"<p>ENTRYPOINT ma 2 warianty</p> <ul> <li>bazuj\u0105cy na samej komendzie</li> </ul> <pre><code> ENTRYPOINT node app.js 9000 9001\n</code></pre> <ul> <li>u\u017cywany razem z CMD</li> </ul> <pre><code>ENTRYPOINT [\"/bin/node\",\"app.js\"]\nCMD [\"9000\",\"9001\"]\n</code></pre> <p>I mo\u017cemy to potem odpali\u0107 tak</p> <pre><code>docker build -t app\ndocker run app\ndocker run app 5555 5556 # gdy chcemy u\u017cy\u0107 w\u0142asnych argument\u00f3w\n</code></pre> <p>Mo\u017cliwe jest te\u017c ustawienie w\u0142asnego entrypointa przy uruchomieniu.</p> <pre><code># Executes bash -c \"ls /\"\ndocker run --entrypoint bash my-image:latest -c \"ls /\"\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#docker-compose","title":"Docker compose","text":"<p>Jest on wykorzystywany, kiedy potrzebujemy uruchomi\u0107 wiele aplikacji, kt\u00f3re b\u0119d\u0105 si\u0119 ze sob\u0105 komunikowa\u0107 (a odpalenie w dockerze skryptu, kt\u00f3ry wszystko nam poodpala nie jest opcj\u0105).</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#quick-start","title":"Quick start","text":"<p>Wyobra\u017amy sobie, \u017ce potrzebujemy 3 apek, kt\u00f3re gadaj\u0105 ze sob\u0105.</p> <p>Tworzymy plik <code>docker-compose.yml</code></p> <pre><code>version: '2'\nservices:\n#Ka\u017cdy z serwis\u00f3w jest tutaj oddzielony\ncli:\nimage: client #obraz z kt\u00f3rego korzystamy\nbuild: ./client/\nlinks:\n- bro\nenvironment:\n- BROKER_HOST=bro\n- BROKER_PORT=9998\nwor:\nimage: worker\nbuild: ./worker/\nlinks:\n- bro\nenvironment:\n- BROKER_HOST=bro\n- BROKER_PORT=9999\nbro:\nimage: broker\nbuild: ./broker/\n# z wn\u0119trza kontenera bro wystawiamy porty 9998 i 9999 aby inne\n# kontenery w composie mog\u0142y si\u0119 do nich podpi\u0105\u0107 (ale maszyna hosta nie)\nexpose:\n- \"9998\u201c\n- \"9999\"\n</code></pre> <p>I uruchamiamy komend\u0119 <code>docker-compose up -d</code>, kt\u00f3ra:</p> <ul> <li>Buduje wszystkie wymagane obrazy (je\u015bli ich nie mamy)</li> <li>Uruchamia kolejne instancje ka\u017cdego z nich w odpowiedniej kolejno\u015bci</li> </ul> <p>Do wy\u0142\u0105czenia tego, co uruchomili\u015bmy wystarczy komenda <code>docker-compose down</code></p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#plik-konfiguracyjny","title":"Plik konfiguracyjny","text":"<p>//TODO opisz dok\u0142adniej syntax docker-compose na podstawie pliku tsr-ud04-eng-DockerReferenceDocs2122.pdf oraz https://docs.docker.com/compose/compose-file/</p> <p>Plik <code>docker-compose.yml</code> s\u0142u\u017cy do zdefiniowania ca\u0142ych grup kontener\u00f3w, kt\u00f3ra maj\u0105 by\u0107 odpalone razem na jednej maszynie (pe\u0142na dokumentacja).Zawiera on opisy kolejno:</p> <ul> <li>serwis\u00f3w (<code>services:</code>) - czyli poszczeg\u00f3lnych obraz\u00f3w dockerowych, kt\u00f3re maj\u0105 tworzy\u0107 ca\u0142o\u015b\u0107 (to jedyna obowi\u0105zkowa cz\u0119\u015b\u0107, pozosta\u0142e s\u0105 opcjonalne)</li> <li>sieci (<code>networks</code>) - czyli poszczeg\u00f3lnych sieci</li> <li>wolumin\u00f3w (<code>volumes</code>) - trwa\u0142ych miejsc do przechowywania plik\u00f3w</li> <li>sekret\u00f3w (<code>secrets</code>)</li> <li>konfiguracji (<code>configs</code>)</li> </ul> Przyk\u0142adowy docker compose <pre><code>services:\nfrontend:\nimage: awesome/webapp\nports:\n- \"443:8043\"\nnetworks:\n- front-tier\n- back-tier\nconfigs:\n- httpd-config\nsecrets:\n- server-certificate\n\nbackend:\nimage: awesome/database\nvolumes:\n- db-data:/etc/data\nnetworks:\n- back-tier\n\nvolumes:\ndb-data:\ndriver: flocker\ndriver_opts:\nsize: \"10GiB\"\n\nconfigs:\nhttpd-config:\nexternal: true\n\nsecrets:\nserver-certificate:\nexternal: true\n\nnetworks:\n# The presence of these objects is sufficient to define them\nfront-tier: {}\nback-tier: {}\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#serwisy","title":"Serwisy","text":"<p>Podstawowe parametry dla serwis\u00f3w dokumentacja:</p> <ul> <li><code>image</code> - obraz, kt\u00f3rego ma u\u017cywa\u0107 dany serwis</li> <li><code>expose</code> - lista port\u00f3w, kt\u00f3re maj\u0105 by\u0107 udost\u0119pnione innym serwisom wewn\u0105trz dockera (host ich nie widzi)</li> <li><code>ports</code> - lista port\u00f3w wystawionych na zewn\u0105trz dockera (s\u0105 one tak\u017ce dost\u0119pne dla innych serwis\u00f3w w dockerze)</li> <li><code>depends_on</code> - lista serwis\u00f3w, kt\u00f3re musz\u0105 zosta\u0107 wystartowane przed uruchomieniem tego serwisu (zast\u0119puje on min przestarza\u0142e pole <code>links</code>). Domy\u015blnie ustawia on tylko kolejno\u015b\u0107 startowania, ale nie sprawdza czy serwis jest ju\u017c gotowy do pracy. W celu zapewnienia uruchomienia w odpowiednim momencie mo\u017cna u\u017cy\u0107 pola <code>condition</code> (warto\u015bci to <code>service_healthy</code>, <code>service_started</code> lub <code>service_completed_successfully</code>).   <pre><code>services:\nweb:\nbuild: .\ndepends_on:\nredis:\ncondition: service_healthy\nredis:\nimage: redis\nhealthcheck: xxxxxxx\n</code></pre></li> <li><code>healthcheck</code> - pozwala na sprawdzenie czy serwis jest gotowy do pracy (np. czy baza danych jest ju\u017c dost\u0119pna). Mo\u017cna go zdefiniowa\u0107 tak\u017ce w pliku Dockerfile</li> <li><code>environment</code> - lista zmiennych \u015brodowiskowych w danym kontenerze</li> <li><code>build</code> - \u015bcie\u017cka do folderu z plikiem <code>Dockerfile</code>, aby go zbudowa\u0107, gdyby jeszcze nie by\u0142o odpowiedniego obrazu</li> </ul> <p>//TODO dopisz przyk\u0142ady</p> <p>Inne parametry dla serwis\u00f3w:</p> <ul> <li><code>extra_hosts</code> - lista mapowa\u0144 adres\u00f3w na nazwy (pojawi\u0105 si\u0119 w pliku <code>/etc/hosts</code> na maszynie) link. Najbardziej u\u017cytecznym mapowaniem mo\u017ce by\u0107 tutaj mapowanie <code>host-gateway</code>, kt\u00f3re mapuje adres maszyny na kt\u00f3rej stoi docker.</li> </ul> <pre><code>extra_hosts:\n- \"somehost:162.242.195.82\"\n- \"innyhost.local:50.31.209.229\"\n- \"host.docker.internal:host-gateway\"\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#wolumeny","title":"Wolumeny","text":"<p>Za ich pomoc\u0105 mo\u017cemy tworzy\u0107 trwa\u0142e miejsca do przechowywania danych. Trwa\u0142ych, czyli takich, kt\u00f3re nie ulegaj\u0105 skasowaniu, kiedy usuwany jest kontener. Dlatego cz\u0119sto s\u0105 one wykorzystywane min. do przechowywania baz danych, aby\u015bmy nic nie tracili wtdy, kiedy np. przy aktualizacji b\u0119dziemy chcieli zmieni\u0107 wersj\u0119 kontenera na \u015bwie\u017csz\u0105. Kolejn\u0105 zalet\u0105 wolumen\u00f3w w kontek\u015bcie compose'a jest to, \u017ce mog\u0105 one by\u0107 wsp\u00f3\u0142dzielone pomi\u0119dzy poszczeg\u00f3lnymi serwisami. dokumentacja</p> <p>Podstawowa sk\u0142adnia podawania wolumen\u00f3w: <code>VOLUME:CONTAINER_PATH[:ACCESS_MODE]</code> source.  Mo\u017cliwe jest tak\u017ce u\u017cycie z\u0142o\u017conej sk\u0142adni.</p> <p>Przyk\u0142ad:</p> <pre><code>services:\nbackend:\nimage: awesome/database\nvolumes:\n- db-data:/etc/data\n#db-data b\u0119dzie zamontowane w backendzie pod \u015bcie\u017ck\u0105 /etc/data\n- type: bind\nsource: /media/usb\ntarget: /usb\nbind:\npropagation: shared\n# zamontowany storage z hosta\n\nbackup:\nimage: backup-service\nvolumes:\n- db-data:/var/lib/backup/data\n\n#db-data to automatycznie zdefioniowany wolumen\n#system stworzy go sobie najpewniej w lokacji /var/lib/docker\nvolumes:\ndb-data:\n</code></pre> <p>Uruchamiaj\u0105c <code>docker compose up</code> docker tworzy wolument je\u015bli jeszcze nie istnieje.</p> <p>Warto tytaj wiedzie\u0107 o atrybutach takich jak:</p> <ul> <li><code>external</code>(true, false) - okre\u015bla, czy ten wolumen jest zarz\u0105dzany poza wybranym docker composem. Je\u015bli ustawiony na <code>true</code> to wszystkie pozosta\u0142e flagi s\u0105 ignorowane (za wyj\u0105tkiem name). Je\u015bli taki wolumen nie istnieje to zwracany jest b\u0142\u0105d, je\u015bli istnieje to jest on pod\u0142\u0105czany.   <pre><code>volumes:\ndb-data:\nexternal: true #szukamy czy volume o nazwie db-data istnieje\n</code></pre></li> <li><code>driver_opts</code> - pozwala na zamontowanie wolumentu za pomoc\u0105 jakiego\u015b sterownika. Pozwala np. na stworzenie wolumenu znajduj\u0105cego si\u0119 na serwerze NFS   <pre><code>volumes:\nexample:\ndriver_opts:\ntype: \"nfs\"\no: \"addr=10.40.0.199,nolock,soft,rw\"\ndevice: \":/docker/example\"\n</code></pre>   lub zwyczajne okre\u015blenie na jaki folder hosta ma by\u0107 on zmapowany   <pre><code>volumes:\ncvat_share:\ndriver_opts:\ntype: none\ndevice: /mnt/duzy_dysk/pliki_dla_cvata/\no: bind\n</code></pre></li> </ul> <p>Pracuj\u0105z z wolumenami warto rozgraniczy\u0107 zwyk\u0142e wolumeny oraz bind mounts. R\u00f3\u017cni\u0105 si\u0119 one przede wszystkim tym, \u017ce wolumeny s\u0105 zarz\u0105dzane przed Dockera, a mounty przez system. Obejmuje to np sytuacje, kiedy chcemy mie\u0107 z dockera dost\u0119p do folderu w kt\u00f3rym jest storage montowany przez hosta (bind propagation)</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#wykorzystanie-zmiennych-srodowiskowych","title":"Wykorzystanie zmiennych \u015brodowiskowych","text":"<p>W ramach docker-compose mo\u017cemy korzysta\u0107 z zmiennych \u015brodowiskowych, kt\u00f3re s\u0105 zdefiniowane w pliku <code>.env</code> znajduj\u0105cym si\u0119 w tym samym folderze co plik <code>docker-compose.yml</code>. Mo\u017ce tak\u017ce korzysta\u0107 ze zmiennych systemowych. link</p> <p>Przyk\u0142ad pliku <code>.env</code>:</p> <pre><code>POSTGRES_USER=postgres\nPOSTGRES_PASSWORD=postgres\n</code></pre> <p>Aby skorzysta\u0107 z tych zmiennych w pliku <code>docker-compose.yml</code> wystarczy u\u017cy\u0107 sk\u0142adni <code>${}</code>. Mo\u017cemy te\u017c u\u017cy\u0107 domy\u015blnych warto\u015bci, kt\u00f3re s\u0105 ustawiane w przypadku braku zmiennej.</p> <pre><code>services:\ndb:\nimage: postgres\nenvironment:\nPOSTGRES_USER: ${POSTGRES_USER}\nPOSTGRES_PASSWORD: ${POSTGRES_PASSWORD}\nPOSTGRES_DB: ${POSTGRES_DB:-postgres}\n</code></pre> <p>Sk\u0142adnia podstawie\u0144:</p> <ul> <li><code>${VAR}</code> - podstawia warto\u015b\u0107 zmiennej <code>VAR</code></li> <li><code>${VAR:-default}</code> - podstawia warto\u015b\u0107 zmiennej <code>VAR</code>, je\u015bli jest ustawiona i nie jest pusta, w przeciwnym wypadku podstawia warto\u015b\u0107 <code>default</code></li> <li><code>${VAR-default}</code> - podstawia warto\u015b\u0107 zmiennej <code>VAR</code>, je\u015bli jest ustawiona, w przeciwnym wypadku podstawia warto\u015b\u0107 <code>default</code></li> <li><code>${VAR:?error message}</code> - Je\u015bli <code>VAR</code> nie jest ustawiona lub jest pusta to wypisuje <code>error message</code> i ko\u0144czy dzia\u0142anie compose'a</li> <li><code>${VAR+replacement}</code> - podstawia warto\u015b\u0107 <code>replacement</code> je\u015bli <code>VAR</code> jest ustawiona, w przeciwnym wypadku zostawia puste</li> </ul>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#inne","title":"inne","text":"<p>//TODO opisz pozosta\u0142e</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#komendy","title":"Komendy","text":"<p>UWAGA wkr\u00f3tce komenda docker-ckompose powinna zosta\u0107 zmieniona na <code>docker compose</code> link</p> <p><code>docker-compose up</code> -</p> <p>Parametry:</p> <ul> <li><code>--scale service=num</code> pozwala odpali\u0107 wi\u0119cej instancji danego serwisu (jednak gdy skalujemy serwisy, kt\u00f3re wystawiaj\u0105 porty <code>expose</code> to tylko jedna z instancji b\u0119dzie widoczna dla innych) //TODO sprawd\u017a to</li> <li><code>-d</code> -//TODO</li> <li><code>-f</code> - flaga do uruchamiania wielu plik\u00f3w docker compose jednocze\u015bnie Je\u015bli wszystkie wysecyfikowane pliki znajduj\u0105 si\u0119 w tym samym folderze wtedy docker \u0142\u0105czy je w jedn\u0105 wsp\u00f3ln\u0105 konfiguracj\u0119.   przyk\u0142ad apki z wt\u00f3rej w dodatkowym pliku jest dodane szyfrowanie HTTPS:   <pre><code>docker compose -f docker-compose.yml -f docker-compose.https.yml up -d\n</code></pre></li> </ul> <p><code>docker-compose down</code> - zatrzymuje i usuwa kontenery z danego compose'a</p> <p><code>docker compose stop</code> - zatrzymuje, ale bez usuwania</p> <p><code>docker compose start</code> - uruchamia istniej\u0105ce kontenery dla serwisu</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#przydatne-snippety","title":"Przydatne snippety","text":""},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#tworzenie-uzytkownika","title":"Tworzenie u\u017cytkownika","text":"<pre><code>RUN useradd -ms /bin/bash -G sudo,inna_grupa dockeruser\n#Wy\u0142\u0105czenie promptu o has\u0142o przy sudo\nRUN echo \"dockeruser ALL=(ALL) NOPASSWD: ALL\" &gt; /etc/sudoers.d/ubuntu\n#ustawienie kolorowego terminala\nENV TERM=xterm-256color\n#prze\u0142\u0105czenie na u\u017cytkownika przy dalszych komendach\nUSER dockeruser\nWORKDIR /home/dockeruser\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#uruchamianie-z-dostepem-do-gui","title":"Uruchamianie z dost\u0119pem do GUI","text":"<p>W wypadku aplikacji dockerowych mo\u017cliwe jest ich uruchamianie aplikacji GUI z ich poziomu.</p> <p>Wymaga to najpierw nadania uprawnie\u0144 do otwierania okien</p> <pre><code>xhost +local: #Ta opcja jest aktywna do restartu komputera\n</code></pre> <p>Poza tym nale\u017cy da\u0107 dockerowi dost\u0119p do odpowiedniego gniazda oraz ustawi\u0107 zmienn\u0105 <code>DISPLAY</code></p> <pre><code>docker run -it --rm -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=$DISPLAY ubuntu bash\n</code></pre> <p>Do przetestowania dzia\u0142ania ca\u0142o\u015bci warto u\u017cy\u0107 aplikacji <code>xeyes</code> znajduj\u0105c\u0105 si\u0119 w pakiecie <code>x11-apps</code> dla Ubuntu. W wypadku problem\u00f3w warto doda\u0107 opcj\u0119 <code>--ipc=host</code>.   Je\u015bli ta metoda nie zadzia\u0142a (na Waylandzie mog\u0105 by\u0107 problemy) warto rozwazy\u0107 u\u017cycie https://github.com/mviereck/x11docker .</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#sprawdzanie-rozmiaru-dockera-i-ogolne-czyszczenie","title":"Sprawdzanie rozmiaru dockera i og\u00f3lne czyszczenie","text":"<p>Aby otrzyma\u0107 podsumowanie element\u00f3w dockerowych znajduj\u0105cych si\u0119 w systemie nale\u017cy u\u017cy\u0107 komendy df</p> <pre><code>$ docker system df\nTYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE\nImages          16        16        34.44GB   6.447GB (18%)\nContainers      23        23        146.5MB   0B (0%)\nLocal Volumes   18        14        806.6GB   2.222MB (0%)\nBuild Cache     116       0         0B        0B\n</code></pre> <p>Aby otrzyma\u0107 konkretn\u0105 list\u0119 trzeba doda\u0107 flag\u0119 <code>-v</code>.</p> <p>Do czyszczenia mo\u017cna u\u017cy\u0107 nast\u0119puj\u0105cych komend</p> <pre><code>docker container prune #usuwa wy\u0142\u0105czone kontenery\ndocker image prune #usuwa obrazy, do kt\u00f3rych nie ma przypisanych tag\u00f3w\ndocker builder prune #czy\u015bci build cache\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#przenoszenie-danych-dockerowych","title":"Przenoszenie danych dockerowych","text":"<p>Domy\u015blnie Docker przechowuje dane takie jak obrazy w folderze <code>/var/lib/docker/</code> w niekt\u00f3rych wypadkach warto zmieni\u0107 to po\u0142o\u017cenie na jakich\u015b zewn\u0119trzby dysk.</p> <p>Aby to zmieni\u0107 nale\u017cy to ustawi\u0107 za pomoc\u0105 pola <code>data-root</code> w pliku <code>/etc/docker/daemon.json</code>. link do stacka, Link do tutorialu o tym</p> <p>Kroki:</p> <ol> <li>Edytuj <code>/etc/docker/daemon.json</code></li> <li>Wy\u0142\u0105cz dockera <code>sudo systemctl stop docker</code> i sprawd\u017a czy ju\u017c go nie ma <code>ps aux | grep -i docker | grep -v grep</code></li> <li>(opcjonalnie) Skopiuj obecne pliki dockera: <code>sudo rsync -axPS /var/lib/docker/ /new/path/to/docker-data</code></li> <li>Uruchom ponownie <code>sudo systemctl start docker</code></li> <li>Sprawd\u017a po\u0142o\u017cenie <code>docker info | grep 'Docker Root Dir'</code></li> <li>Usu\u0144 stare pliki <code>sudo rm -r /var/lib/docker</code></li> </ol>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#wygodna-praca-z-dockerkami","title":"Wygodna praca z dockerkami","text":""},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#docker-context","title":"Docker context","text":"<p>//TODO</p> <p>link docs</p> <pre><code>docker create mojserwerek --docker \"host=ssh://andrzej@192.168.1.111\"\ndocker context use mojserwerek\n# I od teraz wszystkie komendy dockerowe b\u0119d\u0105 si\u0119 wykonywa\u0142y tak jakby na tej pod\u0142\u0105czonej maszynie \ndocker ps\n#i tu wypisze co chodzi na tym serwerze\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#deployment-docker-stack-i-docker-swarm","title":"Deployment - Docker Stack i Docker Swarm","text":"<p>Artyku\u0142 - What is Docker Stack</p> <p>Docker stack jest zbiorem narz\u0119dzi dockerowych, kt\u00f3re mog\u0105 pom\u00f3c przy deploymentach opartych na dockerze i docker compose'ach. Pozwalaj\u0105 min. a zarz\u0105dzanie grupami maszyn (Docker Swarm), stopniowe prze\u0142\u0105czanie pomi\u0119dzy aktualizacjami oprogramowania, cofanie si\u0119 do poprzednich wersji (rollback), automatycznego spinania wszystkiego po sieci, oraz zarz\u0105dzania sekretami.</p> <p>Pierwszym krokiem jest tak czy siak utworzenie swarmu (potem mo\u017cemy go sobie np rozszerza\u0107).</p> <pre><code>docker swarm init\n# Swarm initialized: current node (fl7k9wf1ywgykfajgni27f4nr) is now a manager.\n#To add a worker to this swarm, run the following command:\n#    docker swarm join --token SWMTKN-1-k,jhdasklnsal-dsbjiyen380qxk9jo1y7qd7wx 10.9.51.136:2377\n# W razie czego mo\u017cna zobaczy\u0107 ten token znowu dzi\u0119ki komendzie docker swarm join-token worker\n</code></pre> <p>Docker swarm u\u017cywa compose'\u00f3w do deploymentu, wi\u0119c komenda uruchamiaj\u0105ca nasz system to:</p> <pre><code>docker stack deploy -c ./docker-compose.yaml mojstack1\n</code></pre> <p>Nasze deploymenty s\u0105 podzielone na stacki, dzi\u0119ki czemu nie b\u0119d\u0105 nam si\u0119 one miesza\u0107.</p> <p>W wypadku takich deployment\u00f3w warto pami\u0119ta\u0107 o tym, \u017ce system zak\u0142ada zia\u0142anie na wielu maszynach. W zwi\u0105zku z tym trzeba uwa\u017ca\u0107 na wolumeny. Wolumeny s\u0105 tworzone domy\u015blnie na wybranych maszynach, wi\u0119c maszyna A i maszyna B mog\u0105 widzie\u0107 inne pliki w tych miejscach, chyba, \u017ce definiowali\u015bmy wolumeny sieciowe. Inn\u0105 kwesti\u0105 jest zarz\u0105dzanie sekretami i zmiennymi \u015brodowiskowymi. Zamiast u\u017cywa\u0107 zmiennych z enva warto rozwa\u017cy\u0107 wykorzystanie sekret\u00f3w dockerowych.</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#docker-secrets","title":"Docker Secrets","text":"<p>https://docs.docker.com/engine/swarm/secrets/</p> <p>Jest to mechanizm bezpiecznego przechowywania i wymieniania sekret\u00f3w pomi\u0119dzy maszynami w naszym klastrze.  Sekrety s\u0105 montowane jako pliki, w zwi\u0105zku z tym warto doda\u0107 w naszych aplikachach zmienne \u015brodowiskowe takie jak <code>PASSWORD_FILE</code>, gdzie podajemy \u015bcie\u017ck\u0119 z kt\u00f3rej mamy odczyta\u0107 dan\u0105 warto\u015b\u0107.</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/docker/#przydatne-aplikacje-do-pracy-z-dockerem","title":"Przydatne aplikacje do pracy z dockerem","text":"<p>skopeo - wygodna praca ze zdalnymi rejestrami dockerowymi</p> <p>Mo\u017ce s\u0142u\u017cy\u0107 do operacji takich jak:</p> <ul> <li>Listowanie istniej\u0105cych tag\u00f3w dla danego obrazu <code>skopeo list-tags ubuntu</code></li> <li>Kopiowanie obraz\u00f3w <code>skopeo copy docker://quay.io/buildah/stable docker://registry.internal.company.com/buildah</code></li> <li>Synchronizowanie ca\u0142ych rejestr\u00f3w <code>skopeo sync --src docker --dest dir registry.example.com/busybox /media/usb</code></li> </ul> <p>Dive - sprawdzanie i eksplorowanie zawarto\u015bci obraz\u00f3w dockerowych oraz poszczeg\u00f3lnych warstw.</p> <pre><code>dive &lt;your-image-tag&gt;\n</code></pre> <p></p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/dokumentowanie_kodu/","title":"Dokumentowanie kodu - Doxygen","text":"<p>Z pomoc\u0105 doxygena mo\u017cna \u0142atwo udokumentowa\u0107 kod z jego poziomu w spos\u00f3b zar\u00f3wno \u0142atwy do odczytania w surowym kodzie, jak i umo\u017cliwiaj\u0105cy automatyczne generowanie dokumentacji i podpowiadanie opis\u00f3w funkcji w r\u00f3\u017cnych IDE.</p> <p>Jest on poza tym do\u015b\u0107 uniwersalny, wspiera j\u0119zyki takie jak:</p> <ul> <li>C++</li> <li>Java</li> <li>C#</li> <li>Python etc.</li> </ul>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/dokumentowanie_kodu/#syntax","title":"Syntax","text":"<p>O ile sam wygl\u0105d blok\u00f3w doxygenowych w r\u00f3\u017cnych j\u0119zykach mo\u017ce nieco si\u0119 r\u00f3\u017cni\u0107 to komendy (znaczniki) pozostaj\u0105 takie same.</p> <p>Oficjalna dokumentacja Pe\u0142na lista komend instrukcja2</p> <p>J\u0119zyk C++</p> <pre><code>/**\n * @brief kr\u00f3tki opis funkcji\n *\n * D\u0142u\u017cszy opis\n *\n * @param argument1 - opis argumentu, do czego s\u0142u\u017cy\n * @exception opis rzucanego wyj\u0105tku \n * @return opis tego co jest zwracane\n */\nint fun(const int &amp;argument1);\n\n/**\n * @brief Klasa b\u0119d\u0105ca przyk\u0142adem\n * \n */\nclass A\n{\nprivate:\nint var1; //!&lt; Kr\u00f3tki opis\nint var2; ///&lt; D\u0142u\u017cszy\n///&lt; opis\n\npublic:\nA(/* args */);\n\n};\n</code></pre> <p>Python</p> <pre><code>## @package pyexample\n#  Documentation for this module.\n#\n#  More details.\n\n## Documentation for a function.\n#\n#  More details.\ndef func():\n    pass\n\n## Documentation for a class.\n#\n#  More details.\nclass PyClass:\n\n    ## The constructor.\n    def __init__(self):\n        self._memVar = 0;\n\n    ## Documentation for a method.\n    #  @param self The object pointer.\n    def PyMethod(self):\n        pass\n\n    ## A class variable.\n    classVar = 0;\n\n    ## @var _memVar\n    #  a member variable\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/dokumentowanie_kodu/#generowanie-dokumentacji","title":"Generowanie dokumentacji","text":"<p>TODO</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/dokumentowanie_kodu/#gnerowanie-diagramow-klas","title":"Gnerowanie diagram\u00f3w klas","text":"<p>TODO</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/git/","title":"Przydatne komendy git","text":""},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/git/#waczanie-i-wyaczanie-ignorowania-zmian-dla-danego-pliku","title":"W\u0142\u0105czanie i wy\u0142\u0105czanie ignorowania zmian dla danego pliku","text":"<pre><code>git update-index --skip-worktree default_values.txt\n\ngit update-index --no-skip-worktree default_values.txt\n\n#list of files marked as skipped\ngit ls-files -v . | grep ^S\n</code></pre> <p>Albo:</p> <pre><code>git update-index --assume-unchanged &lt;file&gt;\n\n#i aby cofn\u0105\u0107\ngit update-index --no-assume-unchanged &lt;file&gt;\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/git/#sprzatanie","title":"Sprz\u0105tanie","text":"<pre><code>git reset #unstage all of files\ngit checkout . #revert all local uncommitted changes\ngit clean -fdx #remove all local untracked files\n</code></pre> <p>Usuwa wszystkie niezacommitowane zmiany.</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/git/#sprzatanie-w-commitach-interactive-rebase","title":"Sprz\u0105tanie w commitach (interactive rebase)","text":"<p>Inspirowane artyku\u0142em.</p> <pre><code>git rebase -i JAK_DALEKO\n#np\ngit rebase -i HEAD~3 #3 commity do ty\u0142u\n#lub\ngit rebase -i master\n</code></pre> <p>To jak g\u0142\u0119boki ma by\u0107 nasz rebase mo\u017cemy okre\u015bli\u0107 jako ilo\u015b\u0107 commit\u00f3w (<code>HEAD~9</code> - czyli 9 commit\u00f3w do ty\u0142u), czy te\u017c wzgl\u0119dem innego brancha (np. maj\u0105c feature branch wychodz\u0119cy z mastera mo\u017cemy zrobi\u0107 rebase wzgl\u0119dem mastera).</p> <p>Po zatwierdzeniu otrzymujemy list\u0119 commit\u00f3w z kt\u00f3rymi decydujemy co zrobi\u0107.</p> <pre><code>pick 56dc78c Poprawki do manipulacji tekstem\npick 57d9877 Podstawy templatek\npick b0675c9 Wykluczanie s\u0142\u00f3w w regexach\npick 1c30565 Cockpit dodany do narz\u0119dzi\n\n# Przestawianie 578f646..1c30565 na 1c30565 (4 polecenia)\n#\n# Polecenia:\n# p, pick &lt;zapis&gt; = dobierz zapis\n# r, reword &lt;zapis&gt; = u\u017cyj zapisu, ale przeredaguj jego komunikat\n# e, edit &lt;zapis&gt; = u\u017cyj zapisu, ale zatrzymaj si\u0119, \u017ceby go poprawi\u0107\n# s, squash &lt;zapis&gt; = u\u017cyj zapisu, ale po\u0142\u0105cz go z poprzednim (sp\u0142aszcz)\n# f, fixup &lt;zapis&gt; = jak \u201esquash\u201d, ale odrzu\u0107 komunikat tego zapisu\n# x, exec &lt;polecenie&gt; = wykonaj polecenie (reszt\u0119 wiersza) w pow\u0142oce\n# b, break = zatrzymaj si\u0119 tu (kontynuuj przestawianie przez \u201egit rebase --continue\u201d)\n# d, drop &lt;zapis&gt; = usu\u0144 zapis\n# l, label &lt;etykietka&gt; = nazwij bie\u017c\u0105ce HEAD\n# t, reset &lt;etykietka&gt; = zresetuj HEAD do etykietki\n# m, merge [-C &lt;zapis&gt; | -c &lt;zapis&gt;] &lt;etykietka&gt; [# &lt;wiersz&gt;]\n# .       utw\u00f3rz zapis scalenia u\u017cywaj\u0105c pierwotnego komunikatu scalenia\n# .       (albo &lt;wiersza&gt;, je\u015bli nie podano pierwotnego zapisu scalenia.\n# .       U\u017cyj -c &lt;zapis&gt;, aby przeredagowa\u0107 komunikat zapisu.\n# Kolejno\u015b\u0107 wierszy mo\u017ce by\u0107 zmieniona; s\u0105 wykonywane z g\u00f3ry na d\u00f3\u0142.\n#\n# Je\u015bli usuniesz tutaj wiersz, TEN ZAPIS B\u0118DZIE STRACONY.\n#\n# Je\u015bli jednak usuniesz wszystko, przestawianie zostanie przerwane.\n#\n# Zwa\u017c, \u017ce puste zapisy s\u0105 wykomentowane\n</code></pre> <p>Nast\u0119pnie po wybraniu operacji zatwierdzamy i rozpoczynamy zmiany.</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/narzedzia/","title":"Zbi\u00f3r r\u00f3\u017cnych u\u017cytecznych narz\u0119dzi, framework\u00f3w , stron i bibliotek z kt\u00f3ymi si\u0119 spotka\u0142em","text":""},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/narzedzia/#dokumentacja","title":"Dokumentacja","text":"<ul> <li>doxygen</li> <li>https://readthedocs.org/</li> <li>mkdocs</li> <li>https://jekyllrb.com/</li> <li>Daux.io</li> </ul>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/narzedzia/#statystyki-githuba-i-repozytoriow","title":"Statystyki githuba i repozytori\u00f3w","text":"<ul> <li>statystyki pobra\u0144 projekt\u00f3w - github-release-stats i GithubStats</li> <li>najaktywniejsze forki danego repo - legacy, nowa wersja</li> <li>ststystyki u\u017cytkownika - Coderstats</li> <li>Graf gwiazdek - star-history</li> <li>Liczenie linii kodu <code>cloc</code> (lokalnie) lub https://codetabs.com/count-loc/count-loc-online.html</li> <li>Regex https://regexr.com/</li> </ul>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/narzedzia/#inne","title":"Inne","text":"<ul> <li>SearchCode - przeszukiwanie baz z kodem \u017ar\u00f3d\u0142owym. Przydatne, gdy chcesz znale\u017a\u0107 przyk\u0142ady wywo\u0142ywania danej funkcji.</li> <li> <p>zerotier - chyba najprostszy VPN</p> </li> <li> <p>Gdy chcemy w sieci zerotiera postawi\u0107 serwer DNS https://github.com/zerotier/zeronsd</p> </li> <li> <p>Xonsh - odmiana shella (zamiennik dla klasycznego basha) bazuj\u0105cy na pythonie</p> </li> </ul> <pre><code>len($(curl -L https://xon.sh))\n\nfor filename in `.*`:\n    print(filename)\n    du -sh @(filename)\n</code></pre>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/serwery_i_homelaby/","title":"Narz\u0119dzia serwerowe\u2601\ufe0f","text":"<p>Na dobry pocz\u0105tek mo\u017cna zajrze\u0107 na wiki reddita homelab, artyku\u0142 o przyk\u0142adowych us\u0142ugach</p> <p>Fajne serwisy kt\u00f3rych hostowanie mo\u017ce pos\u0142u\u017cy\u0107 ka\u017cdemu:</p> <ul> <li>NextCloud - alternatywa dla w\u0142asnego google clouda. Baza pod du\u017c\u0105 ilos\u0107 zastosowa\u0144, jak file storage, kalendarz, kontakty, zarz\u0105dzanie zdj\u0119ciami, edycja dokument\u00f3w, komunikator etc.</li> <li>Jellyfin - w\u0142asny prywatny serwer multimedialny (taki netflix/legimi/spotify)</li> <li>Pi-Hole - domowy adblock dla wszystkich urz\u0105dze\u0144 w sieci</li> <li>Uptime kuma - prosta apka do monitorowania innych serwer\u00f3w</li> </ul>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/serwery_i_homelaby/#monitoring-i-zarzadzanie-infrastruktura","title":"Monitoring i zarz\u0105dzanie infrastruktur\u0105","text":"<p>Przydatne narz\u0119dzia dla ka\u017cdej osoby, kt\u00f3ra zamierza rozpocz\u0105\u0107 swoj\u0105 przygod\u0119 z serwerami/homelabem.</p> <ul> <li> <p>cockpit - pozwala w prosty spos\u00f3b monitorowa\u0107 serwer (poprzez apk\u0119 webow\u0105 mo\u017cemy si\u0119 zalogowa\u0107, uruchomi\u0107 terminal, sprawdza\u0107 obci\u0105\u017cenie, logi etc) ( link to konfiguracji)</p> </li> <li> <p>Je\u015bli chcemy w cockpicie wygodnie zarz\u0105dza\u0107 tak\u017ce portami warto doinstalowa\u0107</p> </li> <li> <p>linux-dash - nieco prostsza alternatywa od cockpita</p> </li> </ul> <p>Narz\u0119dzia do monitorowania - d\u0142uga lista https://www.ubuntupit.com/most-comprehensive-list-of-linux-monitoring-tools-for-sysadmin/</p> Cockpit + cloudflare tunnel <p>Wymagana edycja pliku <pre><code>cat /etc/cockpit/cockpit.conf\n</code></pre></p> <p><pre><code>[WebService]\nOrigins = https://dashboard.xxxxx.ca wss://dashboard.xxxxx.ca\nProtocolHeader = X-Forwarded-Proto\nAllowUnencrypted = true\n</code></pre> Potem w panelu Cloudflate mapujemy nasz adres na <code>http://localhost:9090</code> \u017ar\u00f3d\u0142o Inn\u0105 wa\u017cn\u0105 rzecz\u0105 jest ograniczenie poziomu domeny. Nie powinno si\u0119 u\u017cywa\u0107 pod-poddomen. mo\u017ce by\u0107 <code>cockpit-serwer.domena.pl</code>, ale nie <code>cockpit.serwer.domena.pl</code> \u017cr\u00f3d\u0142o</p> <p>Monitorowanie docker\u00f3w \ud83d\udc0b</p> <ul> <li>portainer aplikacja s\u0142u\u017c\u0105ca do wygodnej pracy oraz monitorowania docker\u00f3w w systemie</li> <li>Yacht - alternatywa dla portainera (troch\u0119 m\u0142odszy i prostszy projekt)</li> </ul>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/serwery_i_homelaby/#siec-aczenie-sie-i-udostepnianie","title":"Sie\u0107, \u0142\u0105czenie si\u0119 i udost\u0119pnianie","text":"<ul> <li>ngrok - pozwala \u0142atwo udost\u0119pnia\u0107 serwisy z urz\u0105dze\u0144 w sieci lokalnej. Dobre do prototypowania oraz prostych stron</li> <li>cloudflare - must-have gdy masz jak\u0105\u015b domen\u0119 i ni\u0105 zarz\u0105dzasz</li> <li>Cloudflare Proxy - zwi\u0119ksza wydajno\u015b\u0107 twoich stron oraz pozwala tunelowa\u0107 ruch IPv4 na adresy PIv6</li> <li>Tunelowanie - pozwala wystawia\u0107 do sieci serwery z sieci lokalnych pozbawione publicznych adres\u00f3w. Mo\u017cna u\u017cy\u0107 tego chocia\u017cby do udost\u0119pnienia cockpita, czy te\u017c SSH (instrukcje)</li> </ul> <p>VPN-y</p> <p>Bazowe protoko\u0142y:</p> <ul> <li>Wireguard - jeden z dw\u00f3ch popularnych protoko\u0142\u00f3w VPNa.</li> <li>OpenVPN - r\u00f3wnie\u017c popularny, lecz troche przestarza\u0142y protok\u00f3\u0142 VPNa</li> <li>PiVPN - prosty i uniwersalny VPN. Ma UI webowe oraz wpiera Wireguarda i OpenVPN-a.</li> </ul> <p>Jednak nieco wygodniejsze wydaje si\u0119 wykorzystywanie narz\u0119dzi takich jak netbird i tailscale.</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/serwery_i_homelaby/#obsuga-pivpn-a-i-wireguarda","title":"Obs\u0142uga PiVPN-a i Wireguarda","text":"<p>Zak\u0142adam, \u017ce PiVPN jest skonfigurowany z Wireguardem.</p> <p>Aby doda\u0107 nowego nowe po\u0142\u0105czenie do naszego serwera wireguarda nalezy wywo\u0142a\u0107 komend\u0119 <code>pivpn add</code>, tam okre\u015blamy nazw\u0119 po\u0142\u0105czenia.</p> <pre><code>pawel@amd:~$ pivpn add\nEnter a Name for the Client: superserwer\n::: Client Keys generated\n::: Client config generated\n::: Updated server config\n::: WireGuard reloaded\n======================================================================\n::: Done! superserwer.conf successfully created!\n::: superserwer.conf was copied to /home/opc/configs for easytransfer.\n::: Please use this profile only on one device and create additional\n::: profiles for other devices. You can also use pivpn -qr\n::: to generate a QR Code you can scan with the mobile app.\n======================================================================\n</code></pre> <p>Konfigi s\u0105 te\u017c zapisywane w <code>/etc/wireguard/configs</code></p> <p>Instrukcja pod\u0142\u0105czenia si\u0119 - Aby si\u0119 pod\u0142\u0105czy\u0107 na maszynie klienckiej umieszczamy ten konfig w folderze <code>/etc/wireguard/</code> i wo\u0142amy komend\u0119 <code>wg-quick up nazwapliku</code>\ud83d\udfe9 any wystartowa\u0107 i <code>wg-quick down nazwapliku</code>\ud83d\udfe5 aby zatrzyma\u0107. (przyda\u0107 si\u0119 mo\u017ce paczka resolvconf)</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/serwery_i_homelaby/#storage","title":"Storage","text":"<ul> <li>TrueNAS - system operacyjny dedykowany maszynm maj\u0105cym s\u0142u\u017cy\u0107 jako storage</li> <li>Wtyczka do Cockpitu pozwalaj\u0105ca na \u0142atwe udost\u0119pnianie zawarto\u015bci, jest te\u017c inna wtyczka do przegl\u0105dania plik\u00f3w</li> <li>Duplicati - apka do robienia backup\u00f3w danych (wraz z opcj\u0105 szyfrowania).</li> </ul>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/serwery_i_homelaby/#dla-chcacych-postawic-sobie-jakis-serwer","title":"Dla chc\u0105cych postawi\u0107 sobie jaki\u015b serwer","text":"<p>Poszukiwanie VPS-a:</p> <ul> <li>mikr.us - fajne i tanie serwery dla amator\u00f3w, jest troch\u0119 dokumentacji i fajna spo\u0142eczno\u015b\u0107 ( FB i Discord)</li> <li>Oracle free tier - darmowe serwery VPS or oracle. Om\u00f3wienie: link pepper SIDENOTE: je\u015bli instancje s\u0105 nieu\u017cywane to mog\u0105 by\u0107 automatyucznie wy\u0142\u0105czane: link</li> <li>serverhunter - wyszukiwarka tanich VPS\u00f3w (gdy mikrus nie starcza)</li> </ul> Oracle odblokowywanie port\u00f3w <p>Jako, \u017ce maszyny od Oracle maj\u0105 domy\u015blnie publiczne IP to maj\u0105 domy\u015blnie nieco bardziej restrykcyjny firewall. link do dokumentacji Najpierw trzeba zmieni\u0107 ustawienia w panelu na stronie oracle, a potem jeszcze doda\u0107 zasad\u0119 do iptables <code>sudo iptables -I INPUT 6 -m state --state NEW -p tcp --dport 80 -j ACCEPT</code> i je\u015bli to dzia\u0142a to mo\u017cemy zapisa\u0107 nasz\u0105 zmian\u0119 <code>sudo netfilter-persistent save</code></p> <p>Oganianie domen:</p> <ul> <li>tld-list - por\u00f3wnywarka cen domen</li> <li>seohost - moim zdaniem najlepszy dostawca domen w Polsce</li> </ul>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/serwery_i_homelaby/#oszczedzanie-energii","title":"Oszcz\u0119dzanie energii","text":"<p>Tutaj jest jedna apka <code>powertop</code> mo\u017cna w niej podejrze\u0107 jakie power states s\u0105 obecnie na procesorze (C0, C1, C2...)</p> <p>Og\u00f3lnie warto te\u017c zapozna\u0107 si\u0119 z tym wideo.</p> <p>https://youtu.be/MucGkPUMjNo?si=_4RVAnBg5IsMGqhp</p>"},{"location":"Narz%C4%99dzia%F0%9F%9B%A0%EF%B8%8F/serwery_i_homelaby/#szyfrowanie-dyskow-oraz-deszyfrowanie-z-pomoca-tpm","title":"Szyfrowanie dysk\u00f3w oraz deszyfrowanie z pomoc\u0105 TPM","text":"<p>Partycje mo\u017cna zabezpieczy\u0107 szyfrowaniem z pomoc\u0105 LUKS-a.   Tutaj jednak problemem mo\u017ce by\u0107 automatyczne uruchomienie takiego systemu, aby nie by\u0142o wymagane wpisywanie has\u0142a r\u0119cznie.</p> <p>Tutaj z pomoc\u0105 rzychodzi TPM.</p> <p>https://fedoramagazine.org/automatically-decrypt-your-disk-using-tpm2/</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/","title":"Podstawy Pythona \ud83d\udc0d","text":""},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#quickstart","title":"Quickstart","text":""},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#shebang","title":"Shebang","text":"<p>Jest to pierwsza linia skryptu (nie tylko w pythonie), kt\u00f3ra okre\u015bla za pomoc\u0105 czego ma by\u0107 wykonany skrypt (mo\u017ce by\u0107 to bash, zsh, python) Mamy tutaj 2 mo\u017cliwo\u015bci:</p> <p>Ta bardziej uniwersalna (dzia\u0142a z wieloma systemami operacyjnymi)</p> <pre><code>#!/usr/bin/env python3\n</code></pre> <p>W tym wypadku u\u017cywaj\u0105c flagi <code>-S</code> mo\u017cemy doda\u0107 dodatkowe flagi do interpretera</p> <pre><code>#!/usr/bin/env -S ptpython -i\n</code></pre> <p>Mo\u017cna te\u017c u\u017cy\u0107 bezpo\u015bredniej \u015bcie\u017cki, gdzie dodawanie parametr\u00f3w jest nieco \u0142atwiejsze.</p> <pre><code>#!/usr/bin/python3\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#interaktywny-python","title":"Interaktywny Python","text":"<p>Po dodaniu parametru <code>-i</code> nadal pozostaniemy w pythonie po wykonaniu skryptu, co pozwoli nam np zajrze\u0107 do zmiennych, kt\u00f3re by\u0142y u\u017cyte, lub \u0142atwo u\u017cy\u0107 klas, albo metod, kt\u00f3re zosta\u0142y zdefiniowane w skrypcie.</p> <p>Jednak do nieco bardziej z\u0142o\u017conych operacji w trybie interaktywnym warto rozwa\u017cy\u0107 u\u017cycie innego pythona. Mo\u017cna tutaj np. u\u017cy\u0107 ptpython, Ipython lub bpython. Dla wygody mozemy te\u017c zmieni\u0107 interpreter w shebangu.</p> <p>Je\u015bli nie chcemy u\u017cywa\u0107 innego interpretera mo\u017cemy sobie nieco poprawi\u0107 czytelno\u015b\u0107 pythona w terminalu za pomoc\u0105 biblioteki rich.</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#funkcja-main","title":"Funkcja main","text":"<p>wykonuje si\u0119, gdy skrypt jest uruchamiany jako samodzielny program, a nie jako modu\u0142 czego\u015b innego</p> <pre><code>#!/usr/bin/python3 #warto to da\u0107, aby system widzia\u0142, \u017ce to skrypt w pythonie a nie np. w shellu\ndef main():\n    print(\"Witaj \u015bwiecie!\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#argumenty-programu","title":"Argumenty programu","text":"<pre><code># Print total number of arguments\nprint ('Total number of arguments:', format(len(sys.argv)))\n\n# Print all arguments\nprint ('Argument List:', str(sys.argv))\n\n# Print arguments one by one\nprint ('First argument:',  str(sys.argv[0]))\nprint ('Second argument:',  str(sys.argv[1]))\n</code></pre> <p>Do parsowania bardziej skomplikowanych argument\u00f3w warto u\u017cy\u0107 biblioteki argparse</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#zwracanie-wartosci","title":"Zwracanie warto\u015bci","text":"<pre><code>sys.exit(numer)\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#funkcje-wewy","title":"Funkcje we/wy","text":"<pre><code>pobrany_napis = input()\nprint(\"Tw\u00f3j napis to: \" + pobrany_napis)\n</code></pre> <p>input() jest funkcj\u0105, kt\u00f3ra pobiera napis podany przez u\u017cytkownika ze standardowego wej\u015bcia (do entera) zwraca zmienn\u0105 typu str</p> <p>Dla strumieni:</p> <pre><code>import sys\n\nfor line in sys.stdin:\n    sys.stdout.write(line)\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#importowanie-bibliotek-etc","title":"Importowanie bibliotek etc","text":"<p>TODO</p> <p>Przyk\u0142adowe importy.</p> <pre><code>import math\n\nfrom collections import namedtuple\n\nfrom django.contrib.auth.forms import (\n    AuthenticationForm, PasswordChangeForm, PasswordResetForm, SetPasswordForm,\n)\n</code></pre> <p>wi\u0119cej informacji w opisie paczek.</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#podstawy","title":"Podstawy","text":""},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#komentarze","title":"Komentarze","text":"<pre><code>\"\"\"\nKomentarz na\nkilka linii\n\"\"\"\n#komentarz na jedn\u0105 lini\u0119\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#zmienne","title":"Zmienne","text":"<p>Deklarujemy je be okre\u015blania ich typu <code>a=5</code> (interpreter automatycznie uzna, \u017ce to b\u0119dzie int) W odr\u00f3\u017cnieniu od takich j\u0119zyk\u00f3w jak C++, C# czy Java, w j\u0119zyku Python wyst\u0119puje typowanie dynamiczne. Oznacza to, \u017ce konkretny identyfikator, konkretna zmienna, np. a, mo\u017ce raz przechowywa\u0107 napis (\"Ala ma kota\") by po chwili przechowywa\u0107 liczb\u0119 ca\u0142kowit\u0105 (3). Do sprawdzania typu danych s\u0142u\u017cy funkcja <code>type()</code>.</p> <pre><code>logiczna = True\nprint(type(logiczna))\n## &lt;class 'bool'&gt;\n</code></pre> <p>Najwa\u017cniejsze typy zmiennych:</p> <ul> <li><code>bool</code>, warto\u015b\u0107 logiczna, tak lub nie, prawda (True) albo fa\u0142sz (False)</li> <li><code>int</code>, liczba ca\u0142kowita, np. -7, 0 czy 3:</li> <li><code>float</code>, czyli warto\u015b\u0107 zmiennopozycyjna, mo\u017cna j\u0105 uto\u017csamia\u0107 z warto\u015bciami rzeczywistymi, np. -0.67, 1.0, 3.14</li> <li><code>complex</code>, czyli liczba zespolona, np. -7+8.5j. Warto pami\u0119ta\u0107, \u017ce w Pythonie jednostk\u0105 urojon\u0105 jest j, a nie i</li> <li><code>str</code>, powszechnie znany w innych j\u0119zykach jako string, czyli napis. Napis poznajemy g\u0142\u00f3wnie po tym, \u017ce jest zapisany w cudzys\u0142owie (i to odr\u00f3\u017cnia go cho\u0107by od nazwy zmiennej czy liczby, kt\u00f3re nie s\u0105 w cudzys\u0142owach). Dodamy, \u017ce w j\u0119zyku Python nie ma znaczenia, czy pos\u0142ugujemy si\u0119 pojedynczymi (') czy podw\u00f3jnymi (\") cudzys\u0142owami</li> </ul> <p>Konwersja typ\u00f3w analogiczna dla przyk\u0142adu poni\u017cej</p> <pre><code>print(int(5.3))\n## 5\n</code></pre> <p>Operatory:</p> <ul> <li>dodawanie (<code>+</code>)</li> <li>odejmowanie (<code>-</code>)</li> <li>mno\u017cenie (<code>*</code>)</li> <li>dzielenie (<code>/</code>)</li> <li>reszta z dzielenia, modulo (<code>%</code>)   Analogiczne co C operatory <code>-=</code>, <code>*=</code>, <code>/=</code>, <code>%=</code>...   UWAGA! Brak operator\u00f3w <code>++</code> i <code>--</code></li> <li><code>**</code> pot\u0119ga</li> <li><code>2+3j</code> liczba zespolona</li> </ul> <p>Operatory Logiczne zwracaj\u0105 warto\u015b\u0107 logiczn\u0105 (True/False)</p> <ul> <li><code>&lt;</code> - mniejsze</li> <li><code>&lt;=</code> - mniejsze r\u00f3wne, zwr\u00f3\u0107my uwag\u0119, \u017ce zapisujemy tak jak czytamy, nie ma operatora =&lt; (r\u00f3wne mniejsze)</li> <li><code>&gt;</code> - wi\u0119ksze</li> <li><code>&gt;=</code> - wi\u0119ksze r\u00f3wne</li> <li><code>==</code> - r\u00f3wna si\u0119. Tutaj bardzo wa\u017cne jest, aby odr\u00f3\u017cnia\u0107 operator przypisania (=) od operatora por\u00f3wnania r\u00f3wna si\u0119 (==). To bardzo cz\u0119sty b\u0142\u0105d w\u015br\u00f3d pocz\u0105tkuj\u0105cych programist\u00f3w. Operator = nie jest symetryczny, ma na celu przekopiowanie warto\u015bci z prawej do lewej. W niekt\u00f3rych j\u0119zykach zapisuje si\u0119 go jako &lt;- (ale nie w Pythonie). Operator = nie ma nic wsp\u00f3lnego z warto\u015bciami logicznymi. Za to operator == jest operatorem zwracaj\u0105cym warto\u015b\u0107 logiczn\u0105, a co wi\u0119cej, jest on operatorem symetrycznym (nie ma znaczenia zamienienie kolejno\u015bci\u0105 argument\u00f3w).</li> <li><code>!=</code> - nie r\u00f3wna si\u0119   Operator koniunkcji, <code>and</code>, uto\u017csamiany z polskim i. Zwraca warto\u015b\u0107 True wtedy i tylko wtedy, gdy oba argumenty s\u0105 r\u00f3wne True   Operator alternatywy, <code>or</code>, uto\u017csamiany z polskim lub. Zwraca warto\u015b\u0107 True wtedy i tylko wtedy, gdy przynajmniej jeden argument jest r\u00f3wny True   Operator zaprzeczenia, <code>not</code>, uto\u017csamiany z polskim nie. Zwraca warto\u015b\u0107 przeciwn\u0105, ni\u017c argument</li> </ul> <p>Mo\u017cna \u0142\u0105czy\u0107 kilka operator\u00f3w np: <code>czy_wiek_produkcyjny = 18 &lt;= wiek &lt;= 65</code> - w pythonie por\u00f3wnania rozwijane s\u0105 tak jak w matematyce, czyli np mo\u017cemy te\u017c napisa\u0107 <code>2 &lt;= 4 &lt; 8</code>, co zwr\u00f3ci nam <code>True</code></p> <p>Inne operatory:</p> <ul> <li><code>is</code> - czy dwie zmienne s\u0105 r\u00f3\u017cnymi instancjami tego samego obiektu</li> </ul> <pre><code>s1={}\ns2={}\n\ns1==s2\n#True\n\ns1 is s2\n#False ##poniewa\u017c to nie jest ten sam s\u0142ownik\n</code></pre> <ul> <li><code>in</code> u\u017cywany do sprawdzenia, czy dana warto\u015b\u0107/obiekt zawiera si\u0119 w li\u015bcie/s\u0142owniku/secie...</li> </ul> <pre><code>zbior = {1, 3, 5}\nzbior_pusty = {}\n\nprint(1 in zbiorPusty)\n## False\nprint(1 in zbior)\n## True\n</code></pre> <p>Instrukcja warunkowa if</p> <pre><code>if warunek:\n    instrukcja1\n    instrukcja2\nelif warunek2: # gdy warunek nieprawdziwy, sprawd\u017a warunek2\n    instrukcja3\n    instrukcja4\nelif warunek3: #gdy warunek2 nieprawdziwy, sprawd\u017a warunek3\n    instrukcja5\n    instrukcja6\nelse: #gdy zaden z warunk\u00f3w nie byl prawdziwy\n    instrukcja7\n    instrukcja8\n</code></pre> <p>Warto tak\u017ce pami\u0119ta\u0107 o jedno-linijkowym wariancie if-a:</p> <pre><code># a if condition else b\nprint(\"Prawda\") if True else print(\"Fa\u0142sz\")\n#Prawda\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#pusta-zmienna","title":"Pusta zmienna","text":"<p>Czasem <code>_</code> jest u\u017cywane jako pusta zmienna jest to swego rodzaju odpowiednik <code>/dev/null</code></p> <p>TODO dopisa\u0107 i om\u00f3wi\u0107 przyk\u0142ady: https://stackoverflow.com/questions/5893163/what-is-the-purpose-of-the-single-underscore-variable-in-python</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#petle","title":"P\u0119tle","text":"<p>Po <code>for</code> (<code>foreach</code>) mo\u017ce si\u0119 znajdowa\u0107 lista (obr\u00f3t dla ka\u017cdego elementu) Po while warunek logiczny (obroty dop\u00f3ki prawda)</p> <pre><code>for i in range(0, 4):\nprint(i)\n\n## 0\n## 1\n## 2\n## 3\n\n#lub\ni = 0\nwhile i &lt; 4:\nprint(i)\ni+=1\n\nliczby = [2, 3, 5]\nfor liczba in liczby:\nprint(liczba)\n## 2\n## 3\n## 5\n</code></pre> <p>S\u0142owo kluczowe <code>continue</code> przerywa dany obr\u00f3t p\u0119tli S\u0142owo kluczowe <code>break</code> przerywa ca\u0142\u0105 p\u0119tl\u0119</p> <p>Je\u015bli iterujemy po li\u015bcie krotek mo\u017cemy sobie je rozbi\u0107</p> <pre><code>for i, line in enumerate(strings_list): #enumerate zwraca dla danej listy krotk\u0119 zawieraj\u0105c\u0105 numer i element z listy\n    ###jaki\u015b kod\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#petle-jednolinijkowe-list-comprehensions","title":"P\u0119tle jednolinijkowe (List Comprehensions)","text":"<p>Jednolinijkowe p\u0119tle zwracaj\u0105ce np list\u0119 dobre dla prostych operacji, u\u017cyteczne do szybkiego generowania tablic.</p> <pre><code>newlist = [expression for item in iterable if condition == True]\n#albo bez if-a\nnewlist = [x for x in range(10)]\n\nfruits = [\"apple\", \"banana\", \"cherry\", \"kiwi\", \"mango\"]\nnewlist = []\n\nfor x in fruits:\n  if \"a\" in x:\n    newlist.append(x)\n\n#daje to samo co:\n\nnewlist = [x for x in fruits if \"a\" in x]\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#struktury-danych","title":"Struktury danych","text":""},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#krotka-tuple","title":"Krotka (tuple)","text":"<p>Pewn\u0105 specyficzn\u0105 dla j\u0119zyka Python struktur\u0105 jest krotka. Polega ona na grupowaniu paru warto\u015bci w jeden byt. Warto zaznaczy\u0107, \u017ce krotka, kt\u00f3ra raz zosta\u0142a stworzona, nie mo\u017ce by\u0107 modyfikowana: nie mo\u017cemy podmieni\u0107 jednej ze sk\u0142adowych krotki</p> <pre><code>krotka = (2,3)\nprint(krotka)\n## (2, 3)\n</code></pre> <p>Gdyby\u015bmy chcieli uzyska\u0107 poszczeg\u00f3lne sk\u0142adowe krotki, mo\u017cemy to zrobi\u0107 przy u\u017cyciu operatora kwadratowych nawias\u00f3w. W Pythonie, tak jak w wielu j\u0119zykach programowania, numerujemy sk\u0142adowe od 0:</p> <pre><code>pierwsza = krotka[0]\ndruga = krotka[1]\nprint(pierwsza)\n## 2\nprint(druga)\n## 3\nW krotce mo\u017cemy miesza\u0107 typy danych:\nkrotka = (2, \"Napis\")\nprint(krotka)\n## (2, 'Napis')\nlen(krotka) #d\u0142ugo\u015b\u0107 krotki\n## 2\n</code></pre> <p>Kiedy krotka mo\u017ce by\u0107 przydatna? Np. gdy chcemy zwr\u00f3ci\u0107 wi\u0119cej ni\u017c jedn\u0105 warto\u015b\u0107 w funkcji.</p> <pre><code>def f(x):\n    y0 = x + 1\n    y1 = x * 3\n    y2 = y0 ** y3\n    return (y0, y1, y2)\n</code></pre> <p>Je\u015bli chcemy mo\u017cemy rozbi\u0107 krotk\u0119 na poszczeg\u00f3lne zmienne</p> <pre><code>a,b,c = (1,2,3)\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#named-tuple","title":"named tuple","text":"<p>Specjalne obiekty dzia\u0142aj\u0105ce jak krotki i kompatybilne z nimi.</p> <pre><code>from collections import namedtuple\nPoint = namedtuple('Point', 'x y')\npt1 = Point(1.0, 5.0)\npt2 = Point(2.5, 1.5)\n\nfrom math import sqrt\n# wskazanie poprzez indeks\nline_length = sqrt((pt1[0]-pt2[0])**2 + (pt1[1]-pt2[1])**2)\n # rozpakowanie krotki\nx1, y1 = pt1\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#funkcja-zip","title":"Funkcja zip","text":"<p>Do operowania na krotkach przydatna jest funkcja wbudowana <code>zip</code> zwracaj\u0105ca iterator (nie list\u0119) pozwalaj\u0105cy iterowa\u0107 po krotkach tworzonych z obiekt\u00f3w danych w funkcji.</p> <pre><code>a = (\"John\", \"Charles\", \"Mike\")\nb = (\"Jenny\", \"Christy\", \"Monica\", \"Vicky\") # warto\u015bci nadmiarowe s\u0105 pomijane\n\nfor kr in zip(a, b):\n    print(kr)\n\n#('John', 'Jenny')\n#('Charles', 'Christy')\n#('Mike', 'Monica')\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#lista","title":"Lista","text":"<p>Podobn\u0105, przynajmniej na poz\u00f3r, struktur\u0105 danych do krotki jest lista. Tutaj tak\u017ce mo\u017cemy grupowa\u0107 dane oraz nie musz\u0105 one by\u0107 tego samego typu. Jednak g\u0142\u00f3wn\u0105 r\u00f3\u017cnic\u0105 jest to, \u017ce list\u0119 mo\u017cemy modyfikowa\u0107. Mo\u017cemy dodawa\u0107 nowe elementy czy zast\u0119powa\u0107 dotychczasowe.</p> <pre><code>lista = [1, False, \"Napis\"]\nprint(lista)\n## [1, False, 'Napis']\nprint(len(lista))\n## 3\nlista.append(2.5+3.7j)\nprint(lista)\n## [1, False, 'Napis', (2.5+3.7j)]\nlista.extend([97,98,99]) # metoda podobna po append, kt\u00f3ra przyjmuje jako argument ca\u0142\u0105 list\u0119 i dodaje z niej kolejne elementy\nprint(lista)\n## [1, False, 'Napis', (2.5+3.7j), 97, 98, 99]\n</code></pre> <p>Operatory <code>+</code> i <code>*</code> maj\u0105 zdefiniowane dzia\u0142anie w kontek\u015bcie list. <code>+</code>, tak jak w przypadku napisu, to konkatenacja, czyli po\u0142\u0105czenie dw\u00f3ch list w jedn\u0105 <code>*</code> za\u015b pozwala nam powieli\u0107 dan\u0105 list\u0119:</p> <pre><code>print(lista + [7,8,9])\n## [1, False, 'Napis', (2.5+3.7j), 97, 98, 99, 7, 8, 9]\nprint([7,8,9] * 3)\n## [7, 8, 9, 7, 8, 9, 7, 8, 9]\n</code></pre> <p>Odwo\u0142anie si\u0119 do konkretnego elementu nast\u0119puje tak jak w krotce:</p> <pre><code>print(lista[2])\n## Napis\n! ujemne indeksy oznaczaj\u0105 pozycje liczone od ty\u0142u\nprint(lista[-1])\n## 99\n</code></pre> <p>Og\u00f3lna sk\u0142adnia indeksowania wygl\u0105da tak: <code>[od:do:krok]</code>. Domy\u015blnie <code>od</code> to 0, <code>do</code> to d\u0142ugo\u015b\u0107 listy, a <code>krok</code> to 1.</p> <pre><code>Odwo\u0142ywanie si\u0119 do wycinka listy\nprint(lista[2:5])\n## ['Nowy', (2.5+3.7j), 97]\nElementy o numerach 2, 3, 4 (bez 5)\n\n\"ala ma kota\"[-4::] #elementy od trzeciego od ko\u0144ca a\u017c do ostatniego\n#\"kota\"\n\n\"123456789\"[::2] #co drugi element\n#13579\n\"123456789\"[::-1] #odwr\u00f3cenie listy\n#987654321\n</code></pre> <p>Podmiana</p> <pre><code>lista[0:3] = [98,99,101,102]\nprint(lista)\n## [98, 99, 101, 102, (2.5+3.7j), 97, 98, 99]\n</code></pre> <p>Usuwa 3 pierwsze elementy i na ich miejsce wstawia te podane</p> <p>Wstawienie elementu w innym miejscufor klucz in bazaDanychPolakow.keys():</p> <pre><code>print(klucz)\n\nfor wartosc in bazaDanychPolakow.values():\nprint(wartosc)\n\nfor klucz, wartosc in bazaDanychPolakow.items(): ##Tutaj items() zwraca krotk\u0119\nprint(klucz)\nprint(wartosc)\nprint(\"-----\")\n\n\nlista.insert(1, \"Nowy2\")\nprint(lista)\n## [98, 'Nowy2', 99, 101, 102, (2.5+3.7j), 97, 98, 99]\nUsuni\u0119cie elementu\ndel lista[1]\nprint(lista)\n## [98, 99, 101, 102, (2.5+3.7j), 97, 98, 99]\nNapisy\nZmienna w napisie\nzmienna = 7\nnapis = f\"warto\u015b\u0107 zmiennej to {zmienna}\"\nprint(napis)\n## warto\u015b\u0107 zmiennej to 7\nwieleWierszy = \"\"\"Tutaj pierwszy\na tu drugi\ntutaj trzeci\"\"\"\nprint(wieleWierszy)\n## Tutaj pierwszy\n## a tu drugi\n## tutaj trzeci\n</code></pre> <p>Kolejno\u015b\u0107 alfabetyczna</p> <pre><code>print(\"a\" &lt; \"b\")\n## True\n</code></pre> <p>Wi\u0119cej na: https://www.kodolamacz.pl/blog/wyzwanie-python-3-algorytmy-i-struktury-danych/</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#zbior-set","title":"Zbi\u00f3r (set)","text":"<p>to tablica (tyle, \u017ce bez indeksowania), w kt\u00f3rych nie ma dw\u00f3ch lub wi\u0119cej identycznych element\u00f3w. (jest szybszy od listy)</p> <pre><code>zbiorPusty = set()\nzbior = {1, 3, 5}\nprint(zbiorPusty)\n## set()\nprint(zbior)\n## {1, 3, 5}\nzbior.add(2) ##Dodawanie elementu\nzbior.discard(2) ##Usuwanie elementu\nMo\u017cna w nim \u0142atwo sprawdza\u0107, czy dany element nale\u017cy do zbioru\nprint(1 in zbiorPusty)\n## False\nprint(1 in zbior)\n## True\nprint(1 not in zbiorPusty)\n## True\n</code></pre> <p>Mo\u017cemy na nich wykona\u0107 typowe operacje teoriomnogo\u015bciowe, jak suma, r\u00f3\u017cnica czy przeci\u0119cie dw\u00f3ch zbior\u00f3w</p> <pre><code>print({1,5,8} | {1,5,9}) # suma\n## {1, 5, 8, 9}\nprint({1, 5, 8} - {1, 5, 9}) # r\u00f3\u017cnica\n\n## {8}\nprint({1, 5, 8} &amp; {1, 5, 9}) # przeci\u0119cie\n## {1, 5}\nMo\u017cna zapyta\u0107, czy jeden zbi\u00f3r jest podzbiorem drugiego\nprint({1, 5}.issubset({1, 5, 9}))\n## True\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#sownik","title":"S\u0142ownik","text":"<p>Jest to rozszerzenie idei zbioru. S\u0142ownik zawiera pary klucz-warto\u015b\u0107. Wyszukiwanie po kluczu jest szybkie, tak jak w zbiorze, jednak gdy ju\u017c odnajdziemy klucz, mo\u017cemy odzyska\u0107 tak\u017ce stowarzyszon\u0105 z nim warto\u015b\u0107. Gdy usuniemy ze s\u0142ownika warto\u015bci, a zostawimy same klucze, otrzymamy zbi\u00f3r. Tak jak w zbiorze, w s\u0142owniku klucze nie mog\u0105 si\u0119 powtarza\u0107.</p> <pre><code>bazaDanychPolakow = {\"89082911111\" : [\"Jan\", \"Kowalski\", 29],\n\"95092200000\" : [\"Ania\", \"Nowak\", 23],\n\"98122422222\" : [\"Adam\", \"Mickiewicz\", 220]\n}\nbazaDanychPolakow[\"88081244444\"] = [\"Magda\", \"K\", 30] #Dodanie nowej pary klucz-warto\u015b\u0107\ndel bazaDanychPolakow[\"88081244444\"] #Usuni\u0119cie danej pary\n</code></pre> <p>Tak jak w zbiorze mo\u017cemy sprawdza\u0107, czy klucz znajduje si\u0119 w s\u0142owniku.</p> <p>Uzyskanie warto\u015bci stowarzyszonej z kluczem</p> <pre><code>print(bazaDanychPolakow[\"98122422222\"])\n## ['Adam', 'Mickiewicz', 220]\nGdy chcemy zabezpieczy\u0107 si\u0119 przed odwo\u0142aniem do nieistniej\u0105cego elementu (i w tym wypadku zwr\u00f3ci\u0107 warto\u015b\u0107 domy\u015bln\u0105), u\u017cyjemy metody get():\nprint(bazaDanychPolakow.get(\"89082911111\", \"warto\u015b\u0107 domy\u015blna\"))\n## ['Jan', 'Kowalski', 29]\nprint(bazaDanychPolakow.get(\"95092200022\", \"warto\u015b\u0107 domy\u015blna\"))\n## warto\u015b\u0107 domy\u015blna\n</code></pre> <p>Przej\u015bcie w p\u0119tli</p> <pre><code>for klucz in bazaDanychPolakow.keys():\nprint(klucz)\n\nfor wartosc in bazaDanychPolakow.values():\nprint(wartosc)\n\nfor klucz, wartosc in bazaDanychPolakow.items(): ##Tutaj items() zwraca krotk\u0119\nprint(klucz)\nprint(wartosc)\nprint(\"-----\")\n</code></pre> <p>Przy printowaniu s\u0142ownik\u00f3w (zw\u0142aszcza tych skomplikowanych) warto u\u017cy\u0107 <code>pprint</code></p> <pre><code>import pprint\npprint.pprint(duzy_slownik)\n</code></pre> <p>Przy okazji pracy ze s\u0142ownikami warto tak\u017ce pozna\u0107 klas\u0119 <code>defaultdict</code>, kt\u00f3ra zwraca domy\u015bln\u0105 warto\u015b\u0107 dla element\u00f3w nieobecnych w s\u0142owniku.</p> <pre><code>d=defaultdict(int)\nd[31]\n#&gt;0 warto\u015b\u0107 wygenerowana przed domy\u015blny konstruktor int-a\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#kolejka","title":"Kolejka","text":"<p>Kolejka jest kolejn\u0105 przydatn\u0105 struktur\u0105 danych. Najcz\u0119\u015bciej jest ona u\u017cywana do przechowywania danych w kolejce fifo. W pythonie mamy tak w\u0142a\u015bciwie 2 implementacje <code>queue.Queue</code> i  <code>collections.deque</code>. Pierwsza z nich jest zalecana g\u0142\u00f3wnie do komunikacji i wymiany komunikatami mi\u0119dzy w\u0105tkami, za\u015b druga jest po prostu struktur\u0105 danych. Z tego powodu klasa <code>queue.Queue</code> ma metody zwi\u0105zane z dost\u0119pem, jak np <code>put_nowait()</code>, czy <code>join()</code>, ale brakuje jej np operatora <code>in</code>.</p> <pre><code>from collections import deque\n\nq = deque([1,2,3,4])\nq.popleft()\n# 1\nprint(q)\n# deque([2, 3, 4])\nq.pop()\n# 4\nq.index(2)\n# 0 - indeks elementu 2\nq.append(99) # dodaj 99 na koniec\nq.extend([100,101])\nprint(q)\n# deque([2, 3, 99, 100, 101])\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#sterta-heap","title":"Sterta (heap)","text":"<p>Kolejn\u0105 typow\u0105 struktur\u0105 jest sterta/kopiec (heap) pozwalaj\u0105ca dorzuca\u0107 do niej elementy, kt\u00f3re mo\u017cna potem efektywnie zdejmowa\u0107 (przy za\u0142o\u017ceniu, \u017ce chcemy je zdejmowa\u0107 od najmniejszych).</p> <p></p> <p>W pythonie sterta jest zaimplementowana za pomoc\u0105 biblioteki <code>heapq</code>. Jej metody pozwalaj\u0105 traktowa\u0107 list\u0119 jak stert\u0119. </p> <pre><code>import heapq\n\nh = [10, 20, 15, 30, 40]\n# zmienia list\u0119 w stert\u0119 daj\u0105c\u0105 dost\u0119p od najmniejszego elementu\nheapq.heapify(h)\n# elementy na stercie mog\u0105 by\u0107 krotkami, gdzie por\u00f3wnywane s\u0105 kolejne warto\u015bci\nheapq.heappush(h, 5) \nheapq.heappop(h)\n#&gt; 5\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#funkcje","title":"Funkcje","text":"<p>Funkcje</p> <pre><code>def nazwaFunkcji(parametry, oddzielone, przecinkami):\nreturn wynik\nWarto\u015bci domy\u015blne parametr\u00f3w\ndef potega(podstawa, wykladnik=1):\n#cia\u0142o funkcji\nArgumenty nazwane Mo\u017cemy podawa\u0107 argumenty w dowolnej kolejno\u015bci, gdy podamy ich nazwy\nprint(potega(wykladnik = 4, podstawa = 3))\n## 81\n</code></pre> <pre><code>def printinfo( name, age = 35 ):\n   \"Prosta funkcja z domy\u015blnymi warto\u015bciami\"\n   print(\"Name: \", name)\n   print(\"Age \", age)\n   return\n</code></pre> <p>Funkcja mo\u017ce tak\u017ce przyjmowa\u0107 wiele argument\u00f3w</p> <pre><code>#** - zmienne b\u0119d\u0105 interpretowane jako krotka\ndef printinfo( arg1, *krotka ):\n   print(\"Output is: \")\n   print(arg1)\n   for var in krotka:\n      print(var)\n   return\n#** - zmienne b\u0119d\u0105 interpretowane jako s\u0142ownik\ndef printinfo2( arg1, **slownik ):\n   print( \"Output is: \")\n   print(arg1)\n   for key in slownik.keys():\n      print(key)\n   return\n\nprintinfo( 10 )\nprintinfo( 70, 60, 50 )\nprintinfo2(\"argum1\",klucz1=wart1,klucz2=wart2,klucz3=523,pusty=None) #wa\u017cne, aby s\u0142ownik by\u0142 definiowany jako s\u0142ownik, czyli klucz=wartosc\n</code></pre> <p>W pythonie jedna funkcja mo\u017ce zwraca\u0107 r\u00f3\u017cne rzeczy, obiekty, zmienne, nic.</p> <pre><code>def returnOrNot(return_bool=True):\n    if return_bool:\n        return True\n    return\n</code></pre> <p>Argument keyword-only PEP3102. S\u0105 one u\u017cywane, kiedy chcemy mie\u0107 argumenty po kluczach, kt\u00f3re nie powinny by\u0107 definiowane pozycyjnie.</p> <pre><code>def convert_video(validate=False):\n    pass\n\n# Ta funkcja mo\u017ce by\u0107 wywo\u0142ana w taki spos\u00f3b\nconvert_video(True) # co jest nieczytelne, wi\u0119c aby to poprawi\u0107 mo\u017cemy zdefiniowa\u0107 j\u0105 tak:\n\ndef convert_video2(*, validate=False):\n    pass\n\nconvert_video2(True) # nie dzia\u0142a, bo nie ma argument\u00f3w pozycyjnych\nconvert_video2() # dzia\u0142a\nconvert_video(validate=True) # dzia\u0142a\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#adnotacje","title":"Adnotacje","text":"<p>W wypadku funkcji mo\u017cemy te\u017c doda\u0107 adnotacje (typowanie zmiennych) do ich argument\u00f3w oraz warto\u015bci zwracanych (nie s\u0105 one wykorzystywane przez interpreter, ale u\u0142atwiaj\u0105 dokumentowanie). (Uwaga, tej funkcji nie ma w pythonie 2, dla niego jest workaround o nazwie type comments )</p> <pre><code>def funkcja( liczba1:99=12 , slowo1:str=\"sl\", slowo2:\"inne slowo\"=\"inne\") -&gt; str:\n    #some code\n    return \"slowo\"\n\n\nslowo: str = \"inne_slowo\"\n</code></pre> <p>Mo\u017cna potem je sprawdzi\u0107 poprzez si\u0119gni\u0119cie do atrybutu <code>__annotations__</code></p> <pre><code>&gt;&gt;&gt;funkcja.__annotations__\n{'liczba1': 99, 'slowo1': &lt;class 'str'&gt;, 'slowo2': 'inne slowo', 'return': &lt;class 'str'&gt;}\n</code></pre> <p>W niekt\u00f3rych wypadkach mo\u017ce pojawi\u0107 si\u0119 potrzeba zaimportowania oczekiwanych element\u00f3w</p> <pre><code>from typing import Tuple\ndef foo(x:int, y:int) -&gt; Tuple[int, int]:\n    return (x*y, y//2)\n</code></pre> <p>Mo\u017cliwe s\u0105 te\u017c adnotacje dla element\u00f3w klasy PEP-526</p> <pre><code>class Starship:\n    stats: ClassVar[dict[str, int]] = {} # class variable - pole klasy\n    damage: int = 10                     # instance variable - pole instancji\n</code></pre> <p>W razie problem\u00f3w spowodowanych kolejno\u015bci\u0105 deklaracji r\u00f3\u017cnych element\u00f3w w pliku warto u\u017cy\u0107 specjalnego importu</p> <pre><code>from __future__ import annotations # bez niego poni\u017cszy kod by nie dzia\u0142a\u0142\n\ndef fun(i: A): #mogliby\u015bmy otzyma\u0107 b\u0142\u0105d m\u00f3wi\u0105cy o odnoszeniu si\u0119 do nieistniej\u0105cej klasy\n    pass\n\nclass A:\n    pass\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#wyrazenia-lambda","title":"Wyra\u017cenia lambda","text":"<p>Lambdy to s\u0105 funkcje, kt\u00f3re mo\u017cna w do\u015b\u0107 podr\u0119czny spos\u00f3b zdefiniowa\u0107</p> <pre><code>#Og\u00f3lna definicja\nlambda arg1, arg2, arg3: nasze_wyrazenie #ta lambda zwr\u00f3ci warto\u015b\u0107 naszego wyra\u017cenia\n\nnasza_lambda = lambda x: x*2\nnasza_lambda(2)\n#&gt;4\n</code></pre> <p>Argumenty w lambdach mo\u017cna zapisywa\u0107 tak samo jak w zwyk\u0142ych funkcjach, mog\u0105 tam by\u0107 warto\u015bci domy\u015blne,</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#zasieg-i-zmienne-globalne","title":"Zasi\u0119g i zmienne globalne","text":"<p>W pythonie na og\u00f3\u0142 funkcje nie mog\u0105 edytowa\u0107 (mog\u0105 mie\u0107 dost\u0119p, ale nie edytowa\u0107) zmienne poza swoim zakresem.</p> <pre><code>c = 1 # global variable\n\ndef add():\n    print(c)\n    c = c + 2 # increment c by 2\n    print(c)\n\nadd()\n#&gt;2\n#&gt;UnboundLocalError: local variable 'c' referenced before assignment\n</code></pre> <p>Aby m\u00f3c je jednak zmienia\u0107 jest u\u017cywane s\u0142owo kluczowe <code>global</code>.</p> <pre><code>c = 0 # global variable\n\ndef add():\n    global c\n    c = c + 2 # increment by 2\n    print(\"Inside add():\", c)\n\nadd()\nprint(\"In main:\", c)\n#&gt;Inside add(): 2\n#&gt;In main: 2\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#przekazywanie-dowolnych-argumentow-kwargs-i-args","title":"Przekazywanie dowolnych argument\u00f3w (**kwargs i *args)","text":"<p>Pozwalaj\u0105 one na umieszczeanie argument\u00f3w o dowolnej liczbie i nazwie w naszej funkcji. args przyjmuje je jako list\u0119 kolejnych element\u00f3w, za\u015b kwargs przyjmuje je jak s\u0142ownik.</p> <pre><code>def parametr_args(*args):\n    print(\"zawarto\u015b\u0107 args: {}\".format(args))\n\nparametr_args('python', 'spam', 'eggs', 'test')\n###zawarto\u015b\u0107 args: ('spam', 'eggs', 'test')\n\ndef parametr_kwargs(argument, **kwargs):\n    print(\"argument: {}\".format(argument))\n    print(\"zawarto\u015b\u0107 kwargs: {}\".format(kwargs))\n\nparametr_kwargs(dodatkowy=48, nastepny=111, argument=12)\n\n# argument: 12\n# zawarto\u015b\u0107 kwargs: {'dodatkowy': 48, 'nastepny': 111}\n</code></pre> <p>//TODO https://printpython.pl/poczatki/zadanie-z-gwiazdka/</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#dekoratory-funkcji","title":"Dekoratory funkcji","text":"<p>Jest to element pozwalaj\u0105cy na opakowanie naszej funkcji za pomoc\u0105 innej funkcji, aby wzbogaci\u0107 jej funkcjonalno\u015b\u0107. Funkcja dekoruj\u0105ca najcz\u0119\u015bciej przyjmuje funkcj\u0119 dekorowan\u0105 i zwraca now\u0105, wynikow\u0105 funkcj\u0119, kt\u00f3ra ma zosta\u0107 wykonana.</p> <pre><code>#foo jest dekoratorem, kt\u00f3ry wzbogaci nasz\u0105 funkcj\u0119\ndef foo(to_be_wrapped):\n    @wraps(to_be_wrapped) #(opcjonalne) dodanie tej linii pozwala na zachowanie oryginalnej nazwy funkcji oraz jej dokumentacji\n    def new_func(args,**kwargs):\n        print(\"uwaga, b\u0119dzie sze\u015bcian\")\n        return to_be_wrapped(*args,**kwargs)  # warto je doda\u0107 aby argumenty zosta\u0142y przekazane dalej do funkcji docelowej\n\n    return new_func\n\n@foo #je\u015bli dodamy ten dekorator to u\u017cycie tej funkcji zostanie zmienione, tzn zamiast oryginalnej funkcji cube() otrzymamy \"wzbogacone\" cube drukuj\u0105ce komunikat przed drukowaniem\ndef cube(d):\n    return d ** 3 #podniesienie do pot\u0119gi 3\n\ncube(2)\n#uwaga, b\u0119dzie sze\u015bcian\n#8\n</code></pre> <p>Ale warto pami\u0119ta\u0107, \u017ce je\u015bli chcemy przygotowywa\u0107 takie dekoratory wewn\u0105trz klas to musimy pami\u0119ta\u0107, \u017c\u0119 nieco inaczej wygl\u0105da dost\u0119p do <code>self</code></p> <pre><code>class Myclass:\n    # wydaje mi si\u0119, \u017ce tutaj dekorator musi by\u0107 zdefiniowany jako pierwszy\n    def _add_loaded_location_to_token(decorated_fun, *args, **kwargs):\n        def output_fun(*args, **kwargs):\n            t = decorated_fun(*args, **kwargs)\n            t.location = args[0].current_location # po prostu self jest schowany pod pierwszym z argument\u00f3w\n            return t\n\n        return output_fun\n\n    @_add_loaded_location_to_token\n    def get_token(self):\n        #kod\n        return token\n</code></pre> <p>Dekorator przyjmuj\u0105cy argumenty. Aby dekorator m\u00f3g\u0142 przyj\u0105\u0107 argumenty, musi by\u0107 zdefiniowany jako funkcja, kt\u00f3ra zwraca dekorator.</p> <pre><code>def retry(tries=4):\n    def decorator(func):\n        @wraps(func)\n        def wrapper(*args, **kwargs):\n            for i in range(tries):\n                try:\n                    return func(*args, **kwargs)\n                except Exception as e:\n                    print(f\"Exception {e}, retrying\")\n            return None\n        return wrapper\n    return decorator\n\n@retry(5)\ndef download_file(url):\n    #kod\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#overload-przeciazanie-funkcji","title":"overload (przeci\u0105\u017canie funkcji)","text":"<p>W Pythonie mo\u017cliwe jest tak\u017ce przeci\u0105\u017canie funkcji oraz metod. Mo\u017cna do tego celu u\u017cy\u0107 dekotarota <code>@overload</code>. Pozwala on zdefiniowa\u0107 alternatywne implementacje funkcji.</p> <pre><code>from overloading import overload\nfrom collections import Iterable\n\ndef flatten(ob):\n\"\"\"Flatten an object to its component iterables\"\"\"\n    yield ob\n\n@overload\ndef flatten(ob: Iterable):\n    for o in ob:\n        for ob in flatten(o):\n            yield ob\n\n@overload\ndef flatten(ob: basestring):\n    yield ob\n</code></pre> <p>//TODO zweryfikowa\u0107 czy u\u017cywanie tego jest dobr\u0105 praktyk\u0105</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#statyczne-pola-funkcji","title":"Statyczne pola funkcji","text":"<p>Odpowiednikiem zmiennych typu <code>static</code> wewn\u0105trz funkcji jest pole funkcji. \u017ar\u00f3d\u0142o</p> <pre><code>def myfunc():\n  myfunc.counter += 1\n  print myfunc.counter\n\n# atrybut musi by\u0107 gdzie\u015b zainicjalizowany\nmyfunc.counter = 0\n</code></pre> <p>Mo\u017cna te\u017c doda\u0107 atrybut w ten spos\u00f3b:</p> <pre><code>def myfunc():\n  if not hasattr(myfunc, \"counter\"):\n     myfunc.counter = 0  # it doesn't exist yet, so initialize it\n  myfunc.counter += 1\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#obiektowka","title":"Obiekt\u00f3wka","text":""},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#obiekt","title":"Obiekt","text":"<pre><code>class Osoba: #Definicja klasy o nazwie Osoba\n    ile = 0 # pole klasy\n    imie: str # adnotacja typu dla pola instancji\n    def __init__(self, imie, nazwisko, wiek): #Definicja konstruktora\n        self.imie = imie\n        self.nazwisko = nazwisko\n        self.wiek = wiek\n    def przedstaw_sie(self):\n        print(f\"Jestem {self.imie} {self.nazwisko}. Mam {self.wiek} lat.\")\n    def urodziny(self):\n        wiek_przed = self.wiek\n        self.wiek += 1\n    return wiek_przed\n    def __del__(self): # destruktor, czyli kod, kt\u00f3ry wykonuje si\u0119 podczas niszczenia obiektu\n    @staticmethod\n    def policz():\n        return Osoba.ile\n</code></pre> <p>Obiekty w pythonie nie maj\u0105 p\u00f3l statycznych dzia\u0142aj\u0105cych tak jak w innych j\u0119zykach (jak np C++). Tutaj zmiana pola klasy nie zmienia warto\u015bci tego pola dla innych instancji link.</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#metody","title":"Metody","text":"<p>Metod\u0119 mo\u017cemy pozna\u0107 min. tak\u017ce po pierwszym argumencie: <code>self</code>. W j\u0119zyku Python metody przyjmuj\u0105 jako pierwszy parametr obiekt, na rzecz kt\u00f3rego s\u0105 wywo\u0142ywane. W samym wywo\u0142aniu nie musimy go sami podawa\u0107. Wystarczy, \u017ce metoda jest napisana po kropce. Nast\u0119pnie nast\u0119puj\u0105 trzy zwyk\u0142e parametry: imie, nazwisko oraz wiek.</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#konstruktor-i-destruktor","title":"Konstruktor i destruktor","text":"<p>Jest to taka metoda, kt\u00f3ra jest wywo\u0142ywana, gdy obiekt jest tworzony. Jej celem jest zainicjowanie p\u00f3l w instancji. Tu s\u0105 definiowane parametry klasy. Konstruktor poznajemy po jego specjalnej nazwie: <code>__init__</code>. Analogicznie dzia\u0142a destruktor (nazwa: <code>__del__</code>) Przy wywo\u0142aniu pomijamy argument self.</p> <pre><code>Jan = Osoba(\"Jan\", \"Nowak\", 48)\nJan = None #Wymuszenie destrukcji obiektu\n</code></pre> <p>Kiedy interpreter napotka kod <code>Foo()</code> dziej\u0105 si\u0119 nast\u0119puj\u0105ce rzeczy:</p> <ul> <li>Wo\u0142ana jest metoda <code>__call__()</code> dla klasy po kt\u00f3rej <code>Foo</code> dziedziczy (domy\u015blnie to jest klasa <code>type</code>)</li> <li>metoda <code>__call__()</code> wo\u0142a odpowiednio:</li> <li><code>__new__()</code> - new tworzy now\u0105 instancj\u0119 klasy (po wi\u0119cej szczeg\u00f3\u0142\u00f3w sprawd\u017a metaklasy )</li> <li><code>__init__()</code> - init j\u0105 inicjalizuje (z tego powodu on nie musi nic zwraca\u0107)</li> </ul>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#wasne-operatory","title":"W\u0142asne operatory","text":"<p>W pythonie mo\u017cna w prosty spos\u00f3b dodawa\u0107 w\u0142asne operatory do klas. Mo\u017cemy w prosty spos\u00f3b sprawi\u0107, \u017ce korzystanie z naszych klas b\u0119dzie wygodniejsze.</p> <pre><code>class C:\n    __str__(self):\n</code></pre> Operator Nazwa funkcji Opis <code>str()</code> <code>__str__(self)</code> Funkcja generuj\u0105ca stringa dla danej klasy. Przydatne do debugowania i nie tylko <code>+</code> <code>__add__(a,b)</code> Dodawanie <code>[]</code> <code>__getitem__(self,index)</code> Te kilka jest potrzebne do poprawnego zaimplementowania operatora <code>[]</code> <code>[]</code> <code>__setitem__(self,index,item)</code> <code>[]</code> <code>__delitem__(self.index)</code> <code>()</code> <code>__call__(self)</code> Instancja danej klasy jest funkcj\u0105, kt\u00f3r\u0105 mo\u017cna po prostu wywo\u0142a\u0107 <p>Pe\u0142niejsza lista operator\u00f3w TODO popraw i rozbuduj</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#widocznosc-elementow","title":"Widoczno\u015b\u0107 element\u00f3w","text":"<p>W j\u0119zyku Python nie ma p\u00f3l prywatnych w klasie: nie jeste\u015bmy w stanie w praktyce czegokolwiek \u201cukry\u0107\u201d. Jednak s\u0105 pewne zasady nazewnictwa, kt\u00f3re dzia\u0142aj\u0105 raczej na zasadzie porozumienia, ni\u017c b\u0119d\u0105ce prawdziw\u0105 barier\u0105. I tak, gdy poprzedzimy nazw\u0119 jednym znakiem podkre\u015blenia <code>_</code>, oznajmiamy, \u017ce dany element nie jest uwzgl\u0119dniony w dokumentacji, mo\u017ce si\u0119 zmieni\u0107, raczej nie nale\u017cy z niego korzysta\u0107, a \u015brodowisko programistyczne nie b\u0119dzie nam go podpowiada\u0107. Przyk\u0142adowo pole <code>_imie</code>, np. <code>self._imie</code>, czy <code>self._metoda()</code>.</p> <p>Gdy u\u017cyjemy dw\u00f3ch znak\u00f3w podkre\u015blenia <code>__</code>, zachowanie jest troch\u0119 inne: dane pole czy metoda nie b\u0119dzie widoczna pod t\u0105 nazw\u0105 wcale, ale za to b\u0119dzie mo\u017cna si\u0119 do niego odwo\u0142a\u0107 (dla nazwy <code>__element</code>) poprzez <code>_nazwaklasy.__element</code>.</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#statyczne","title":"Statyczne","text":"<p>Dla odmiany s\u0105 one tworzone poza konstruktorem. Do pola tego odwo\u0142ujemy si\u0119 poprzez nazw\u0119 klasy. Np <code>Osoba.ile</code> Sama metoda statyczna ma nad sob\u0105 napis <code>@staticmethod</code>. To tzw. dekorator. Metoda statyczna nie mo\u017ce odwo\u0142ywa\u0107 si\u0119 do instancyjnych p\u00f3l (czyli tych zwyk\u0142ych, jak imie z poprzedniego przyk\u0142adu), a jedynie do statycznych. Wynika to z faktu, \u017ce metoda statyczna nie jest wywo\u0142ywana na rzecz konkretnego obiektu, kt\u00f3ry by takie w\u0142a\u015bnie pola mia\u0142.</p> <p>Je\u015bli jednak chcemy aby nasza metoda mia\u0142a jakie\u015b informacje na temat naszej klasy mo\u017cna u\u017cy\u0107 dekoratora <code>@classmethod</code>, kt\u00f3ry r\u00f3\u017cni si\u0119 tym, \u017ce klasaobiektu (nie instancja) jest przekazywana dalej. Por\u00f3wnanie na stacku</p> <pre><code>class A(object):\n    def foo(self, x):\n        print(f\"executing foo({self}, {x})\")\n\n    @classmethod\n    def class_foo(cls, x):\n        print(f\"executing class_foo({cls}, {x})\")\n\n    @staticmethod\n    def static_foo(x):\n        print(f\"executing static_foo({x})\")\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#dziedziczenie","title":"Dziedziczenie","text":"<pre><code>class Zwierze:\n    def __init__(self, nazwa, wiek, waga):\n        self.nazwa = nazwa\n        self.wiek = wiek\n        self.waga = waga\n    def przedstaw_sie(self):\n        print(f\"Jestem zwierz\u0119ciem {self.nazwa}, mam {self.wiek} lat oraz waz\u0119 {self.waga} kg.\")\n    def urodziny(self):\n        self.wiek += 1\n\nclass Mrowka(Zwierze):\n    pass #Oznacza, \u017ce cia\u0142o jest puste\n\nclass Slon(Zwierze):\n    def przedstaw_sie(self):\n        print(f\"Jestem s\u0142oniem {self.nazwa}, mam {self.wiek} lat oraz waz\u0119 {self.waga} kg.\")\n\nclass Lew(Zwierze):\n    def przedstaw_sie(self):\n        super().przedstaw_sie()\n        print(\"A tak w og\u00f3le to jestem lwem\")\n\nclass Papuga(Zwierze):\n    def __init__(self, nazwa, wiek, waga, kolor):\n        super().__init__(nazwa, wiek, waga)\n        self.kolor = kolor\n    def przedstaw_sie(self):\n        super().przedstaw_sie()\n        print(f\"Jako papuga m\u00f3j kolor to {self.kolor}\")\n</code></pre> <p><code>super()</code> zwraca nam instancj\u0119 klasy bazowej: s\u0105 to wszystkie pola i metody naszego obiektu, jakie otrzymali\u015bmy dzi\u0119ki klasie bazowej.</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#polimorfizm","title":"Polimorfizm","text":"<p>Pozwala na u\u017cywanie klasy dziedzicz\u0105cej wsz\u0119dzie tam, gdzie mo\u017ce by\u0107 u\u017cyta klasa bazowa. Oznacza to, \u017ce instancja klasy dziedzicz\u0105cej jest uznawana za instancj\u0119 klasy bazowej. W j\u0119zyku Python sprawdzenie przynale\u017cno\u015bci danego obiektu do klasy wykonuje si\u0119 metod\u0105 isinstance():</p> <pre><code>def main():\n    Dumboo = Slon(\"Dumboo\", 77, 6000)\n    Simba = Lew(\"Simba\", 24, 100)\n    Jago = Papuga(\"Jago\", 32, 3, \"czerwony\")\n    jakis_zwierz = Zwierze(\"Katarzyna\", 31, 80)\n    print(f\"isinstance(Dumboo, Slon): {isinstance(Dumboo, Slon)}\")\n    print(f\"isinstance(Dumboo, Lew): {isinstance(Dumboo, Lew)}\")\n    print(f\"isinstance(Jago, Papuga): {isinstance(Jago, Papuga)}\")\n    print(f\"isinstance(Jago, Zwierze): {isinstance(Jago, Zwierze)}\")\n    print(f\"isinstance(jakis_zwierz, Zwierze): {isinstance(jakis_zwierz, Zwierze)}\")\n    print(f\"isinstance(jakis_zwierz, Papuga): {isinstance(jakis_zwierz, Papuga)}\")\n\nif __name__ == \"__main__\":\n    main()\n\n## isinstance(Dumboo, Slon): True\n## isinstance(Dumboo, Lew): False\n## isinstance(Jago, Papuga): True\n## isinstance(Jago, Zwierze): True\n## isinstance(jakis_zwierz, Zwierze): True\n## isinstance(jakis_zwierz, Papuga): False\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#abstrakcja","title":"Abstrakcja","text":"<p>Uniemo\u017cliwia tworzenie instancji danej klasy. Przydatne przy klasach bazowych dokumentacja</p> <pre><code>from abc import ABC\n\nclass\u00a0Zwierze(ABC):\n    def __init__(self,nazwa, wiek, waga):\n        self.nazwa=nazwa\n        self.wiek=wiek\n        self.waga=waga\n\n    @abstractmethod #tutaj wymuszamy implementacj\u0119 tej metody w klasach pochodnych\n    def nazwa_gatunku(self):\n        pass\n    def przedstaw_sie(self):\n        print(f\"Jestem {self.nazwa_gatunku()}. Mam na imi\u0119 {self.nazwa}, mam {self.wiek} lat oraz waz\u0119 {self.waga} kg.\")\n    def urodziny(self):\n        self.wiek += 1\n\nclass Slon(Zwierze):\n    def nazwa_gatunku(self):\n        return \"S\u0142o\u0144\"\n\nclass Lew(Zwierze):\n    def nazwa_gatunku(self):\n        return \"Lew\"\n</code></pre> <p>Niestety, mechanizm klas i metod abstrakcyjnych (klasa jest abstrakcyjna gdy ma co najmniej jedn\u0105 metod\u0119 abstrakcyjn\u0105) w j\u0119zyku Python jest wprowadzony troch\u0119 sztucznie. Klasa bazowa (abstrakcyjna) musi dziedziczy\u0107 po sztucznej klasie ABC, a metoda abstrakcyjna jest opatrzona dekoratorem <code>@abstractmethod</code>. Zwr\u00f3\u0107my uwag\u0119, \u017ce jedno i drugie zosta\u0142o zaimportowane. Jednak po tych czynno\u015bciach rzeczywi\u015bcie nie jeste\u015bmy w stanie stworzy\u0107 instancji klasy bazowej.</p> <p>Zwr\u00f3\u0107my uwag\u0119 na ten zaawansowany mechanizm: w klasie Zwierze tworzymy metod\u0119, zak\u0142adamy, co ta metoda b\u0119dzie zwraca\u0107, a nast\u0119pnie korzystamy z niej w innej metodzie, pomimo, \u017ce prawdziwa jej implementacja nast\u0105pi dopiero w klasie pochodnej. Dzi\u0119ki temu musimy napisa\u0107 mniej kodu w klasach pochodnych: musimy jedynie zaimplementowa\u0107 metod\u0119 nazwa_gatunku(), jednak nie musimy ju\u017c od zera pisa\u0107 kodu na przedstawienie zwierz\u0119ta. Jedynie w klasie Papuga, gdzie wprowadzili\u015bmy nowe pole, dopisujemy kod odpowiedzialny za wypisanie jego warto\u015bci.</p> <p>/TODO jak poradzi\u0107 sobie z tym?</p> <pre><code>class\u00a0Zwierze(ABC):\n    def __init__(self,nazwa, wiek, waga):\n        self.nazwa=nazwa\n        self.wiek=wiek\n        self.waga=waga\n\n    @abstractmethod #tutaj wymuszamy implementacj\u0119 tej metody w klasach pochodnych\n    def nazwa_gatunku(self):\n        pass\n\n    def urodziny(self):\n        self.wiek += 1\n\nclass Slon(Zwierze):\n    def __init__(self,nazwa, wiek, waga):\n        syper().__init__(self,nazwa, wiek, waga)\n    def nazwa_gatunku(self):\n        return self.nazwa\n\nclass Slon(Zwierze):\n    def __init__(self,nazwa, wiek, waga):\n        syper().__init__(self,nazwa, wiek, waga)\n\n    # def nazwa_gatunku(self): bez implementowania nazwy, bo przecie\u017c zwyk\u0142y sko\u0144 ma dobr\u0105\n    #     return self.nazwa\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#hermetyzacja","title":"Hermetyzacja","text":"<p>Polega na odcinanie u\u017cytkownikowi dost\u0119pu do p\u00f3l, aby operowa\u0142 tylko metodami klasy. Jednak oczywi\u015bcie u\u017cywanie metod, zw\u0142aszcza z przedrostkiem get, czy set, jest mniej wygodne. Dlatego nowoczesne j\u0119zyki programowania umo\u017cliwiaj\u0105 tworzenie tzw. w\u0142a\u015bciwo\u015bci (ang. property). Z punktu widzenia mo\u017cliwo\u015bci, s\u0105 to po prostu metody, jednak z punktu widzenia zapisu i wygody, przypominaj\u0105 one pola.</p> <pre><code>class Zwierze:\n    def __init__(self, wiek):\n        self.wiek = wiek\n\n    @property\n    def wiek(self):\n        return self.__wiek\n    @wiek.setter\n    def wiek(self, wiek):\n        if wiek &lt; 0:\n            self.__wiek = 0\n        elif wiek &gt; 200:\n            self.__wiek = 200\n        else:\n            self.__wiek = wiek\ndef main():\n    jakis_zwierz = Zwierze(202)\n    print(jakis_zwierz.wiek)\n    jakis_zwierz.wiek = -10\n    print(jakis_zwierz.wiek)\n    jakis_zwierz.wiek = 30\n    print(jakis_zwierz.wiek)\n\nif __name__ == \"__main__\":\n    main()\n## 200\n## 0\n## 30\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#metaklasy","title":"Metaklasy","text":"<p>Metaklasa (metaclass) jest typem danej klasy. Odpowiada on typowi samej klasy, nie za\u015b typowi dla jej instancji. link1, link2</p> <pre><code>class Cl:\n    pass\n\nc = Cl()\ntype(c)\n#&gt;&gt; &lt;class '__main__.Cl'&gt; \n#Klasa Cl jest typem dla instancji\n\ntype(Cl)\n#&gt;&gt; &lt;class 'type'&gt;\n# Klasa type jest typem dla klasy jest to tzw. Metaklasa\n\ntype(type)\n#&gt;&gt; &lt;class 'type'&gt;\n#type jest domy\u015bln\u0105 uniwersaln\u0105 metaklas\u0105\n</code></pre> <pre><code>flowchart BT\n\ntype\nCl\nc\n\nc --&gt; Cl\nCl --&gt; type\ntype --&gt; type</code></pre> <p>Metaklasa <code>type</code> mo\u017ce by\u0107 wykorzystana tak\u017ce do generowania definicji klas w spos\u00f3b dynamiczny u\u017cywaj\u0105c konstruktora: <code>type(&lt;name&gt;, &lt;bases&gt;, &lt;dct&gt;)</code></p> <ul> <li><code>name</code> -nazwa klasy</li> <li><code>bases</code> - krotka z klasami po kt\u00f3rych dziedziczymy</li> <li><code>dict</code> s\u0142ownik z polami klasy (czyli polami, funkcjami etc)</li> </ul> <pre><code>Foo = type('Foo', (), dict(length=100))\n</code></pre> <p>W\u0142asne metaklasy s\u0142u\u017c\u0105 przede wszystkim do modyfikowania tworzenia nowych klas, poniewa\u017c metoda <code>__new__</code> nie mo\u017ce by\u0107 zmieniana dla domy\u015blnej metaklasy. (opis tworzenia mo\u017cesz znale\u017a\u0107 w rodziale konstruktory).</p> <pre><code>class Meta(type):\n    def __new__(cls, name, bases, dct):\n        x = super().__new__(cls, name, bases, dct)\n        x.attr = 100\n        return x\n\nclass Foo(metaclass=Meta):\n    pass\n</code></pre> <p>Na og\u00f3\u0142 Metaklasy s\u0105 rzadko u\u017cywanym mechanizmem, poniewa\u017c wiele problem\u00f3w mo\u017ce by\u0107 rozwi\u0105zanych w prostszy spos\u00f3b. W wypadku potrzeby ustawienia pewnych element\u00f3w wystarcz\u0105 albo dekoratory dla klas, b\u0105d\u017a proste dziedziczenie.</p> <pre><code>def dekorator(cls):\n    class NewClass(cls):\n        attr = 100\n    return NewClass\n\n@dekorator\nclass Udekorowana:\n    pass\n\n#dziedziczenie\nclass Base:\n     attr = 100\n\nclass Pochodna(Base):\n    pass\n</code></pre> <p>////TODO wi\u0119cej przyk\u0142ad\u00f3w</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#dekoratory-klas","title":"Dekoratory klas","text":"<p>/// TODO</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#specjalne-typy-obiektow","title":"Specjalne typy obiekt\u00f3w","text":"<p>Jest lika szczeg\u00f3lnie u\u017cytecznych typ\u00f3w obiekt\u00f3w nad kt\u00f3rymi warto si\u0119 pochyli\u0107</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#enum","title":"Enum","text":"<p>Enum - Obiekty wyliczeniowe. Jest kilka rodzaj\u00f3w enum\u00f3w: <code>Enum</code>, <code>IntEnum</code>, <code>Flag</code> oraz <code>IntFlag</code>. link</p> <pre><code>from enum import Enum, auto\nclass Color(Enum):\n    RED = auto()\n    BLUE = auto()\n    GREEN = auto()\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#dataclass","title":"Dataclass","text":"<p>dataclass - specjalny dekorator dla obiektu dodaj\u0105cy automatycznie wiele dodatkowych udogodnie\u0144 pozwalaj\u0105cych unikn\u0105\u0107 mozolnego pisania logiki. link</p> <pre><code>from dataclasses import dataclass\n\n@dataclass\nclass InventoryItem:\n\"\"\"Class for keeping track of an item in inventory.\"\"\"\n    name: str\n    unit_price: float\n    quantity_on_hand: int = 0\n    tags: List[str] = = field(default_factory=list)\n\n    def total_cost(self) -&gt; float:\n        return self.unit_price * self.quantity_on_hand\n</code></pre> <p>Mo\u017cliwe jest tutaj podawanie spodziewanych typ\u00f3w oraz domy\u015blnych warto\u015bci (ale w wypadku typ\u00f3w mutowalnych nale\u017cy u\u017cy\u0107 fabryk )</p> <p>Taki obiekt mo\u017ce otrzyma\u0107 (w zale\u017cno\u015bci od paramter\u00f3w):</p> <ul> <li>automatycznie wygenerowany konstruktor:</li> </ul> <pre><code>def __init__(self, name: str, unit_price: float, quantity_on_hand: int = 0):\n    self.name = name\n    self.unit_price = unit_price\n    self.quantity_on_hand = quantity_on_hand\n</code></pre> <ul> <li>operatory por\u00f3wnania (<code>=</code>, <code>&lt;</code>,<code>&gt;</code> etc.)</li> <li>funkcj\u0119 haszuj\u0105c\u0105</li> <li>etc...</li> </ul> <p>W niekt\u00f3rych przypadkach warto rozwa\u017cy\u0107 wykorzystanie deskryptor\u00f3w jako dla p\u00f3l obiektu. link</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#inne","title":"Inne","text":""},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#wyjatki","title":"Wyj\u0105tki","text":"<pre><code>def silnia(n):\n    if n &lt; 0:\n    raise ValueError(\"silnia niezdefiniowana dla liczb ujemnych\")\n    wynik = 1\n    for i in range(1, n+1):\n        wynik *= i\n    return wynik\n\ntry:\n    print(\"Pozyskuj\u0119 zas\u00f3b\")\n    print(f\"Silnia z -5 to {silnia(-5)}\")\nexcept ValueError as e:\n    print(\"Och nie, co\u015b posz\u0142o nie tak! Szczeg\u00f3\u0142y poni\u017cej:\")\n    print(e)\nelse:\n    print(\"Oby\u0142o si\u0119 bez wyj\u0105tk\u00f3w\")\nfinally:\n    print(\"Zwalniam zas\u00f3b\")\n</code></pre> <p>Gdy spodziewamy si\u0119, \u017ce dany fragment kodu mo\u017ce rzuca\u0107 wyj\u0105tkami, opakowujemy go w konstrukcj\u0119 try-except. Kod, kt\u00f3ry chcemy wykona\u0107, a kt\u00f3ry mo\u017ce rzuci\u0107 wyj\u0105tek, zapisujemy po try:. Nast\u0119pnie, na dole tego kodu, piszemy except, po czym piszemy nazw\u0119 klasy wyj\u0105tku, a tak\u017ce as, po kt\u00f3rym m\u00f3wimy, jakim identyfikatorem (w jakiej zmiennej) chcemy si\u0119 odnosi\u0107 do instancji tego wyj\u0105tku. Najwa\u017cniejsza jest nazwa klasy, aby ustali\u0107, jaki typ b\u0142\u0119d\u00f3w \u0142apiemy. Konkretna instancja, w przyk\u0142adzie e, przydaje si\u0119, gdy np. chcemy wy\u015bwietli\u0107 komunikat b\u0142\u0119du na ekran. Teoretycznie instancja ma swoje pola, do kt\u00f3rych mo\u017cemy si\u0119 odnie\u015b\u0107, jednak rzadko si\u0119 z nich korzysta.</p> <p>List\u0119 wbudowanych klas wyj\u0105tk\u00f3w znajdziemy tutaj. Szczeg\u00f3lnej uwadze polecamy IndexError, gdy odwo\u0142ujemy si\u0119 do nieistniej\u0105cego elementu listy, FileNotFoundError, gdy plik nie istnieje, ZeroDivisionError dla dzielenia przez zero i wymieniony w przyk\u0142adzie ValueError, gdy argumenty funkcji s\u0105 b\u0142\u0119dne</p> <pre><code>try:\n    fun()\nexcept RuntimeError as err:\n    print(f\"Dostali\u015bmy wyj\u0105tek Runtime o tre\u015bci: {err.args[0]}\")\nexcept TypeError as err:\n    print(\"Niedozwolona operacja\")\nexcept (MojError, NameError):\n    print(\"Wyst\u0105pi\u0142 jeszcze inny error\")\nfinally:\n    print(\"Podczas wykonywania wyst\u0105pi\u0142 b\u0142\u0105d, zamykam apk\u0119\") # ten wykona si\u0119 po ka\u017cdym z wyj\u0105tk\u00f3w\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#with","title":"With","text":"<p>S\u0142owo kluczowe <code>with</code> pozwala na alternatywn\u0105 (czystsz\u0105 i czytelniejsz\u0105 obs\u0142ug\u0119 wyj\u0105tk\u00f3w)</p> <pre><code># file handling\n\n# 1) without using with statement\nfile = open('file', 'w')\nfile.write('hello world !')\nfile.close()\n\n# 2) without using with statement\nfile = open('file', 'w')\ntry:\n file.write('hello world')\nfinally:\n file.close()\n\n# using with statement\nwith open('file', 'w') as file:\n file.write('hello world !')\n</code></pre> <p>S\u0142owo <code>with</code> pozwala na automatyczne zwalnianie zasob\u00f3w (na przyk\u0142adzie powy\u017cej wida\u0107, \u017ce nie trzeba wo\u0142a\u0107 <code>close()</code>) przy wyj\u0105tku. Mechanizm ten korzysta z metod <code>__enter__()</code> i <code>__exit__()</code> dla u\u017cywanego obiektu.</p> <p>Mo\u017cemy wykorzysta\u0107 ten mechanizm we w\u0142asnych klasach</p> <pre><code># a simple file writer object\n\nclass Manager(object):\n def __init__(self, file_name):\n  self.file_name = file_name\n\n def __enter__(self):\n  self.file = open(self.file_name, 'w')\n  return self.file\n\n def __exit__(self):\n  self.file.close()\n\nwith Manager('file.txt') as xfile:\n xfile.write('hello world')\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#pliki","title":"Pliki","text":"<pre><code>\u015bcie\u017cka_do_pliku = r\"C:\\przykladowy.txt\"\n#r sprawia, \u017ce / nie jest znakiem specjalnym\nf = open(sciezka_do_pliku)\nprint(f.read())\nf.close()\n</code></pre> <p>Tutaj mamy wszystko: <code>open()</code> s\u0142u\u017cy otworzeniu po\u0142\u0105czenia do pliku. Jest to wspomniane wcze\u015bniej pozyskanie zasobu. Nast\u0119pnie nast\u0119puje u\u017cycie metody read(). Odczytuje ona ca\u0142\u0105 tre\u015b\u0107 pliku za jednym zamachu. Po pojedynczym odczytaniu, drugie wywo\u0142anie zwr\u00f3ci nam napis pusty. Na ko\u0144cu jest <code>close()</code>, zamkni\u0119cie po\u0142\u0105czenia do pliku. Jest to zwolnienie zasobu.</p> <p>Jednak istnieje jeszcze drugi zapis. U\u017cywamy s\u0142owa kluczowego <code>with</code>. Wtedy definiujemy zas\u00f3b, m\u00f3wimy co chcemy zrobi\u0107, (open/write) gdy go pozyskamy, a na ko\u0144cu, po wykonaniu ca\u0142ej klauzuli, zas\u00f3b jest zwolniony, niezale\u017cnie od tego, czy wydarzy\u0142a si\u0119 sytuacja wyj\u0105tkowa czy te\u017c nie</p> <pre><code>try:\n    with open(sciezka_do_pliku) as f:\n    print(f.read())\n    print(2/0)\nexcept ZeroDivisionError as e:\n    print(e)\n</code></pre> <pre><code>with open(sciezka_do_pliku, 'w') as f:\nf.write(\"Trzeci wiersz\")\nf.write(\"Czwarty wiersz\")#je\u017celi nie damy \\n to oba wiersze s\u0105 zapisane w tej samej linijce\n</code></pre> <pre><code>#Pozosta\u0142e przydatne metody\nf.readline()\nf.read()\nf.closed #informuje czy ju\u017c zamkni\u0119te\n</code></pre> <p>Flagi do otiwerania plik\u00f3w link:</p> <ul> <li><code>r</code> -read</li> <li><code>w</code> -write otwiera plik (i nadpisuje, je\u017celi tam ju\u017c co\u015b jest)</li> <li><code>a</code> -append (otwiera do zapisu i zaczyna na ko\u0144cu tzn dopisuje)</li> <li><code>x</code> -create tworzy okre\u015blony plik (zwraca error, je\u015bli plik ju\u017c istnieje)</li> </ul> <p>Poza tym mamy dodatkow\u0105 flag\u0119 do okre\u015blenia typu pliku:</p> <ul> <li><code>t</code> -Tekst (domy\u015blna)</li> <li><code>b</code> -Binarny (kiedy chcemy pracowa\u0107 np ze zdj\u0119ciami, np odczyt ot <code>rb</code>)</li> </ul>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#dane-o-plikach","title":"Dane o plikach","text":"<pre><code>import os\nprint(os.path.exists(sciezka_do_pliku))\n## True\nprint(os.listdir(\"C:\\folder\\\"))\n## ['Wyzwanie6', 'pomysly.txt', inne pliki...]\nprint(os.path.join(\"folder1\", \"folder2\", \"plik.txt\"))\n## folder1/folder2/plik.txt #funkcja ta wstawia \\ / zale\u017cnie od systemu\nos.remove(sciezka_do_pliku) #usuwamy plik\n</code></pre> <pre><code>import datetime\n(mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime) = os.stat(sciezka_do_pliku)\ndata_modyfikacji = datetime.datetime.fromtimestamp(mtime)\nprint(data_modyfikacji)\n## 2018-12-21 10:46:54\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#poprawianie-wydajnosci","title":"Poprawianie wydajno\u015bci","text":"<p>Najcz\u0119\u015bciej, aby poprawi\u0107 wydajno\u015b\u0107 aplikacji pisanych w pythonie trzeba si\u0119 skoncentrowa\u0107 na pe\u0142niejszym wykorzystaniu mocy procesora. Jest na to kilka sposob\u00f3w.</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#wielowatkowosc","title":"Wielow\u0105tkowo\u015b\u0107","text":"<p>Wielow\u0105tkowo\u015b\u0107 w pythonie jest nieco \u015bliskim tematem, poniewa\u017c w najpopularniejszej implementacji pythona (CPython) mamy do czynienie z mechanizmem GIL, kt\u00f3ry uniemo\u017cliwia prac\u0119 wielu w\u0105tkom jednocze\u015bnie. d\u0142u\u017cszy artyku\u0142. GIL jest zwalniany przy operacjach IO (odczyt/zapisa danych) oraz czasem przy okazji wykonywania oblicze\u0144 w bibliotekach b\u0119d\u0105cych bindingami do innych j\u0119zyk\u00f3w, jak np. numpy.  Z tego powodu domy\u015blnie w\u0105tki s\u0105 dobrym pomys\u0142em w wypadku operacji IO, czy te\u017c innych zadaniach, kt\u00f3re dzia\u0142aj\u0105c w tle nie konsumuj\u0105 czasu procesora. Je\u015bli za\u015b chcemy w naszej pracy wykorzysta\u0107 wiele rdzeni procesora r\u00f3wnocze\u015bnie to warto u\u017cy\u0107 biblioteki multiprocessing</p> <pre><code>import threading\n\ndef foo(argument):\n  print(\"Hello threading! with argument: \", argument)\n\nmy_thread = threading.Thread(target=foo, args = (\"slowo\"))\n\nmy_thread.start()\n#&gt;&gt; Hello threading with argument: slowo\n# kolejne uruchomienie za pomoc\u0105 start rzuci nam RuntimeError\n</code></pre> <p>Przy d\u0142u\u017cszym czasie wykonywania mo\u017cemy poczeka\u0107 na w\u0105tki za pomoc\u0105 join</p> <pre><code>my_thread.join()\n</code></pre> <p>lub</p> <pre><code>my_thread.join(timeout=10)\n</code></pre> <p>Innym przydatnym mechanizmem jest ThreadPoolExecutor s\u0142u\u017cy on do stworzenia puli proces\u00f3w, kt\u00f3rym mo\u017cemy da\u0107 do przetworzenia wybrane zadania.</p> <pre><code>from concurrent.futures import ThreadPoolExecutor\nfrom time import sleep\n\nvalues = [3,4,5,6]\n\ndef cube(x):\n    print(f'Cube of {x}:{x*x*x}')\n\n\nif __name__ == '__main__':\n    result =[]\n    with ThreadPoolExecutor(max_workers=5) as exe:\n        exe.submit(cube,2)\n\n        # Maps the method 'cube' with a list of values.\n        result = exe.map(cube,values)\n\n    for r in result:\n      print(r)\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#wieloprocesowosc","title":"Wieloprocesowo\u015b\u0107","text":"<p>Biblioteka multiprocessing opiera si\u0119 na obrabianiu danych w ramach r\u00f3\u017cnych proces\u00f3w, dzi\u0119ki czemu ka\u017cdy proces ma w\u0142asnego GIL-a, kt\u00f3ry nie wchodzi w drog\u0119 innym procesom. Poza tym jest w obs\u0142udze do\u015b\u0107 podobna do w\u0105tk\u00f3w. (niby s\u0105 takie metody w bibliotece jak <code>os.fork()</code>, ale s\u0105 one do\u015b\u0107 niskopoziomowe i niezbyt przeno\u015bne)</p> <pre><code>from multiprocessing import Process\nimport os\n\ndef work(id):\n    print(f'this is process {os.getpid()} called by {id}')\n\n\ndef main():\n    procesy = [Process(target=work, args=(number, )) for number in range(5)]\n    for proces in procesy:\n        proces.start()\n\n    while procesy:\n        procesy.pop().join()\n\n#&gt; this is process 10749 called by 0\n#&gt; this is process 10750 called by 1\n#&gt; this is process 10751 called by 2\n#&gt; this is process 10753 called by 4\n#&gt; this is process 10752 called by 3\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#komunikacja-miedzyprocesowa","title":"Komunikacja mi\u0119dzyprocesowa","text":"<p>W tym wypadku nie mamy ju\u017c wsp\u00f3lnej pami\u0119ci z kt\u00f3rej mo\u017cemy korzysta\u0107. Dlatego stworzone s\u0105 nast\u0119puj\u0105ce mechanizmy:</p> <ul> <li><code>multiprocessing.Queque</code> - prawie to samo co zwyk\u0142a kolejka (<code>queque.Queque</code>. Praktycznie nie ma r\u00f3\u017cnic w u\u017cyciu.</li> <li><code>multiprocessing.Pipe</code> - mechanizm nieco zbli\u017cony do gniazd sieciowych</li> <li><code>multiprocessing.sharedtypes</code> - pozwala stworzy\u0107 typy z C we wsp\u00f3lnej puli pami\u0119ci mi\u0119dzyprocesowej</li> </ul> <p>Do \u0142atwego zarz\u0105dzani pul\u0105 dost\u0119pnych proces\u00f3w mamy obiekt Pool. Pozwala ustali\u0107 liczb\u0119 proces\u00f3w, kt\u00f3re mo\u017cemy stworzy\u0107 jednocze\u015bnie. Dla wygody pracy i \u0142atwego prze\u0142\u0105czania si\u0119 mi\u0119dzy procesami i w\u0105tkami przy u\u017cyciu tego API mamy paczk\u0119 <code>multiprocessing.dummy.Pool</code> (te same interfejsy, tylko, \u017ce dzia\u0142a na w\u0105tkach).</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#pipe","title":"Pipe","text":"<p>Pipe - jest to w pe\u0142ni dupleksowe po\u0142\u0105czenie dzia\u0142aj\u0105ce podobnie do gniazd (patrz socket module ) z t\u0105 r\u00f3\u017cnic\u0105, \u017ce pozwala on na wysy\u0142anie nie tylko ci\u0105g\u00f3w bajt\u00f3w, lecz tak\u017ce serializowalne obiekty (patrz pickle ).</p> <p>Konstruktor tworzy dwa obiekty do odbioru i nadawania, kt\u00f3re mo\u017cemy przekaza\u0107 do naszego procesu.</p> <pre><code>from multiprocessing import Process, Pipe\n\ndef f(conn):\n    conn.send([42, None, 'hello'])\n    conn.close()\n\nif __name__ == '__main__':\n    parent_conn, child_conn = Pipe()\n    p = Process(target=f, args=(child_conn,))\n    p.start()\n    print(parent_conn.recv())   # prints \"[42, None, 'hello']\"\n    p.join()\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#sharedtypes","title":"Sharedtypes","text":"<p>Mamy tutaj klasy <code>Value</code> i <code>Array</code>, warto tu pami\u0119ta\u0107 o tym, \u017ce aby zabezpieczy\u0107 si\u0119 przed r\u00f3wnoczesnym pisaniem i czytaniem trzeba u\u017cywa\u0107 do\u0142\u0105czonych mutex\u00f3w (<code>Lock</code>, <code>RLock</code>, <code>Semaphore</code>).</p> <pre><code>class Point(Structure):\n    _fields_ = [('x', c_double), ('y', c_double)]\n\ndef modify(n, x, s, A):\n    n.value **= 2\n    x.value **= 2\n    s.value = s.value.upper()\n    for a in A:\n        a.x **= 2\n        a.y **= 2\n\nif __name__ == '__main__':\n    lock = Lock()\n\n    n = Value('i', 7)\n    x = Value(c_double, 1.0/3.0, lock=False)\n    s = Array('c', b'hello world', lock=lock)\n    A = Array(Point, [(1.875,-6.25), (-5.75,2.0), (2.375,9.5)], lock=lock)\n\n    p = Process(target=modify, args=(n, x, s, A))\n    p.start()\n    p.join()\n\n    print(n.value)\n    print(x.value)\n    print(s.value)\n    print([(a.x, a.y) for a in A])\n\n#&gt; 49\n#&gt; 0.1111111111111111\n#&gt; HELLO WORLD\n#&gt; [(3.515625, 39.0625), (33.0625, 4.0), (5.640625, 90.25)]\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#asynchronicznosc","title":"Asynchroniczno\u015b\u0107","text":"<p>Wykorzystuje ona korutyny (coroutines).</p> <p>Bibliotek\u0105 wykorzystywan\u0105 do asynchroniczno\u015bci jest asyncio. Tutoriale pythondocs, realpython.</p> <pre><code>&gt;&gt;&gt; import asyncio\n\n&gt;&gt;&gt; async def main():\n...     print('hello')\n...     await asyncio.sleep(1) #w tym momencie oddajemy kontrol\u0119 na sekund\u0119\n                               #w tym czasie CPU mo\u017ce popracowa\u0107 nad czym\u015b innym\n...     print('world')\n\n&gt;&gt;&gt; asyncio.run(main())\nhello\nworld\n</code></pre> <p>S\u0142owa kluczowe:</p> <ul> <li><code>async</code> i <code>async with</code> - s\u0142u\u017c\u0105 do oznaczania funkcji, kt\u00f3re s\u0105 korutynami</li> <li><code>await</code> - s\u0142u\u017cy do oznaczania momentu w kt\u00f3rym musimy poczeka\u0107 na wykonanie jakiej\u015b korutyny. W tym momencie przekazujemy kontrol\u0119 do p\u0119tli zdarze\u0144.</li> </ul> <pre><code>async def g():\n    # Pause here and come back to g() when f() is ready\n    r = await f()\n    return r\n</code></pre> <pre><code>async def main():\n    task1 = asyncio.create_task(\n        say_after(1, 'hello'))\n\n    task2 = asyncio.create_task(\n        say_after(2, 'world'))\n\n    print(f\"started at {time.strftime('%X')}\")\n\n    # Wait until both tasks are completed (should take\n    # around 2 seconds.)\n    await task1\n    await task2\n\n    print(f\"finished at {time.strftime('%X')}\")\n</code></pre> <p>TODO uko\u0144czy\u0107 ten rozdzia\u0142</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#rzeczy-na-ktore-nalezy-uwazac","title":"Rzeczy na kt\u00f3re nale\u017cy uwa\u017ca\u0107\u26a0\ufe0f","text":"<p>R\u00f3\u017cne cechy oraz w\u0142a\u015bciwo\u015bci pythona na kt\u00f3re trzeba uwa\u017ca\u0107 podczas pisania w pythonie zw\u0142aszcza, gdy nie jest on pierwszym j\u0119zykiem.</p>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#wszystko-jest-referencja","title":"Wszystko jest referencj\u0105","text":"<p>Warto pami\u0119ta\u0107, \u017ce w pythonie prawie wszystko jest referencj\u0105. Np przekazuj\u0105c co\u015b do funkcji przekazujemy tan naprawd\u0119 referencj\u0119 do tego obiektu, z tego powodu wewn\u0105trz funkcji nasz obiekt mo\u017ce ulec zmianie.</p> <p>Warto tutaj zapozna\u0107 si\u0119 z poj\u0119ciem <code>mutowalno\u015bci</code>. Obiekty niemutowalne to takie, kt\u00f3rych nowe instancje s\u0105 tworzone podczas zmiany warto\u015bci.</p> <pre><code>def fun(x):\n    print(id(x)) #id() wypisuje identyfikator danej zmiennej\n    x+=1\n    print(id(x))\n\nnum=32\nprint(id(num))\nfun(num)\n\n&gt;&gt; 9789984\n&gt;&gt; 9789984 # Wida\u0107 tutaj, \u017ce funkcja operuje na tej samej instancji liczby\n&gt;&gt; 9790016 # po zmianie warto\u015bci do identyfikatora x jest ju\u017c przypisany inny obiekt\n</code></pre> <p>Z tego powodu przekazywanie mutowalnej warto\u015bci do funkcji mo\u017cna traktowa\u0107 jako przekazanie kopii, a przekazanie niemutowalnej jako przekazanie referencji lub wska\u017anika (w j\u0119zyku C++).</p> Niemutowalne Mutowalne int lista float s\u0142ownik complex bytearray bool obiekty u\u017cytkownika string tuple range frozenset bytes <p>Przyk\u0142ady dzia\u0142ania:</p> <pre><code>def fun(num):\n    num = num+10\n    print(num)\n\nliczba = 1\nfun(liczba)\n# 10\nprint(liczba)\n#1\n</code></pre> <pre><code>class Numer:\n    def __init__(self,num):\n        self.num = num\n\nn = Numer(1)\n\ndef fun2(numer):\n    numer.num = numer.num+10\n    print(numer.num)\n\nprint(n.num)\n# 1\nfun2(n)\n# 11\nprint(n.num)\n# 11\n</code></pre> <p>Je\u015bli chcemy tutaj zapobiec takim problemom warto zastanowi\u0107 si\u0119 nad u\u017cyciem modu\u0142u <code>copy</code></p> <pre><code>import copy\n\nx = copy.copy(y)        # p\u0142ytka kopia\nx = copy.deepcopy(y)    # kopia g\u0142\u0119boka rekursywnie kopiuj\u0105ca wszystkie elementy naszej klasy\n</code></pre>"},{"location":"Python%F0%9F%90%8D/1_ogolne_notatki/#inicjalizowanie-zmiennych","title":"Inicjalizowanie zmiennych","text":"<p>Skoro wszystko jest referencj\u0105 to trzeba te\u017c o tym pami\u0119ta\u0107 przy podawaniu domy\u015blnych warto\u015bci dla funkcji. link</p> <pre><code>from dataclasses import dataclass\n\n@dataclass\nclass Node(object):\n    num: int\n    children: list\n    def __init__(self, num, children=[]):\n        self.num = num\n        self.children = children\n\n\nn1 = Node(1)\nn2 = Node(2)\nprint(n1)\n# Node(num=1, children=[])\nprint(n2)\n# Node(num=2, children=[])\n\nn1.children.append(3)\nprint(n1)\n#Node(num=1, children=[3])\nprint(n2)\n#Node(num=2, children=[3])\n</code></pre> <p>Dlatego te\u017c wielu uwa\u017ca, \u017ce lepiej da\u0107 None jako domy\u015bln\u0105 warto\u015b\u0107 i inicjalizowa\u0107 to dopiero, wewn\u0105trz konstruktora.</p> <p>//TODO lista: mixin, importowanie, biblioteka sys, instance methods // yield, operator := // from future import annotations (ewaluacja definicji z kodu, kt\u00f3re pojawiaj\u0105 si\u0119 p\u00f3\u017aniej)</p>"},{"location":"Python%F0%9F%90%8D/3_modu%C5%82y_i_paczki/","title":"Podzia\u0142 na Modu\u0142y i Paczki\ud83d\udce6","text":"<p>Modu\u0142 - plik pythonowy zawieraj\u0105cy definicje i wyra\u017cenia, nazwa pliku jest nazw\u0105 modu\u0142u z dodanym rozszerzeniem <code>.py</code> (<code>nazwa_modu\u0142u.py</code>). Wewn\u0105trz modu\u0142u ta nazwa jest dost\u0119pna jako zmienna globalna <code>__name__</code>. Modu\u0142 jest jednym ze sposob\u00f3w organizacji kodu w pythonie, na og\u00f3\u0142 w jednym module trzyma si\u0119 blisko powi\u0105zane ze sob\u0105 definicje funkcji, klas etc. Je\u015bli chodzi tu o grupowanie to warto zadba\u0107 tutaj o z\u0142oty \u015brodek (pliki nie musz\u0105 by\u0107 du\u017ce, ani ma\u0142e, musz\u0105 po prostu sp\u00f3jnie tworzy\u0107 logiczn\u0105 ca\u0142o\u015b\u0107).</p> <p>Paczka - spos\u00f3b na ustrukturyzowanie modu\u0142\u00f3w ( pozwala to \u0142atwo ustrukturyzowa\u0107 projekt)</p>"},{"location":"Python%F0%9F%90%8D/3_modu%C5%82y_i_paczki/#zarzadzanie-paczkami","title":"Zarz\u0105dzanie paczkami","text":"<p>Do instalacji mo\u017cna u\u017cywa\u0107 samodzielnych aplikacji pip (i pip3). (Ale w sytuacjach bardziej z\u0142o\u017conych projekt\u00f3w warto rozwa\u017cy\u0107 u\u017cycie innych menad\u017cer\u00f3w pakiet\u00f3w jak np UV)</p> <pre><code>pip3 install numpy\n</code></pre> <p>Mo\u017cna te\u017c wymusi\u0107 od danej instancji pythona, aby zainstalowa\u0142 dla siebie dan\u0105 paczk\u0119 (u\u017cyteczne gdy mamy wiele wersji).</p> <pre><code>python3 -m pip install numpy\n</code></pre> <p>PIP mo\u017ce te\u017c u\u017cywa\u0107 plik\u00f3w zawieraj\u0105cych opisy paczek potrzebnych do zainstalowania <code>requirements.txt</code></p> <pre><code>python3 -m pip install -r requirements.txt\n</code></pre> <p>gdzie plik moze wygl\u0105da\u0107 tak</p> <pre><code># zsyk\u0142e paczki\npytest\npytest-cov\n\n# Podawanie konkretnych paczek po sieci\nhttp://my.package.repo/simple\ngit+ssh://git@git.example.com/MyProject\n</code></pre>"},{"location":"Python%F0%9F%90%8D/3_modu%C5%82y_i_paczki/#tworzenie-i-uzywanie-wasnych-paczek","title":"Tworzenie i u\u017cywanie w\u0142asnych paczek","text":""},{"location":"Python%F0%9F%90%8D/3_modu%C5%82y_i_paczki/#struktura-projektu-pythonowego","title":"Struktura projektu pythonowego","text":"<p>Przyk\u0142adowe materia\u0142y od astral - Project structure and files oraz Guide to Python - Structuring Your Project</p> <pre><code>.\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 requirements-dev.txt\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 package\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u2514\u2500\u2500 main.py\n\u2514\u2500\u2500 tests\n    \u2514\u2500\u2500 test_classes.py\n</code></pre> <p>Opisy poszczeg\u00f3lnych plik\u00f3w:</p> <ul> <li><code>requirements.txt</code> - (teraz ju\u017c nieco outdated) plik zawieraj\u0105cy list\u0119 zale\u017cno\u015bci projektu (instalowanych np. pip-em <code>pip install -r requirements.txt</code>)</li> <li><code>pyproject.toml</code> - oficjalnie zalecany plik konfiguracyjny projektu pythonowego. Zawiera on informacje o projekcie, konfiguracje dla narz\u0119dzi potrzebnych do jego budowy, testowania, formatowania kodu etc. Warto w nim umieszcza\u0107 tak\u017ce requirementsy.</li> </ul> <p>Przyk\u0142adowy toml <pre><code>[project]\nname = \"myproj_pythonowy\"\nversion = \"0.1.0\"\nauthors = [{name = \"Jan Kowalski\", email = \"jkowalski@email.pl\"}]\nreadme = \"README.md\"\nrequires-python = \"&gt;=3.10\"\ndescription = \"Mega fajny projekt\"\ndependencies = [\n\"pyyaml\",\n\"jsonschema\",\n\"django &gt; 2\"\n]\n\n[project.optional-dependencies]\ngui = [\"PyQt5\"]\ncli = [\n\"rich\",\n\"click\",\n]\ndev = [\n# tests\n\"pytest\",\n\"pytest-cov\",\n# code-quality\n\"mypy\",\n\"ruff\",\n]\n\n[project.urls]\n\"Source\" = https://strona.com\n\n[project.scripts]\nmyproj = \"myproj_pythonowy.__main__:main\"\n</code></pre></p> <p>Paczk\u0119 instaluje si\u0119 wtedy komend\u0105: <code>pip install .</code>.  Paczk\u0119 + zale\u017cno\u015bci deweloperskie instalujemy tutaj komend\u0105 <code>pip install .[dev]</code>.</p>"},{"location":"Python%F0%9F%90%8D/3_modu%C5%82y_i_paczki/#struktura-biblioteki","title":"Struktura biblioteki","text":"<p>Przyk\u0142adowa struktura paczki</p> <pre><code>sound/                          Top-level package\n      __init__.py               Initialize the sound package\n      formats/                  Subpackage for file format conversions\n              __init__.py\n              wavread.py\n              wavwrite.py\n              aiffread.py\n              aiffwrite.py\n              auread.py\n              auwrite.py\n              ...\n      effects/                  Subpackage for sound effects\n              __init__.py\n              echo.py\n              surround.py\n              reverse.py\n              ...\n      filters/                  Subpackage for filters\n              __init__.py\n              equalizer.py\n              vocoder.py\n              karaoke.py\n              ...\n</code></pre> <p>Aby wykorzysta\u0107 zawarto\u015b\u0107 pliku <code>karaoke.py</code> nale\u017cy zaimportowa\u0107:</p> <pre><code>import sound.filters.karaoke\n</code></pre>"},{"location":"Python%F0%9F%90%8D/3_modu%C5%82y_i_paczki/#wewnetrzne-linkowanie","title":"Wewn\u0119trzne linkowanie","text":"<p>Przy linkowaniu pomi\u0119dzy poszczeg\u00f3lnymi elementami paczki zaleca si\u0119 u\u017cywanie poni\u017cszej konwencji:</p> <pre><code>#zak\u0142adamy, \u017ce jeste\u015bmy w pliku filters/karaoke.py\nfrom . import echo\nfrom .. import formats\nfrom ..filters import equalizer\n</code></pre>"},{"location":"Python%F0%9F%90%8D/3_modu%C5%82y_i_paczki/#wczytywanie-paczki-z-danego-folderu","title":"Wczytywanie paczki z danego folderu","text":"<p>Kiedy nasza paczka jest w niestandardowym folderze mo\u017cna j\u0105 wczyta\u0107 tak</p> <pre><code>#tu zak\u0142adam, \u017ce paczka jest umieszczona w jakim\u015b folderze umieszczonym gdzie\u015b wzgl\u0119dem pliku ze skryptem, ale module_path mo\u017ce by\u0107 dowolne\nmodule_path = os.path.dirname(os.path.realpath(__file__)) + \"/..\"\nsys.path.append(module_path)\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/","title":"R\u00f3\u017cne u\u017cyteczne biblioteki i narz\u0119dzia","text":""},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#rozne-linki","title":"R\u00f3\u017cne linki","text":"<ul> <li>Stronka agreguj\u0105ca w jedny miejscu najpotrzebniejsze API z bibliotek pythonowych: https://overapi.com/python</li> <li>Ksi\u0105\u017cka Zanurkuj w Pythonie \ud83d\udcd6</li> <li>Podstawowy tutorial ze strony learnpython</li> </ul>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#parsowanie-argumentow","title":"Parsowanie argument\u00f3w","text":"<p>Do parsowania argument\u00f3w na og\u00f3\u0142 korzysta si\u0119 z biblioteki argparse.</p> <p>Przyk\u0142adowy kod</p> <pre><code>parser = argparse.ArgumentParser(\n                    prog='ProgramName',\n                    description='What the program does',\n                    epilog='Text at the bottom of help')\nparser.add_argument('filename')           # positional argument\nparser.add_argument('-c', '--count')      # option that takes a value\nparser.add_argument('-v', '--verbose',\n                    action='store_true')  # on/off flag - czyli przy podaniu -v args.verbose to true\nargs = parser.parse_args() #parsowanie argument\u00f3w,aby uzyska\u0107 obiekt z argumentami\n</code></pre> <p>Najwa\u017cniejsz\u0105 metod\u0105 klasy ArgumentParser jest <code>add_argument()</code>. Mo\u017ce przyjmowa\u0107 on r\u00f3\u017cne argumenty. Najwa\u017cniejsze wydaj\u0105 si\u0119:</p> <ul> <li><code>help</code> - opis argumentu</li> <li><code>type</code> - typ argumentu do jakiego warto\u015b\u0107 ma by\u0107 przekonwertowana link. mo\u017cna tutaj poda\u0107 typ (<code>int</code>, <code>str</code>), <code>argparse.FileType</code> (aby sprawdzi\u0107 poprawno\u015b\u0107 \u015bcie\u017cki do pliku), b\u0105d\u017a funkcja koonwertuj\u0105ca     <pre><code># kiedy chcemy sprawdzi\u0107 czy plik istnieje, ale chcemy otrzyma\u0107 stringa\ndef _readable_file_string(path):\n    reader = argparse.FileType(\"r\")\n    reader(path)  # if not exists, then raises Exception\n    return path\n\nparser.add_argument('input_file', type=argparse.FileType('w', encoding='latin-1'))\nparser.add_argument('file_path', type=_readable_file_string)\n</code></pre></li> <li><code>default</code></li> <li><code>required</code></li> <li><code>choices</code></li> <li><code>nargs</code> - ile razy mo\u017ce si\u0119 pojawi\u0107 ten argument</li> </ul>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#logowanie-logging","title":"Logowanie (logging)","text":"<p>Wbudowane biblioteka logging w Pythonie dostarcza gotowych mechanizm\u00f3w do generowania, formatowania oraz zarz\u0105dzania logami systemowymi. Oficjalny tutorial</p> <p>Minimalny przyk\u0142ad:</p> <pre><code>import logging\n\nlogging.debug(\"This is a debug\")\nlogging.info(\"This is an info\")\nlogging.warning(\"This is a warning\")\nlogging.error(\"This is an error\")\nlogging.critical(\"This is a critical message\")\n#&gt; WARNING:root:This is a warning\n#&gt; ERROR:root:This is an error\n#&gt; CRITICAL:root:This is a critical message\n</code></pre> <p>Dla takiego sktyptu otrzymany tylko ostatnie 3 linijki, poniewa\u017c domy\u015blny poziom log\u00f3w jest za niski.</p> <p>Do odpowiedniego ustawienia tego parametru mo\u017cna u\u017cy\u0107 funkcji logging.basicConfig</p> <pre><code>logging.basicConfig(level=logging.DEBUG)\nlogging.debug('To ju\u017c si\u0119 wy\u015bwietli')\n</code></pre> <p>Za pomoc\u0105 tej funkcji mo\u017cemy okre\u015bli\u0107 inne podstawowe parametry jak format, kodowanie, styl, format daty, plik z logami etc.</p>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#formatowanie-logow","title":"Formatowanie log\u00f3w","text":"<p>Format log\u00f3w mo\u017cna zdefiniowa\u0107 za pomoc\u0105 jednego stringa odpowiadaj\u0105cego okre\u015blonej sk\u0142adni.</p> <pre><code>import logging\nlogging.basicConfig(format='%(asctime)s %(message)s')\nlogging.warning('is when this event was logged.')\n# 2019-12-12 11:51:42,692 is when this event was logged.\n</code></pre> <p>W definicjach log\u00f3w odwo\u0142ujemy si\u0119 do atrybut\u00f3w klasy LogRecord.</p> <p>Z pomoc\u0105 <code>basicConfig</code> mo\u017cemy te\u017c \u0142atwo okre\u015bli\u0107 u\u017cywany format czasu (\u015bci\u0105gawka) (milisekundy lepiej okre\u015bla\u0107 w ramach formatu z LogRecord-a)</p> <pre><code>import logging\nlogging.basicConfig(format='%(asctime)s%(msecs)d %(message)s', datefmt='%m/%d/%Y %I:%M:%S.')\nlogging.warning('is when this event was logged.')\n#&gt; 12/12/2010 11:46:36.423 is when this event was logged.\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#poziomy-logowania","title":"Poziomy logowania","text":"<p>Ka\u017cdy poziom logowania ma w\u0142asn\u0105 przyporz\u0105dkowan\u0105 warto\u015b\u0107 liczbow\u0105 link.</p> <p>Im wy\u017csza tym wa\u017cniejszy log (Debug to 10, CRITICAL to 50). Dzi\u0119ki temu mo\u017cliwe jest dodawanie w\u0142asnych poziom\u00f3w logowania. Mo\u017cliwe jest tutaj wykorzystanie funkcji addLevelName.</p> <pre><code>    #tutaj nadpisuj\u0119 aby mie\u0107 fajniejsz\u0105 nazw\u0119\n    logging.addLevelName(logging.DEBUG, \"\ud83d\udc1eDEBUG\")\n    # a tutaj dodaj\u0119 nowy poziom\n    logging.addLevelName(15, \"VERBOSE\")\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#zaawansowane-logowanie","title":"Zaawansowane logowanie","text":"<p>W bardziej z\u0142o\u017conych sytuacjach mo\u017cemy mie\u0107 wiele oddzielnych logger\u00f3w (np. dla paczek) z czego ka\u017cdy mo\u017ce mie\u0107 wiele handler\u00f3w (dla stdout, plik\u00f3w, dla grafany etc.). </p> <p>Oficjalna dokumentacja Pythonowa:  Logging HOWTO</p> <p>Tutaj sytuacja zaczyna si\u0119 robi\u0107 nieco bardziej skomplikowana. logging and loggers</p> <p>Aby zapozna\u0107 si\u0119 z tymi zagadnieniami polecam wideo Modern Python logging.</p>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#manipulacja-tekstem","title":"Manipulacja tekstem","text":""},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#stringi-wielolinijkowe","title":"Stringi wielolinijkowe","text":"<pre><code>slowa=\"\"\" linia1\nlinia2\nlinia3\n\"\"\"\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#rozbijanie-stringow-po-sowach","title":"Rozbijanie string\u00f3w po s\u0142owach","text":"<p><code>string.split(separator, maxsplit)</code> - domy\u015blny separator to jakikolwiek whitespace, maxsplit- domy\u015blnie -1 (opisuje na ile fragment\u00f3w maksymalnie mo\u017cemy dzieli\u0107 stringa)</p> <pre><code>slowo=\"slowo1 slowo2 sl3\"\nslowo.split()\n&gt;&gt;&gt;['slowo1', 'slowo2', 'sl3']\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#formatowanie-tekstu","title":"Formatowanie tekstu","text":"<p>Formatowanie tekstu nie tylko w kontek\u015bcie funkcji <code>print()</code></p>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#strformat","title":"str.format()","text":"<pre><code>def hello(name):\n    print(\"Hello {name}\".format(name=name))\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#f-stringi-python-36","title":"f-stringi (Python 3.6+)","text":"<pre><code>def hello(name):\n    print(f\"Hello {name}\")\n</code></pre> <p>Wg dokumentacji u\u017cywaj\u0105c tej metody mo\u017cemy wprowadza\u0107 dodatkowe zmiany w tek\u015bcie</p> <pre><code>width = 10\nprecision = 4\nvalue = decimal.Decimal('12.34567')\nf'result: {value:{width}.{precision}}'\n#12.35\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#pobieranie-sciezkifolderu-obecnego-skryptu","title":"Pobieranie \u015bcie\u017cki/folderu obecnego skryptu","text":"<pre><code>import os\n\nos.path.abspath('') # obecny folder\n\n__file__ # zmiennna zawieraj\u0105ca obecnie uruchamiany plik (nie zawsze dzia\u0142a)\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#uzywanie-kodu-z-c","title":"U\u017cywanie kodu z C++","text":"<p>boost lub ctypes Przyk\u0142ad dla boosta: link</p>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#przetwarzanie-strumieniowe","title":"Przetwarzanie strumieniowe","text":""},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#czas","title":"Czas","text":"<pre><code>import time\ntime.sleep(60)#minuta\n\nnow = time.time() #godzina jako epoch w sekundach\n# 1715610262.8038244 \n</code></pre> <p>Do wygodniejszej obs\u0142ugi czasu i jego ptintowania mo\u017cna u\u017cy\u0107 biblioteki <code>datetime</code>. Mo\u017cemy tutaj zdefiniowa\u0107 tak\u017ce w\u0142asny format printowania daty. link</p> <pre><code>import datetime\ndatetime.datetime.now()\n# datetime.datetime(2024, 5, 14, 19, 14, 0, 297824)\n\ndatetime.datetime.fromtimestamp(1715610262.8038244)\n# datetime.datetime(2024, 5, 13, 16, 24, 22, 803824)\n\nx = datetime.datetime(2018, 6, 1)\n\nprint(x.strftime(\"%B\")) \n# June\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#uruchamianie-innych-aplikacji","title":"Uruchamianie innych aplikacji","text":"<p>Do wygodnego uruchamiania innych aplikacji w terminalu mo\u017cna u\u017cy\u0107 biblioteki subprocess z metod\u0105 check_output.</p> <p>Przyk\u0142adowy snippet:</p> <pre><code>result = subprocess.check_output(\n        f\"pwd\", shell=True\n    ).decode()\nprint(result)\n#&gt;/home/admin/examples\n</code></pre> <p>Innym, og\u00f3lniejszym wariantem jest uruchomienie `subprocess.run(), kt\u00f3ry zwraca obiekt CompletedProcess</p> <pre><code>subprocess.run([\"ls\", \"-l\"])  #printuje komend\u0119 na stdout\n#&gt;total 12\n#&gt;-rw-rw-rw-   1 codespace root  199 Mar  5 13:11 README.md\n#&gt;drwxrwxrwx+ 10 codespace root 4096 Mar 15 14:44 docs\n#&gt;-rw-rw-rw-   1 codespace root 1085 Apr  2 12:30 mkdocs.yml\n#&gt;CompletedProcess(args=['ls', '-l'], returncode=0)\nresult=subprocess.run([\"ls\"],capture_output=True)\nprint(result.stdout.decode())\n</code></pre> <p>Przydatne argumenty:</p> <ul> <li><code>shell: bool = False</code> - dzi\u0119ki temu mo\u017cemy podawa\u0107 komendy jako jeden d\u0142u\u017cszy string, a nie list\u0119 (<code>ls --all</code>)</li> <li><code>check: bool = False</code> - kiedy komenda zwr\u00f3ci status inny ni\u017c 0, metoda rzuca wyj\u0105tek: <code>CalledProcessError</code></li> <li><code>capture_output: bool = False</code> - STDOUT jest przechwytywany i umieszczany w zmiennej <code>CompletedProcess</code></li> </ul>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#aplikacje-webowe","title":"Aplikacje webowe","text":""},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#wykonywanie-zapytan-w-htmlu-requests","title":"Wykonywanie zapyta\u0144 w HTMLu - requests","text":"<p>Najprostsz\u0105 i najwygodniejsz\u0105 bibliotek\u0105 jest requests Mo\u017ce ona s\u0142u\u017cy\u0107 zar\u00f3wno do pobierania tre\u015bci z neta jak i do web scrappingu.</p> <pre><code>import requests\n\ndata = {\"name\": \"Marian\"}\nresponse = requests.get(\"http://127.0.0.1:5000/\", json=data)\nr.text\n# { \"id\": \"3123424\", ...\nr.json() # zwr\u00f3ci ospowied\u017a jako s\u0142ownik\nr.status\n# 200\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#proste-hostowanie-folderu","title":"Proste hostowanie folderu","text":"<p>KIedy chcesz w prosty spos\u00f3b udost\u0119pni\u0107 dany folder w sieci.</p> <pre><code>python -m http.server #to udost\u0119pni pod adresem 8000\n\n#mo\u017cna te\u017c samodzielni wybra\u0107 port\npython -m http.server 8888\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#django","title":"Django","text":"<p>jest to do\u015b\u0107 du\u017ca zabawka link</p>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#flask","title":"Flask","text":"<p>Jeden z mikroframework\u00f3w, pozwala do\u015b\u0107 szybko napisa\u0107 jak\u0105\u015b aplikacj\u0119 REST-ow\u0105.</p> <pre><code>from flask import Flask, request, response\n\napp = Flask(__name__)\n\n@app.route('/', methods=[\"GET\", \"POST\"])\ndef hello_world():\n    if request.method == \"GET\":\n        return \"Hello\"\n\n    if request.method == \"POST\":\n        return \"you posted something\"\n\nif __name__ == '__main__':\n    app.run()\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#bottle","title":"Bottle","text":"<p>Mniejsza i du\u017co prostsza biblioteka (mie\u015bci si\u0119 w jednym pliku). Podobna do flaska.</p> <pre><code>from bottle import route,run,template\n\n@route('/hello/&lt;name&gt;') #@route to dekorator\ndef index(name):\n    return template('&lt;b&gt;Hello {{name}} &lt;br/&gt;?',name=name) #otrzymamy prostego html-a\n\n#index = route('//hello/&lt;name&gt;')(index) #ten sam wynik, w sytuacji bez @route\n\n\nrun(host='0.0.0.0',port=8080) #nasza strona b\u0119dzie dost\u0119pna tutaj\n</code></pre> <p>albo mo\u017cemy te\u017c chcie\u0107 wygenerowa\u0107 jsona</p> <pre><code>def index(name):\n    return {\"klucz\":\"wartosc\",\"a_tu\":[\"bedzie\",\"lista\"]}\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#aplikacje-z-gui","title":"Aplikacje z GUI","text":"<p>TODO rozpisa\u0107 si\u0119 troch\u0119</p> <p>https://wiki.python.org/moin/GuiProgramming</p>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#zapisywanie","title":"Zapisywanie","text":""},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#pickle-zapisywanie-zmiennych","title":"Pickle - zapisywanie zmiennych","text":"<p>Pythonowa biblioteka Pickle pozwala na zapisywanie (i odczytywanie) danych i obiekt\u00f3w w pythonie w formie binarnej poprzez serializacj\u0119. Serializacja polega na przekszta\u0142ceniu obiektu w posta\u0107, kt\u00f3ra mo\u017ce by\u0107 zapisana do pliku lub przes\u0142ana przez sie\u0107.</p> <pre><code>import pickle\n\n# tworzenie obiektu do serializacji\ndata = {'name': 'John Smith', 'age': 30, 'country': 'USA'}\n\nwith open('data.pkl', 'wb') as f:\n    # serializacja obiektu i zapis do pliku\n    pickle.dump(data, f)\n\n# otwieranie pliku z serializowanym obiektem\nwith open('data.pkl', 'rb') as f:\n    # deserializacja obiektu z pliku\n    data2 = pickle.load(f)\n\nprint(data2)  # {'name': 'John Smith', 'age': 30, 'country': 'USA'}\n</code></pre>"},{"location":"Python%F0%9F%90%8D/4_biblioteki_i_narz%C4%99dzia/#dill-zapisywanie-caej-sesji-w-pythonie","title":"Dill -zapisywanie ca\u0142ej sesji w pythonie","text":"<p>Rozszerzeniem do pickla jest dill, pozwala on na zapisywanie za\u0142ej sesji w pythonie do pliku, kt\u00f3ry mo\u017cna potem przywr\u00f3ci\u0107.</p> <p>//todo przyk\u0142ad</p>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/","title":"Narz\u0119dzia deweloperskie","text":""},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#utrzymanie-jakosci-kodu","title":"Utrzymanie jako\u015bci kodu","text":""},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#guideliney","title":"Guideline'y","text":"<p>Istnieje kilka znanych i powszechnie stosowanych guideline'\u00f3w, kt\u00f3re warto zna\u0107 i stosowa\u0107 w pythonie:</p> <ul> <li>PEP 8</li> <li>Google</li> <li>docs</li> </ul>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#autoformatowanie-kodu","title":"Autoformatowanie kodu","text":"<p>Do tego celu mo\u017cna u\u017cy\u0107 narz\u0119dzi takich jak:</p> <ul> <li>black</li> <li>autopep8</li> <li>yapf</li> <li>ruff format</li> </ul>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#lintowanie-kodu","title":"Lintowanie kodu","text":"<p>Lintowanie kodu to sprawdzanie go pod k\u0105tem problem\u00f3w z samym kodem oraz jego zgodno\u015bci z wybranymi guideline'ami. Mo\u017ce to obejmowa\u0107 takie problemy jak np. nieu\u017cywane zmienne, niezgodno\u015b\u0107 z PEP8, b\u0142\u0119dy sk\u0142adniowe, itp.</p> <p>Do tego celu mo\u017cna u\u017cy\u0107 narz\u0119dzi takich jak:</p> <ul> <li>pylint</li> <li>flake8</li> <li>ruff</li> </ul> <p>W kontek\u015bcie typowania warto tak\u017ce zwr\u00f3ci\u0107 uwag\u0119 na zagadnienia zwi\u0105zane z typowaniem i adnotacjami typ\u00f3w (link do adnotacji). O ile sam python traktuje adnotacje jedynie jako sugestie i komentarze to mo\u017cliwe jest sprawdzenie ich poprawnosci z pomoc\u0105 type checker\u00f3w takich jak:</p> <ul> <li>mypy</li> <li>pyright</li> <li>pyre</li> </ul>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#venv","title":"VENV","text":"<p>Venv, czyli wirtualne \u015brodowisko pythona, to narz\u0119dzie, kt\u00f3re pozwala na stworzenie odizolowanego \u015brodowiska pythonowego z w\u0142asnymi pakietami, aby nie za\u015bmieca\u0107 hosta.</p> <p>Jest to bardzo potrzebne gdy nie chcemy przypadkiem namiesza\u0107 w naszych ju\u017c zainstalowanych paczkach pythonowych, a chcemy odpali\u0107 jaki\u015b projekt wymagaj\u0105cy konkretnych wersji danych pakiet\u00f3w. Dokumentacja</p> <p>Instalacja dla debian\u00f3w: <code>sudo apt install python3-venv</code>.</p> <p>Tworzenie nowego venva</p> <pre><code>python3 -m venv /path/to/new/virtual/environment\n</code></pre> <p>Aby aktywowa\u0107 venva (czyli odpali\u0107 w pythona korzystaj\u0105cego z pakiet\u00f3w w tym venvie) trzeba u\u017cy\u0107 komendy</p> Shell Command to activate virtual environment bash/zsh <code>$ source &lt;venv&gt;/bin/activate</code> fish <code>$ source &lt;venv&gt;/bin/activate.fish csh/tcsh $ source &lt;venv&gt;/bin/activate.csh</code> PowerShell <code>$ &lt;venv&gt;/bin/Activate.ps1</code> (Windows)cmd.exe <code>C:\\&gt; &lt;venv&gt;\\Scripts\\activate.bat</code> (Windows)PowerShell <code>PS C:\\&gt; &lt;venv&gt;\\Scripts\\Activate.ps1</code>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#uv-alternatywa-dla-pipa-i-venva","title":"UV - alternatywa dla PIPa i Venva","text":"<p>No tak jak w tytule https://docs.astral.sh/uv/</p> <p>UV to RUST-owa alternatywa dla pipa, pyenva, virtualenva. (jest te\u017c DU\u017bO szybszy)</p> <p>Automatyczne instalowanie wybranych wersji pythona</p> <pre><code>uv python install 3.10 3.11 3.12\n</code></pre> <p>instalacja zamiast pipa</p> <pre><code>uv pip install\n</code></pre>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#uruchamianie-skryptu-w-trybie-interaktywnym","title":"Uruchamianie skryptu w trybie interaktywnym","text":"<p>Z poziomu basha:</p> <pre><code>python -i ./skrypt.py\n</code></pre> <p>Z poziomu pythona:</p> <pre><code>exec(open(\"./first.py\").read())\n</code></pre> <p>Dzi\u0119ki temu po zako\u0144czeniu wykonywania nie wyjdziemy ze skryptu i b\u0119dziemy mogli kontynuowa\u0107 jego prac\u0119 u\u017cywaj\u0105c ju\u017c zaimportowanych przez niego bibliotek oraz zmiennych, kt\u00f3re utworzy\u0142.</p>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#uzycie-moduow-z-cc","title":"U\u017cycie modu\u0142\u00f3w z C/C++","text":"<p>Do tego warto u\u017cy\u0107 bibliotek boosta, popularny jest te\u017c pybind11 .</p> <p>Przyk\u0142adowy Github Gist zawieraj\u0105cy prosty projekt obrazuj\u0105cy dzia\u0142anie: TUTAJ</p> <p>Przy pracy z bibliotekami tego typu mog\u0105 pojawi\u0107 sie problemy min z autopodpowiadaniem kodu.  W takiej sytuacji mo\u017cna np wygenerowa\u0107 sobie stubsy link stack (czasami mo\u017ce to dzia\u0142a\u0107 bez takich obej\u015b\u0107)</p>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#implementacje-pythonowe","title":"Implementacje Pythonowe","text":"<p>Warto wiedzie\u0107, \u017ce jest wiele implementacji pythona. Najbardziej znan\u0105 jest CPython napisany w C. Ze wzgl\u0119du na wydajno\u015b\u0107 warto si\u0119 zapozna\u0107 z:</p> <ul> <li>PyPy - kompilator typu JIT</li> <li>Nuitka link - o ile dobrze rozumiem to taki jakby kompilator pythona</li> </ul> <p>Ze wzgl\u0119du na kompatybilno\u015b\u0107:</p> <ul> <li>Jython (java)</li> <li>IronPython (C#)</li> </ul> <p>Pe\u0142na lista implementacji link</p>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#dokumentowanie","title":"Dokumentowanie","text":""},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#diagramy-klas","title":"Diagramy klas","text":"<p>Do tego mo\u017cna u\u017cy\u0107:</p> <ul> <li>pyreverse - chyba najprostsze (do pobrania z pipa)</li> </ul> <pre><code>pyreverse -o png moje_klasy.py\n</code></pre>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#debugowanie","title":"Debugowanie","text":""},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#pdb","title":"pdb","text":"<pre><code>import pdb\npdb.set_trace() #w tej linii skrypt si\u0119 zatrzyma i b\u0119dzie mo\u017cna si\u0119 rozejrze\u0107\n# (Pdb)\n</code></pre> <p>zapytania w trybie debuggera :</p> <ul> <li>w - where (na stosie)</li> <li>u -up</li> <li>d - down</li> <li>c/continue - continue</li> <li>args - wy\u015bwietla wszystkie argumenty, jakie dana funkcja otrzyma\u0142a (ta w kt\u00f3rej obecnie jeste\u015bmy)   Poza tym reszta rzeczy odpowiada zwyk\u0142emu pisaniu w pythonie, mo\u017cemy zmienia\u0107 zmienne, printowa\u0107 je, uruchamia\u0107 p\u0119tle etc.</li> </ul> <p>Warto wtedy u\u017cywa\u0107 te\u017c: <code>locals()</code> - \u0142aduje do s\u0142ownika wszystkie obecnie dost\u0119pne funkcje</p>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#inspect","title":"inspect","text":"<pre><code>import inspect\n\ninspect.getsource(xyz)# wypisuje jak dana funkcja jest napisana\n</code></pre>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#ast","title":"ast","text":"<pre><code>#podobnie jak wy\u017cej\nimport ast\n</code></pre>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#gdb","title":"GDB","text":"<p>LINK</p> <p>/TODO opisa\u0107 dok\u0142adniej</p>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#profilowanie-kodu","title":"Profilowanie kodu","text":"<p>Profilowanie kodu to sprawdzanie, kt\u00f3re fragmenty kodu zajmuj\u0105 najwi\u0119cej czasu. Wa\u017cny jest tutaj dob\u00f3r narz\u0119dzi do wizualizacji.</p>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#viztracer","title":"VizTracer","text":"<p>VizTracer jest bardzo prostym w u\u017cyciu narz\u0119dziem.</p> <p></p> <p>Generowanie raportu (result.json):</p> <pre><code># Instead of \"python3 my_script.py arg1 arg2\"\nviztracer my_script.py arg1 arg2\n</code></pre> <p>Podgl\u0105d:</p> <pre><code>vizviewer result.json\n</code></pre> <p>Najpopularniejszym GUI do viztracera jest perfetto.</p>"},{"location":"Python%F0%9F%90%8D/5_deweloperskie/#scalene","title":"Scalene","text":"<p>Scalene jest nieco bardziej szczeg\u00f3\u0142owym narz\u0119dziem. pokazuje tak\u017ce u\u017cycie pami\u0119ci i GPU.</p> <p>/TODO opisa\u0107 dzia\u0142anie libki subprocess (czyli jak ogarn\u0105\u0107 prawdziw\u0105 wielow\u0105tkowo\u015b\u0107 w pythonie), oraz uruchamianie proces\u00f3w.</p>"},{"location":"Python%F0%9F%90%8D/6_testowanie/","title":"Testowanie","text":"<p>Do test\u00f3w wykorzystujemy s\u0142owo kluczowe assert</p> <pre><code>x = \"hello\"\n\n#if condition returns False, AssertionError is raised:\nassert x == \"goodbye\", \"x should be 'hello'\"\n</code></pre> <p>je\u015bli to co znajdzie si\u0119 w assercie zwraca true to nic si\u0119 nie dzieje, za\u015b je\u015bli jest to fa\u0142sz to rzuca wyj\u0105tek <code>AssertionError</code>. Wiadommo\u015b\u0107 zawart\u0105 w tym wyj\u0105tku mo\u017cemy poda\u0107 po przecinku.</p> <p>W pythonie jest kilka framework\u00f3w do test\u00f3w: pytest, doctest i unittest</p> <p>Je\u015bli chodzi o struktur\u0119 test\u00f3w to warto zwr\u00f3ci\u0107 uwag\u0119 na to, jak s\u0105 one znajdowane. Conventions for Python test discovery (pytest)</p>"},{"location":"Python%F0%9F%90%8D/6_testowanie/#unittest","title":"Unittest","text":"<p>Jest to domy\u015blny spos\u00f3b testowania wbudowany w j\u0119zyk, jest te\u017c najmniej rozbudowany.</p>"},{"location":"Python%F0%9F%90%8D/6_testowanie/#testy-z-doctest","title":"Testy z doctest","text":"<p>Jest to spos\u00f3b na pisanie test\u00f3w funkcji w jej definicji, testy stanowi\u0105 cze\u015bc opisu naszej funkcji</p> <p>Sk\u0142adnia:</p> <ul> <li>znajduje si\u0119 pomi\u0119dzy <code>\"\"\"</code> i <code>\"\"\"</code></li> <li>linie kodu s\u0105 umieszczane po <code>&gt;&gt;&gt;</code></li> <li>oczekiwane wyniki wpisujemy w miejscach w kt\u00f3rych powinny si\u0119 wy\u015bwietli\u0107 po wykonaniu</li> </ul> <p>Np:</p> <pre><code>\"\"\"\nThis is the \"example\" module.\n\nThe example module supplies one function, factorial().  For example,\n\n&gt;&gt;&gt; factorial(5)\n120\n\"\"\"\n\ndef factorial(n):\n\"\"\"Return the factorial of n, an exact integer &gt;= 0.\n\n    &gt;&gt;&gt; [factorial(n) for n in range(6)]\n    [1, 1, 2, 6, 24, 120]\n    &gt;&gt;&gt; factorial(30)\n    265252859812191058636308480000000\n    &gt;&gt;&gt; factorial(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: n must be &gt;= 0\n\n    Factorials of floats are OK, but the float must be an exact integer:\n    &gt;&gt;&gt; factorial(30.1)\n    Traceback (most recent call last):\n        ...\n    ValueError: n must be exact integer\n    &gt;&gt;&gt; factorial(30.0)\n    265252859812191058636308480000000\n\n    It must also not be ridiculously large:\n    &gt;&gt;&gt; factorial(1e100)\n    Traceback (most recent call last):\n        ...\n    OverflowError: n too large\n    \"\"\"\n\n    import math\n    if not n &gt;= 0:\n        raise ValueError(\"n must be &gt;= 0\")\n    if math.floor(n) != n:\n        raise ValueError(\"n must be exact integer\")\n    if n+1 == n:  # catch a value like 1e300\n        raise OverflowError(\"n too large\")\n    result = 1\n    factor = 2\n    while factor &lt;= n:\n        result *= factor\n        factor += 1\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n</code></pre> <p>flaga \"-v\" przy uruchamianiu takiego skryptu sprawia, \u017ce wy\u015bwietlaj\u0105 si\u0119 tak\u017ce raporty z poprawnych test\u00f3w.</p>"},{"location":"Python%F0%9F%90%8D/6_testowanie/#pytest","title":"Pytest","text":"<p>Jeden z najpopularniejszych sposob\u00f3w testowania link. Pytest odpala wszystkie pliki <code>test_*.py</code> i <code>*_test.py</code> z naszego folderu. I uruchamia wszystkie funkcje zwawieraj\u0105ce <code>test_</code> w nazwie (tak\u017ce metody zdefiniowanych klas).</p> <p>Pozwala na \u0142tew testowanie klas, wyj\u0105tk\u00f3w etc</p> <pre><code>import pytest\n\ndef f():\n    raise SystemExit(1)\n\n# sprawdzanie wyj\u0105tku\ndef test_mytest():\n    with pytest.raises(SystemExit):\n        f()\n\nclass TestClass:\n    def test_one(self):\n        x = \"this\"\n        assert \"h\" in x\n\n    def test_two(self):\n        x = \"hello\"\n        assert hasattr(x, \"check\")\n</code></pre>"},{"location":"Python%F0%9F%90%8D/6_testowanie/#pokrycie-testami","title":"Pokrycie testami","text":"<p>Przy testach mo\u017cna sobie wygenerowa\u0107 raport pokrycia kodu</p> <pre><code>pytest --cov=./nazwa_paczki/ \ncoverage xml #konwertuje plik .coverage do raportu w xml-u\n</code></pre>"},{"location":"Python%F0%9F%90%8D/9_sql_alchemy/","title":"SqlAlchemy","text":"<p>Jedn\u0105 z najpopularniejszych bibliotek ORM (Object-Relational Mapping) w Pythonie jest SqlAlchemy. Pozwala ona na tworzenie modeli bazodanowych w Pythonie, kt\u00f3re s\u0105 mapowane na tabele w bazie danych. SqlAlchemy pozwala na tworzenie zapyta\u0144 SQL w Pythonie, bez konieczno\u015bci pisania czystego SQL-a. Dzia\u0142a to troch\u0119 jak Django ORM.</p>"},{"location":"Python%F0%9F%90%8D/9_sql_alchemy/#minimalny-przykad","title":"Minimalny przyk\u0142ad","text":"<p>Om\u00f3wienie minimalnego przyk\u0142adu (bazuj\u0105cego na dokumentacji FastAPI)</p> <p>Layout projektu:</p> <pre><code>.\n\u2514\u2500\u2500 sql_app\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 database.py - konfiguracja bazy danych\n    \u251c\u2500\u2500 models.py - opisy modeli\n    \u251c\u2500\u2500 crud.py - Create, Read, Update, and Delete. Funkcje do obs\u0142ugi bazy danych\n    \u251c\u2500\u2500 main.py\n</code></pre> <p>Plik <code>database.py</code>:</p> <pre><code>from sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker\n\n#okre\u015blenie bazy z kt\u00f3r\u0105 b\u0119dziemy si\u0119 \u0142\u0105czy\u0107\nSQLALCHEMY_DATABASE_URL = \"sqlite:///./sql_app.db\"\n\n#I utworzenie silnika bazy danych\nengine = create_engine(\n    SQLALCHEMY_DATABASE_URL, connect_args={\"check_same_thread\": False}\n)\n#II utworzenie lokalnej sesji\nSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n</code></pre> <ul> <li>I - silnik jest obiektem s\u0142u\u017c\u0105cym min. do tworzenia po\u0142\u0105cze\u0144 z baz\u0105. Cz\u0119sto jest on po prostu globalnym obiektem tworzonym raz dla danego serwera bazodanowego. (om\u00f3wienie silnika)</li> <li>II - TODO nie wiem, czem nie zwyk\u0142a sesja innty tutorial</li> </ul> <p>PLik <code>models.py</code>:</p> <pre><code>from sqlalchemy import Boolean, Column, ForeignKey, Integer, String\nfrom sqlalchemy.orm import DeclarativeBase, relationship\n\n# Deklaratywna klasa bazowa\nclass Base(DeclarativeBase):\n    pass\n\n# konkretne opisy klas\nclass User(Base):\n    __tablename__ = \"users\"\n\n    id = Column(Integer, primary_key=True)\n    email = Column(String, unique=True, index=True)\n    hashed_password = Column(String)\n    is_active = Column(Boolean, default=True)\n\n    items = relationship(\"Item\", back_populates=\"owner\")\n\n\nclass Item(Base):\n    __tablename__ = \"items\"\n\n    id = Column(Integer, primary_key=True)\n    title = Column(String, index=True)\n    description = Column(String, index=True)\n    owner_id = Column(Integer, ForeignKey(\"users.id\"))\n\n    owner = relationship(\"User\", back_populates=\"items\")\n</code></pre> <p>Deklaratywna klasa bazowa, wykorzystywana do deklaratywnego definiowania obiekt\u00f3w (mo\u017cliwe te\u017c imperatywne). (Deklaratywne mapowanie w SQLAlchemy). Kiedy tworzona jest klasa dziedzicz\u0105ca po niej to baza zapami\u0119tuje informacje o swoich dzieciach.  Wcze\u015bniej do tego samego celu zamiast DeclarativeBase u\u017cywano funkcji declarative_base()</p> <p>Plik <code>crud.py</code>:</p> <pre><code>from sqlalchemy.orm import Session\n\nfrom . import models\n\n\ndef get_user(db: Session, user_id: int):\n    return db.query(models.User).filter(models.User.id == user_id).first()\n\n\ndef get_user_by_email(db: Session, email: str):\n    return db.query(models.User).filter(models.User.email == email).first()\n\n\ndef get_users(db: Session, skip: int = 0, limit: int = 100):\n    return db.query(models.User).offset(skip).limit(limit).all()\n\n\ndef create_user(db: Session, email, password):\n    fake_hashed_password = password + \"notreallyhashed\"\n    db_user = models.User(email=email, hashed_password=fake_hashed_password)\n    db.add(db_user)\n    db.commit()\n    db.refresh(db_user)\n    return db_user\n\n\ndef get_items(db: Session, skip: int = 0, limit: int = 100):\n    return db.query(models.Item).offset(skip).limit(limit).all()\n</code></pre> <p>Plik <code>main.py</code>:</p> <pre><code>from . import models\nfrom . import crud\nfrom .database import SessionLocal, engine\n\nmodels.Base.metadata.create_all(bind=engine)\n\ndb = SessionLocal()\n\ncrud.create_user(db, \"j@gmail.com\",\"xxx\")\ncrud.create_user(db, \"anna@gmail.com\",\"xxx\")\n\nprint(crud.get_users(db))\n</code></pre> <p>Do wygodnego otwarcia bazy danych mo\u017cna u\u017cy\u0107 narz\u0119dzia DB Browser for SQLite  Za\u015b do weryfikacji wprowadzanych danych mo\u017ce si\u0119 przyda\u0107 pydantic (u\u017cyty w oryginalnym przyk\u0142adzie FastAPI)</p>"},{"location":"Python%F0%9F%90%8D/9_sql_alchemy/#mapowanie-klas","title":"Mapowanie klas","text":"<p>link</p> <p>SQLAlchemy pozwala na mapowanie klas na 2 sposoby:</p> <ul> <li>Deklaratywne - opisuje si\u0119 klas\u0119, a SQLAlchemy tworzy mapowanie do tabeli</li> <li>Imperatywne - tworzy si\u0119 mapowanie wprost</li> </ul>"},{"location":"Python%F0%9F%90%8D/9_sql_alchemy/#mapowanie-deklaratywne","title":"Mapowanie deklaratywne","text":"<pre><code>from sqlalchemy import Integer, String, ForeignKey\nfrom sqlalchemy.orm import DeclarativeBase\nfrom sqlalchemy.orm import Mapped\nfrom sqlalchemy.orm import mapped_column\n\n\n# declarative base class\nclass Base(DeclarativeBase):\n    pass\n\n\n# an example mapping using the base\nclass User(Base):\n    __tablename__ = \"user\"\n\n    id: Mapped[int] = mapped_column(primary_key=True)\n    name: Mapped[str]\n    fullname: Mapped[str] = mapped_column(String(30))\n    nickname: Mapped[Optional[str]]\n</code></pre> <p>Wykorzystujemy tutaj bazow\u0105 klas\u0119 jako podstaw\u0119 dla klas mapowanych w bazie danych.   </p> <p>Pola dla klasy mo\u017cemy zdefiniowa\u0107 bezpo\u015brednio (ORM declarative table) u\u017cywaj\u0105c metody <code>Mapped_column()</code>:</p> <pre><code>class User(Base):\n  __tablename__ = \"user\"\n\n  id = mapped_column(Integer, primary_key=True)\n  name = mapped_column(String(50), nullable=False)\n  fullname = mapped_column(String)\n  nickname = mapped_column(String(30))\n</code></pre> <p>Lub u\u017cywaj\u0105c annotacji typu pomocniczego <code>Mapped</code>:</p> <pre><code>class User(Base):\n    __tablename__ = \"user\"\n\n    id: Mapped[int] = mapped_column(primary_key=True)\n    name: Mapped[str] = mapped_column(String(50))\n    fullname: Mapped[Optional[str]]\n    nickname: Mapped[Optional[str]] = mapped_column(String(30))\n</code></pre> <p>W wypadku relacji mo\u017cna u\u017cywa\u0107 <code>relationship()</code> lub <code>mapped_column()</code> z parametrem <code>ForeignKey</code>. (Link do relacji)</p> <pre><code>class Parent(Base):\n    __tablename__ = \"parent_table\"\n\n    id: Mapped[int] = mapped_column(primary_key=True)\n    children: Mapped[List[\"Child\"]] = relationship(back_populates=\"parent\")\n\n\nclass Child(Base):\n    __tablename__ = \"child_table\"\n\n    id: Mapped[int] = mapped_column(primary_key=True)\n    parent_id: Mapped[int] = mapped_column(ForeignKey(\"parent_table.id\"))\n    parent: Mapped[\"Parent\"] = relationship(back_populates=\"children\")\n</code></pre>"},{"location":"Python%F0%9F%90%8D/9_sql_alchemy/#sprawdzanie-wartosci-i-walidacja","title":"Sprawdzanie warto\u015bci i walidacja","text":"<p>Defining Constraints, Simple validation</p> <p>Istnieje kilka sposob\u00f3w na walidacj\u0119 danych. Najprostszym jest prosty dekorator fla funkcji waliduj\u0105cej</p> <pre><code>from sqlalchemy.orm import validates\n\n\nclass EmailAddress(Base):\n    __tablename__ = \"address\"\n\n    id = mapped_column(Integer, primary_key=True)\n    email = mapped_column(String)\n\n    @validates(\"email\")\n    def validate_email(self, key, address):\n        if \"@\" not in address:\n            raise ValueError(\"failed simple email validation\")\n        return address\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/","title":"Javascript Syntax","text":"<p>Inne tutoriale: Java essentials</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#osadzanie-skryptu-w-html-u","title":"Osadzanie skryptu w HTML-u","text":"<p>W HTML-u skrypty umieszczane s\u0105 wwen\u0105trz tag\u00f3w <code>script</code>. W praktyce skrypty mo\u017cna tak pisa\u0107, ale nie jest to wygodne, dlatego u\u017cywa si\u0119 osadzania skrypt\u00f3w.</p> <pre><code>&lt;script src=\"plik_ze_sryptem.js\"&gt;&lt;/script&gt;\n\n&lt;script&gt;\n////Tutaj skrypty\n&lt;/script&gt;\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#zmienne","title":"Zmienne","text":"<p>Warning</p> <p>Zmienne nie mog\u0105 zaczyna\u0107 si\u0119 od liczb, ani nazywa\u0107 si\u0119 jak s\u0142owa kluczowe w JS (<code>new</code> <code>function</code> <code>class</code> etc)</p> <pre><code>/* let 3liczba = 43; */\n/* let function = 3; */\nlet $function = 43; // ale za to $ jest dozwolony jako znak\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#typy-zmiennych","title":"Typy zmiennych","text":"<p>Warto pami\u0119ta\u0107, \u017ce JS ma dynamiczne typowanie, czyli nie musimy definiowa\u0107 typ\u00f3w zmiennych, poniewa\u017c to jest sprawdzane dynamicznie w trakcie pracy. Poza tym mo\u017cemy nadpisywa\u0107 zmienne innymi typami.</p> <pre><code>let mojaZmienna = 43;\nmojaZmienna = \"teraz slowo\";\n</code></pre> <p>Zalecane formatowanie dla zmiennych to <code>camelCase</code>.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#podstawowe","title":"Podstawowe","text":"<pre><code>//Number - zawsze zmiennoprzecinkowa (tak\u017ce dla ca\u0142kowitych)\nlet wiek = 22;\n\n//String - wartpami\u0119ta\u0107, \u017ce mo\u017cna je definiowa\u0107 na 3 sposoby \"\", '' i ``\nlet imie = \"Marian\";\n\n// Boolean\nlet isTrue = true;\n\n//Undefined\nlet jeszczeNieOkreslone;\n\n// Null\nlet nic = null;\n\n// Symbol (ES2015) - unikatowa warto\u015b\u0107, kt\u00f3rej nie mo\u017cna zmieni\u0107\n</code></pre> <p>Dla sprawdzania typ\u00f3w o\u017cywamy operatora <code>typeof</code></p> <pre><code>let zmienna = 54;\nconsole.log(typeof zmienna);\n//&gt;number\ntypeof \"Slowo\";\n//&gt;\"string\"\nlet nieWiadomo;\nconsole.log(typeof nieWiadomo);\n//&gt;undefined\n</code></pre> <p>Warto zwr\u00f3ci\u0107 uwag\u0119 na to co daje tutaj <code>null</code>. (Jest to wyj\u0105tek z kt\u00f3rym trzeba si\u0119 pogodzi\u0107)</p> <pre><code>console.log(typeof null);\n//&gt;object\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#tablice-arrays","title":"Tablice (arrays)","text":"<p>S\u0105 to kontenery w kt\u00f3rych trzymamy zmienne i obiekty</p> <pre><code>const liczby = [22, 33, 45];\nconst slowa = new Array(\"slowo1\", \"slowo2\");\n\nconsole.log(liczby[0]);\n// 22\n\n// mamy tu zbli\u017cone odliczanie do pythonowego\nconsole.log(liczby[-1]);\n// 45\n\n// co ciekawe mimo inicjalizacji jako const mo\u017cemy zmienia\u0107 warto\u015bci w tablicy\nliczby[1] = 32;\n//Ale nie mo\u017cemy usun\u0105\u0107 samej tablicy\n</code></pre> <p>Tablice mog\u0105 zawiera\u0107 r\u00f3\u017cne warto\u015bci w kolejnych kom\u00f3rkach</p> <pre><code>let osoba = [\"Marian\", \"Kowalski\", 22, [\"Burek\", \"Kulka\"]];\n</code></pre> <p>Operacje na tablicach</p> <pre><code>let tablica = [];\n\n// rozmiar tablicy\ntablica.length;\n// 0\n\ntablica.push(10); //teraz tablica zawiera 10\n// 1 - zwraca ona now\u0105 d\u0142ugo\u015b\u017c naszej tablicy\n\ntablica.unshift(0); //tobi to samo co push, tylko dodaje na pocz\u0105tek\n\ntablica.pop(); //a po tej operacji jest znowu pusta\n// 10 - zwraca warto\u015b\u0107 z ko\u0144ca tablicy\n\ntablica.shift(); // zwraca pierwszy element rablicy\n\nconst inna = [\"pierwszy\", \"drugi\", \"trzeci\"];\ninna.indexOf(\"pierwszy\");\n// 0\n\ninna.includes(\"trzeci\");\n// true\n</code></pre> <p>Iterowanie po tablicach</p> <pre><code>const lista = [\"a\", \"b\", \"c\"];\nfor (const [num, elem] of lista.entries()) {\nconsole.log(`Indeks: ${num} Zawartosc: ${elem}`);\n}\n</code></pre> <p>Rozmontowywanie tablic</p> <pre><code>// tworzymy trzy zmienne (x, y, z), kt\u00f3re b\u0119z\u0105 zawiera\u0107 poszczeg\u00f3lne elementy\nconst [x, y, z] = [1, 2, 3];\nconst [, dwa, , cztery] = [1, 2, 3, 4, 5]; //nie musimy bra\u0107 wszystkich element\u00f3w z danej tablicy\n</code></pre> <p>Mo\u017cemy te\u017c w ten spos\u00f3b definiowa\u0107 zmienne domy\u015blne (je\u015bli w tablicy nie ma danego elementu do domy\u015blnie jest Undefined)</p> <pre><code>const [x = 1, , z = 3] = [0, 1];\n</code></pre> <p>Ten mechanizm pozwala na \u0142atwe zwracanie wielu element\u00f3w z funkcji, podobnie do krotek z pythona.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#sposoby-definiowania","title":"Sposoby definiowania","text":"<p>Jest kilka sposob\u00f3w na definiowanie zmiennych. S\u0142u\u017c\u0105 do tego s\u0142owa kluczowe <code>let</code>, <code>var</code> i <code>const</code>.</p> <p>let - definiowanie zwyk\u0142ej zmienej warto\u015bci, za jego pomoc\u0105 mo\u017cna te\u017c definiowa\u0107 puste zmienne.</p> <pre><code>let num = 30;\nnum = 32;\n\nlet undef;\n</code></pre> <p>var - podobne do let lecz jest ju\u017c przestarza\u0142e i nie zaleca si\u0119 jego u\u017cywania. Var jest du\u017co bardziej bugogenne</p> <pre><code>function f() {\nfor (var let_i = 0; let_i &lt; 5; let_i++) {\nconsole.log(\"let_i: \" + let_i);\n}\n\nfor (var var_i = 0; var_i &lt; 5; var_i++) {\nconsole.log(\"let_i: \" + let_i); // to b\u0119dzie dzia\u0142a\u0107 dobrze\n}\n}\n</code></pre> <p>Na dodatek pozwala ono u\u017cywa\u0107 zmiennej przed jej zadeklarowaniem.</p> <p>const - po prostu sta\u0142e zmienne</p> <pre><code>const PI = 3.14;\n// PI = 1; - spowoduje TypeError\n\n// const unknown; - to te\u017c nie zadzia\u0142a (SyntaxError)\n</code></pre> <p>Teoretycznie mo\u017cna pracowa\u0107 nawet bez definiowania zmiennych wg wymienionych wy\u017cej sposob\u00f3w.</p> <pre><code>imie = \"Jan\";\nconsole.log(imie);\n// Jan\n</code></pre> <p>Tylko, \u017ce ta zmienna b\u0119dzie wtedy odpowiednikiem zmiennej globalnej.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#operatory","title":"Operatory","text":"<p>Typy operator\u00f3w:</p> <ul> <li>Matematyczne: <code>+</code> <code>-</code> <code>*</code> <code>/</code> <code>**</code> (pot\u0119gowanie)</li> <li>Przypisywania: <code>=</code> <code>+=</code> <code>*=</code> <code>-=</code> <code>++</code> <code>--</code> etc</li> <li>Boolowskie</li> <li>por\u00f3wnania: <code>&gt;</code> <code>&gt;=</code> <code>&lt;</code> <code>&lt;=</code> <code>==</code> <code>!=</code> <code>===</code></li> <li>logiczne <code>&amp;&amp;</code> <code>||</code> <code>!</code></li> <li>tr\u00f3jargumentowy <code>? :</code></li> </ul> <p>Kolejno\u015b\u0107 operator\u00f3w jest taka jak w matematyce.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#operator-i","title":"Operator <code>==</code> i <code>===</code>","text":"<p>Istniej\u0105 dwa operatory r\u00f3wno\u015bci:</p> <ul> <li><code>===</code> - \u015bcis\u0142y - zwraca prawd\u0119 tylko i wy\u0142\u0105cznie wtedy, gdy obie strony s\u0105 takie same, nie bawi si\u0119 w \u017cadne konwersje etc.</li> <li><code>==</code> - jest nieco lu\u017aniejszy, pozwala sobie na konwersje pomi\u0119dzy typami je\u015bli warto\u015bci s\u0105 r\u00f3\u017cnych typ\u00f3w, poza tym ma inne \"pomagaj\u0105ce\" mechanizmy, kt\u00f3re w d\u0142u\u017cszej prespektywie mog\u0105 powodowa\u0107 wi\u0119cej b\u0142\u0119d\u00f3w. (je\u015bli si\u0119 da u\u017cywaj <code>===</code>)</li> </ul> <pre><code>19 === \"19\";\n// false\n\n19 == \"19\";\n// true\n</code></pre> <p>Podobnie do <code>===</code> dzia\u0142a <code>!==</code></p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#konwersja","title":"Konwersja","text":"<p>Aby dokona\u0107 konwersji trzeba po prostu u\u017cy\u0107 konstruktora danego typu.</p> <pre><code>const rokStr = \"2001\";\nNumber(rokStr);\n//&gt;2001\n\nString(55);\n//&gt;\"55\"\n</code></pre> <p>Tutaj w wypadku podania niew\u0142a\u015bciwej warto\u015bci zamiast wyj\u0105tku dla liczby mo\u017cemy dosta\u0107 <code>NaN</code> (Not a Number)</p> <pre><code>let a = Number(\"ff2\");\na;\n//&gt;NaN\n\ntypeof a; // Co ciekawe ten typ jest wci\u0105\u017c numerem\n(\"number\");\n</code></pre> <p>Poza tym warto uwa\u017ca\u0107 na sprytn\u0105 konwersj\u0119 typ\u00f3w np przy printowaniu. Na og\u00f3\u0142 dzia\u0142a to fajnie, ale operator <code>+</code> mo\u017ce troch\u0119 napsu\u0107 i by\u0107 \u017ar\u00f3d\u0142em wielu b\u0142\u0119d\u00f3w.</p> <pre><code>\"22\" + 10;\n// 2210\n\n\"22\" - 10;\n// 12\n\n\"22\" - \"10\";\n// 12\n\n\"22\" - \"10\" + 55;\n// 67\n\n\"22\" - \"10\" + \"55\";\n// 1255\n</code></pre> <p>Konwersja na Boola - warto\u015bci, kt\u00f3re przy konewrsji na boola daj\u0105 <code>false</code>:</p> <ul> <li>0 - warto\u015b\u0107 liczbowa r\u00f3wna zero</li> <li>\"\"</li> <li><code>undefined</code></li> <li><code>null</code></li> <li><code>NaN</code></li> </ul> <p>Pozosta\u0142e konwertuj\u0105 si\u0119 na warto\u015b\u0107 <code>true</code></p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#praca-ze-stringami","title":"Praca ze stringami","text":"<p>Mamy tutaj standardowe metody do pracy z ci\u0105gami znak\u00f3w, podobne nieco do tych pythonowych.</p> <p>Mamy:</p> <ul> <li><code>split(separator=\" \")</code></li> <li><code>replace(co,na_co)</code>, <code>replaceAll(co,na_co)</code></li> </ul> <pre><code>let slowo = \"\";\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#printowanie","title":"Printowanie","text":"<pre><code>console.log(\"Wiadomosc1\", 323);\n//&gt; Wiadomosc1 323\n\n// aby wypisa\u0107 wiadomo\u015bc mo\u017cna klasycznie po\u0142\u0105czy\u0107 stringi\nconst wiek = 10;\nconst wiadomosc = \"Hej, mam \" + wiek + \"lat\";\nconsole.log(wiadomosc);\n\n// Ale mo\u017cna to zrobi\u0107 wygodniej warto pami\u0119ta\u0107, \u017ce robimy to w ``, a nie w ''\nconst wiadomosc2 = `Hej, mam ${wiek} lat`;\nconsole.log(wiadomosc2);\n</code></pre> <p>Og\u00f3lnie to obecnie ten drugi spos\u00f3b definiowania jest wygodniejszy</p> <pre><code>console.log(\n\"Wiele\\n\\\nlinii w kodzie\"\n);\n\n//VS\n\nconsole.log(`Wiele\nlinii w kodzie`);\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#if-y-i-warunki","title":"IF-y i warunki","text":"<p>Syntax warunk\u00f3w jest zbli\u017cony do C++</p> <pre><code>const wiek = prompt(\"podaj wiek\"); //pojawi si\u0119 okno z pytaniem\n\nif (wiek &gt;= 18) {\nconsole.log(\"Pe\u0142noletni\");\n} else {\nconsole.log(\"Niepe\u0142noletni\");\n}\n\nif (true) console.log(\"Nie\");\nelse console.log(\"Tak\");\n\nif (true) console.log(\"True to prawda\");\n</code></pre> <p>Mamy te\u017c tu switcha</p> <pre><code>switch (key) {\ncase value:\nfun1();\nfun2();\nbreak;\n\ncase value2:\ncase value3: // dla tych dw\u00f3ch warto\u015bci b\u0119dzie si\u0119 dzia\u0107 to samo\nfun3();\nbreak;\n\ndefault:\nbreak;\n}\n</code></pre> <p>Jest te\u017c operator tr\u00f3jargumentowy <code>? :</code></p> <pre><code>wiek &gt;= 18 ? console.log(\"Doros\u0142y\") : log.console(\"Nie Doros\u0142y\");\n// Albo\nconsole.log(wiek &gt;= 18 ? \"Doros\u0142y\" : \"Nie Doros\u0142y\");\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#petle","title":"P\u0119tle","text":"<p>Nic ciekawego mamy 2 zwyk\u0142e typy p\u0119tli, <code>for</code> i <code>while</code>.</p> <pre><code>for (let num = 0; num &lt; 10; num++) {\nif (num === 5) continue; //ale skipujemy dla 5\nconsole.log(`Printujemy po raz ${num + 1}`);\n}\n\nwhile (true) {\n//nigdy nie ko\u0144cz\u0105ca si\u0119 p\u0119tla\nbreak; //no chyba, \u017ce u\u017cyj\u0119 break\n}\n</code></pre> <p>Poza tym mamy jeszcze forEach w dw\u00f3ch wariantach.</p> <pre><code>const tablica = [0, 11, 22, 33, 44];\n\nfor (const i of tablica) {\nconsole.log(i);\n}\n\n// Metoda forEach\ntablica.forEach(function (i) {\nconsole.log(i);\n});\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#funkcje","title":"Funkcje","text":"<p>Definiujemy je u\u017cywaj\u0105c s\u0142owa kluczowego <code>function</code>. Tak\u017ce s\u0105 na og\u00f3\u0142 formatowane jako <code>camelCase</code>.</p> <p>Warning</p> <p>Niestety JS nie wspiera przeci\u0105\u017cania funkcji.</p> <p>Poni\u017cej zwyk\u0142e deklaracje funkcji (function declaration).</p> <pre><code>function printHello() {\nconsole.log(\"Hello\");\n}\n\nprintHello();\n// Hello\n\nfunction isApple(fruit) {\nif (fruit == \"apple\") return true;\nelse return false;\n}\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#argumenty-funkcji","title":"Argumenty funkcji","text":"<p>Funckcj\u0119 maj\u0105c\u0105 <code>n</code> argument\u00f3w mo\u017cemy wywo\u0142a\u0107 u\u017cywaj\u0105c:</p> <ul> <li><code>n</code> argument\u00f3w</li> </ul> <pre><code>printHello(23);\n// Hello\n</code></pre> <ul> <li>wi\u0119cej ni\u017c <code>n</code> argument\u00f3w - nieoczekiwane argumenty s\u0105 ignorowane</li> </ul> <pre><code>isApple(\"apple\", 43); //drugi argument jest ignorowany\n// true\n</code></pre> <ul> <li>mniej ni\u017c <code>n</code> argument\u00f3w - brakuj\u0105ce maj\u0105 warto\u015b\u0107 <code>undefined</code></li> </ul> <pre><code>isApple(); //pierwszy argument ma warto\u015b\u0107 \"undefined\"\n// false\n</code></pre> <ul> <li>Mo\u017cemy tak\u017ce przekaza\u0107 do funkcji list\u0119 argument\u00f3w, kt\u00f3re b\u0119d\u0105 zmapowane na kolejne argumenty</li> </ul> <pre><code>let vector = [\"apple\", 2, 3, 4];\nisApple(...vector);\n</code></pre> <p>Do argument\u00f3w mo\u017cemy odwo\u0142a\u0107 si\u0119 poprzez:</p> <ul> <li>nazw\u0119</li> <li>pseudo-list\u0119 <code>arguments</code></li> </ul> <pre><code>function greetings() {\nfor (let i = 0; i &lt; arguments.length; i++) {\nconsole.log(\"Hi, \" + arguments[i]);\n}\n\n//Hi, Tom\n}\n</code></pre> <p>W razie potrzeby mo\u017cemy wymusi\u0107 liczb\u0119 argument\u00f3w</p> <pre><code>function f(x,y) {if (arguments.length != 2)...\n</code></pre> <p>W\u0142a\u015bnie przez ten \u015bmietnik nie mamy przeci\u0105\u017cania funkcji.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#funkcje-anonimowe","title":"Funkcje anonimowe","text":"<p>Tym okre\u015bleniem okre\u015blamy funkcje, kt\u00f3re s\u0105 przechowywane w zmiennych. Okre\u015blane tak\u017ce jako <code>function expression</code>.</p> <pre><code>let myFun = function () {\nlonsole.log(\"HelloFun\");\n};\n\nmyFun();\n// HelloFun\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#funkcje-strzakowe","title":"Funkcje strza\u0142kowe","text":"<p>Funkcje strza\u0142kowe (arrow functions) to po prostu inny format funkcji przypominaj\u0105cy wyra\u017cenia lambda z innych j\u0119zyk\u00f3w. Pozwala na kr\u00f3tszy zapis funkcji.</p> <pre><code>const arrowFun = (value) =&gt; value + 12;\n\narrowFun(10);\n// 22\n\nconst arrowFunMultiline = (imie) =&gt; {\nconsole.log(`imie to ${imie}`);\nreturn imie;\n};\n\narrowFunMultiline(\"Jan\");\n// imie to Jan\n// \"Jan\"\n\nconst linkNames = (imie, nazwisko) =&gt; imie + \" \" + nazwisko;\n</code></pre> <p>Maj\u0105 one do\u015b\u0107 elastyczny zapis, w wypadku jednego argumentu nie musimy u\u017cywa\u0107 nawias\u00f3w pocz\u0105tkowych, podobnie wygl\u0105da sytuacja z klamerkami w kt\u00f3\u00a9ych zawieramy nasze funkcje.</p> <p>R\u00f3\u017cni\u0105 si\u0119 te\u017c nieco implementacj\u0105, nie jest dla nich tworzony <code>this</code>, ani obiekt <code>arguments</code>.</p> <pre><code>const fun1 = function () {\nconsole.log(this); // undefined\n};\n\nconst fun2 = () =&gt; {\nconsole.log(this); // zwr\u00f3ci globalny obiekt window\n};\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#kolejnosc-hoisting","title":"Kolejno\u015b\u0107 (hoisting)","text":"<p>Przy deklarowaniu funkcji nie musimy si\u0119 martwi\u0107 kolejno\u015bci\u0105 ich deklaracji, poniewa\u017c ich deklaracje s\u0105 doczytywane wcze\u015bniej (ale na ich u\u017cycie musimy poczeka\u0107).</p> <pre><code>const fun1 = function () {\nfun2();\n};\n\nconst fun2 = function () {\nconsole.log(\"ok\");\n};\n\nfun1(); //ale ta ju\u017c musi by\u0107 po deklaracji\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#dostep-do-zmiennych-w-funkcji-zagniezdzonej","title":"Dost\u0119p do zmiennych w funkcji zagnie\u017cd\u017conej","text":"<p>Funkcjie zdefiniowane we wn\u0119trzu innuch funkcji maj\u0105 dost\u0119p do wszystkich zmiennych kt\u00f3re s\u0105 dost\u0119pne w wybranym zakresie.</p> <pre><code>var global = \"this is global\";\nfunction scopeFunction() {\nalsoGlobal = \"This is also global!\";\nvar notGlobal = \"This is private to scopeFunction!\";\nfunction subFunction() {\nalert(notGlobal); // We can still access notGlobal in this child function.\nstillGlobal = \"No var keyword so this is global!\";\nvar isPrivate = \"This is private to subFunction!\";\n}\nalert(stillGlobal); // This is an error since we haven't executed subfunction\nsubFunction(); // execute subfunction\nalert(stillGlobal); // This will output 'No var keyword so this is global!'\nalert(isPrivate); // This generate an error since isPrivate is private to\n// subfunction().\nalert(global); // outputs: 'this is global'\n}\n\nalert(global); // outputs: 'this is global'\nalert(alsoGlobal); // generates an error since we haven't run scopeFunction yet.\nscopeFunction();\nalert(alsoGlobal); // outputs: 'This is also global!';\nalert(notGlobal); // generates an error.\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#zmienne-proste-vs-zozone-kopia-vs-referencja","title":"Zmienne proste vs z\u0142o\u017cone (kopia vs referencja)","text":"<p>Przy pracy ze zmiennymi warto pami\u0119ta\u0107 o tym, \u017ce jedynie proste typy zmiennych s\u0105 kopiowane przy przekazywaniu dalej (Number, String, Boolean, Undefined, Null, Symbol, BigInt), w pozosta\u0142ych przypadkach przekazywana jest referencja.</p> <pre><code>let x = 1;\nlet y = x;\ny = 2;\nconsole.log(x);\n// 1\nconsole.log(y);\n// 2\n\nlet d1 = { x: 1 };\nlet d2 = d1;\n\nd2.x = 2; //niechc\u0105cy nadpisali\u015bmy warto\u015b\u0107 x obiektu d1\nconsole.log(d1);\n//{ x: 2 }\nconsole.log(d2);\n//{ x: 2 }\n</code></pre> <p>Aby temu zapobiec mo\u017cna u\u017cy\u0107 operatora <code>Object.assign()</code> - \u0142\u0105czy on ze sob\u0105 2 obiekty, wystarczy po\u0142\u0105czy\u0107 nasz z jakim\u015b pustym. Tworzy on jednak tylko p\u0142ytk\u0105 kopi\u0119.</p> <pre><code>let kopia = Object.assign({}, d1);\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#obiekty","title":"Obiekty","text":"<p>Obiekty mog\u0105 by\u0107 tworzone na dwa sposoby.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#tworzenie","title":"Tworzenie","text":"<p>Jako wyra\u017cenie (expression) - spos\u00f3b nieco zbli\u017cony do opisu s\u0142ownika. Otrzymujemy od razu gotow\u0105 instancj\u0119 naszej klasy.</p> <pre><code>const osoba = {\nimie: \"Marian\",\nnazwisko: \"Nowak\",\nur: 1999,\n\ngetAge: function () {\nreturn 2021 - this.ur;\n},\n};\n</code></pre> <p>Poszczeg\u00f3lne elementy powinny by\u0107 oddzielone przecinkami.</p> <p>Deklaracja - tworzymy deklaracj\u0119 klasy i potem mo\u017cemy (u\u017cywaj\u0105c operatora <code>new</code> tworzy\u0107 jej instancje)</p> <pre><code>class Rectangle {\nconstructor(height, width) {\nthis.height = height;\nthis.width = width;\n}\n}\n\nlet instancja = new Rectangle(0, 0);\n</code></pre> <p>Dost\u0119p do element\u00f3w danej klasy uzyskujemy za pomoc\u0105 s\u0142owa <code>this</code>.</p> <pre><code>// Dane mo\u017cna pozyskiwa\u0107 na 2 sposoby\nosoba.imie;\n//Marian\n\n//Ten spos\u00f3b jest nieco bardziej elastyczny i pozwala na nieco \u0142atwiejsze zarz\u0105dzanie polami\nosoba[\"imie\"];\n//Marian\n\n// Mo\u017cemy tutaj te\u017c \u0142\u0105two edytowa\u0107 pola w klasie\nosoba.drugie_imie = \"Zbigniew\";\n\nosoba;\n// Object { imie: \"Marian\", nazwisko: \"Nowak\", wiek: 25, drugie_imie: \"Zbigniew\" }\n\nosoba.getAge();\n// 22\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#prototypy","title":"Prototypy","text":"<p>Prototyp jest deklaracj\u0105 zawieraj\u0105c\u0105 definicje, kt\u00f3re s\u0105 wsp\u00f3\u0142dzielone mi\u0119dzy instancjami. Ka\u017cda instancja ma dost\u0119p do p\u00f3l i metod prototypu.</p> <p>Jest to przydatne, gdy chcemy co\u015b zmieni\u0107 we wszystkich instancjach danego obiektu bez ingerowania w niego.</p> <pre><code>class Rectangle {\nconstructor(height, width) {\nthis.height = height;\nthis.width = width;\n}\n}\n\nlet rect = new Rectangle(10, 10);\n\n// dla obiektu prototype dla instancji __proto__\nRectangle.prototype.field = function () {\nreturn this.height * this.width;\n};\n\nrect.field(); // to nam zwr\u00f3ci 100\n\nRectangle.__proto__; //zwr\u00f3ci nam prototyp bazowego obiektu\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#gettery-i-settery","title":"Gettery i settery","text":"<p>Pozwalaj\u0105 na u\u017cywanie niekt\u00f3rych metod tak, jakby by\u0142y polami. Settery s\u0105 bardzo przydatne podczas walidacji danych.</p> <pre><code>const account = {\nowner: \"Jonas\",\nmovements: [200, 530, 120, 300],\n\nget latest() {\nreturn this.movements.slice(-1).pop();\n},\n\nset latest(mov) {\nthis.movements.push(mov);\n},\n};\n\naccount.latest = 23;\naccount.latest;\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#dziedziczenie","title":"Dziedziczenie","text":"<p>U\u017cywaj\u0105c s\u0142owa kluczowego extends mo\u017cemy tak\u017ce tworzey\u0107 hiererchie klas</p> <pre><code>class Animal {\n//    nazwa;\nconstructor(nazwa) {\nthis.nazwa = nazwa;\n}\nhabla() {}\nnazwaAnimal() {\nreturn this.nazwa;\n}\n}\n\nclass Pies extends Animal {\nconstructor() {\nsuper(\"Pies\");\n}\nhabla() {\nreturn \"hau\";\n}\n}\n\nlet perro = new Perro();\nconsole.log(perro.nazwaAnimal() + \" dice \" + perro.habla());\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#komunikacja-zewnetrzna-i-funkcje-asynchroniczne","title":"Komunikacja zewn\u0119trzna i funkcje asynchroniczne","text":"<p>Aby zapobiec marnowaniu czasu niekt\u00f3re funkcje w JS-ie zosta\u0142y zaimplementowane asynchronicznie.</p> <pre><code>const img = document.querySelector(\".dog\");\nimg.src = \"dog.jpg\"; // I w\u0142a\u015bnie to wczytywanie b\u0119dzie asynchroniczne\n\n//Jak ju\u017c si\u0119 wczyta to odpalony zostanie ten event\nimg.addEventListener(\"load\", function () {\nconsole.log(\"Wczytano\");\n});\n</code></pre> <p>Warto pami\u0119ta\u0107, \u017ce eventy z p\u0119tli zdarze\u0144 maj\u0105 miejsce tylko wtedy, gdy w g\u0142\u00f3wnym w\u0105tku nic nie jest przetwarzane. Po dok\u0142adniejsze wyja\u015bnienia zajrzyj do Javascript - Inne informacje</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#ajax","title":"AJAX","text":"<p>AJAX - Async JavaScript And XML. Pozwala asynchronicznie komunikowa\u0107 si\u0119 z zewn\u0119trznymi serwerami (wysy\u0142a\u0107 \u017c\u0105dania etc). Kiedy\u015b opiera\u0142o si\u0119 to na u\u017cyciu XML-a, ale od ilu\u015b lat u\u017cywa si\u0119 jednak JSONa (teraz to podstawa REST-a).</p> <p>Na potrzeby przyk\u0142ad\u00f3w korzystamy z darmowych API st\u0105d.</p> <p>Wcze\u015bniej u\u017cywa\u0142o si\u0119 do tego XMLHttpRequest.</p> <pre><code>const request = new XMLHttpRequest();\nrequest.open(\"GET\", \"https://restcountries.eu/rest/v2/name/poland\");\nwynik = request.send();\n\nvar polska;\nrequest.addEventListener(\"load\", () =&gt; {\nconsole.log(this.responseText);\n//po otrzymaniu wy\u015bwietli nam si\u0119 ca\u0142y surowy tekst JSONa,\n//kt\u00f3ry trzeba przekszta\u0142ci\u0107 w jaki\u015b sensowny obiekt\n[polska] = JSON.parse(this.responseText);\n//json parse zwraca list\u0119 obiekt\u00f3w, wi\u0119c bierzemy tylko pierwszy\n});\n</code></pre> <p>Jednak obecnie ta metoda jest przestarza\u0142a i zamiast tego u\u017cywa si\u0119 fetch, kt\u00f3re zwraca nam Obietnic\u0119 (promise). Jest to tymczasowy obiekt w kt\u00f3rym znajdziemy wynik operacji asynchronicznej jak ju\u017c si\u0119 wykona. Dzi\u0119ki takiemu podej\u015bciu nie musimy polega\u0107 na callbackach, kt\u00f3re mog\u0105 by\u0107 problematyczne.</p> <pre><code>const promise = fetch(\"https://restcountries.eu/rest/v2/name/poland\");\n</code></pre> <p>Taka obietnica po zako\u0144czeniu zadania mo\u017ce zmieni\u0107 sw\u00f3j stan na spe\u0142nion\u0105, lub odrzucon\u0105. Jak ju\u017c zosta\u0142a wykonana to mo\u017cemy j\u0105 skonsumowa\u0107. Do tego warto u\u017cywa\u0107 metody <code>then</code> do kt\u00f3rej przekazujemy co ma zosta\u0107 zrobione z otrzymanymi danymi.</p> <pre><code>then(onFulfilled);\nthen(onFulfilled, onRejected);\n\nthen(\n(value) =&gt; {\n/* fulfillment handler */\n},\n(reason) =&gt; {\n/* rejection handler */\n}\n);\n</code></pre> <p>W wypadku b\u0142\u0119du, lud odrzucenia rz\u0105dania mo\u017cemy te\u017c wykorzysta\u0107 <code>catch()</code> na ko\u0144cu \u0142a\u0144cuszka.</p> <pre><code>fetch(\"https://restcountries.eu/rest/v2/name/poland\").then(function (response) {\nconsole.log(response); //wypisze nam ca\u0142\u0105 klas\u0119 odpowiedzi z kodem statusu etc\nconst new_promise = response.json(); //zwraca sparsowany obiekt, ale jest te\u017c kolejn\u0105 obietnic\u0105\n});\n</code></pre> <p>U\u017cywaj\u0105c tych mechanizm\u00f3w mo\u017cna \u0142atwo \u0142\u0105czy\u0107 wiele \u017c\u0105da\u0144 w ci\u0105gi.</p> <pre><code>const getCountryData = function (country) {\nfetch(`https://restcountries.eu/rest/v2/name/${country}`)\n.then((response) =&gt; {\nresponse.json();\n}) //po otrzymaniu odpowiedzi parsujemy j\u0105 asynchronicznie\n.then((data) =&gt; {\nconsole.log(data);\n}); //po sparsowaniu w ko\u0144cu mo\u017cemy j\u0105 wy\u015bwietli\u0107\n};\n</code></pre> <p>Mamy tu jedno \u017c\u0105danie, kt\u00f3re po wykonaniu ma zwr\u00f3ci\u0107 kolejn\u0105 obietnic\u0119, kt\u00f3ra po spe\u0142nieniu ma nam wy\u015bwietli\u0107 sparsowany wynik.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#wysyanie-zadan-z-zawartoscia","title":"Wysy\u0142anie \u017c\u0105da\u0144 z zawarto\u015bci\u0105","text":"<p>Wysy\u0142anie \u017c\u0105dania zawieraj\u0105cego JSONa</p> <p>Stary spos\u00f3b:</p> <pre><code>let xhr = new XMLHttpRequest();\nlet url = \"https://httpbin.org/post\";\n\nxhr.open(\"POST\", url, true); //true m\u00f3wi, \u017ce ma by\u0107 asynchronicznie\nxhr.setRequestHeader(\"Content-Type\", \"application/json\"); //kiedy jsona trzeba okre\u015bli\u0107 jaki to typ zawarto\u015bci\nxhr.onreadystatechange = function () {\nconsole.log(\"Jest git\");\nconsole.log(this.responseText);\n};\nvar data = JSON.stringify({ imie: \"Jan\", wiek: 12 });\nxhr.send(data);\n</code></pre> <p>Nowy spos\u00f3b:</p> <pre><code>fetch(\"https://httpbin.org/post\", {\nmethod: \"post\",\nheaders: {\nAccept: \"application/json, text/plain\",\n\"Content-Type\": \"application/json\",\n},\nbody: JSON.stringify({ imie: \"Jan\", wiek: 12 }),\n})\n.then((res) =&gt; res.json())\n.then((res) =&gt; console.log(res));\n</code></pre> <p>Tutaj drugim argumentam fetcha jest odpowiednik obiektu Request.</p> <p>Warto zwr\u00f3ci\u0107 tu uwag\u0119 na pola:</p> <ul> <li><code>method</code> - okre\u015bla typ \u017c\u0105dania</li> <li><code>headers</code> - mamy tutaj typowe nag\u0142\u00f3wki http lista, za ich pomoc\u0105 ustalamy np jaki typ danych wysy\u0142amy (<code>Content-Type</code>), czy te\u017c jakie dane jeste\u015bmy w stanie przyj\u0105\u0107 (<code>Accept</code>).</li> <li><code>body</code> - ju\u017c samo cia\u0142o \u017c\u0105dania, tutaj warto pami\u0119ta\u0107, \u017ce najcz\u0119\u015bciej wysy\u0142amy je w postaci stringa</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#runkcje-asynchroniczne","title":"Runkcje asynchroniczne","text":"<p>Do zdefiniowania funkcji asynchronicznej (zwracaj\u0105cej obietnic\u0119) wykorzystujemy s\u0142owo kluczowe <code>async</code>.</p> <pre><code>// Variation of program in slide 38...\nconst fs = require(\"fs\");\nfunction readFilePromise(filename) {\nreturn new Promise((resolve, reject) =&gt; {\nfs.readFile(filename, (err, data) =&gt; {\nif (err) reject(err + \"\");\nelse resolve(data + \"\");\n});\n});\n}\nasync function readTwoFiles() {\ntry {\nconsole.log(await readFilePromise(\"readfile.js\"));\nconsole.log(await readFilePromise(\"doesntExist.js\"));\n} catch (err) {\nconsole.error(err + \"\");\n}\n}\nreadTwoFiles();\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/1_javascript_syntax/#waczanie-zewnetrznych-bibliotek","title":"W\u0142\u0105czanie zewn\u0119trznych bibliotek","text":"<p>TODO</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/2_javascript_interakcje_z_dom/","title":"Javascript DOM - Interakcje i w\u0142a\u015bciwo\u015bci","text":"<p>DOM (Document Object Model) -ustrukturyzowana reprezentacja dokument\u00f3w HTML. Pozwala Javascriptowi na dost\u0119p do jego element\u00f3w i manipulowanie nimi (zmiana stylu, tekstu, czy te\u017c stylu CSS).</p> <p>Jest to drzewiasta struktura \u0142\u0105cz\u0105ca elementy rodzic\u00f3w z ich dzie\u0107mi.</p> <p></p> <p>Korzeniem tej struktury jest <code>document</code>. Jest to klasa dost\u0119pna w JS-ie do kt\u00f3rej si\u0119 odwo\u0142ujemy, gdy chcemy wej\u015b\u0107 w interakcj\u0119 z naszym dokumentem.</p> <p>Do manipulacji elementami zawartymi w dokumencie HTML wystarczy u\u017cy\u0107 metody <code>document.querySelector</code>, kt\u00f3ra zwr\u00f3ci nam obiekt reprezentuj\u0105cy dany element.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/2_javascript_interakcje_z_dom/#manipulacja-elementami-strony","title":"Manipulacja elementami strony","text":"<p>W praktyce</p> <pre><code>document.querySelector(\".message\");\n//W nawiasie podajemy jego identyfikator, analogicznie jak w CSS-ie .klasa lub #id\n\ndocument.querySelector(\".message\").textContent;\n//\"Wiadomo\u015b\u0107\"\ndocument.querySelector(\".message\").textContent = \"Nowa wiadomo\u015b\u0107\"; // w tym momencie zmieni si\u0119 tekst zawarty w tym elemencie\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/2_javascript_interakcje_z_dom/#znajdowanie-elementow","title":"Znajdowanie element\u00f3w","text":"<pre><code>document.querySelector(\".message\"); //szuka po nazwie i zwraca pierwszy pasuj\u0105cy\ndocument.querySelectorAll(\".message\"); //jak wy\u017cej, tylko zwraca list\u0119 wszystkich element\u00f3w\n\ndocument.documentElement; //zwraca nam ca\u0142e drzewo dokumentu\ndocument.body; //analogicznie\ndocument.head;\n\ndocument.getElementById(\"element1\"); // zwraca nam element po ID (bez potrzeby u\u017cywania krokek, czy hasz\u00f3w przy nazwach)\ndocument.getElementsByTagName(\"button\"); //Elements - czyli zwr\u00f3ci nam list\u0119 element\u00f3w typu button\ndocument.getElementsByClassName(\"moja_klasa\");\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/2_javascript_interakcje_z_dom/#dodawanie-i-tworzenie-elementow","title":"Dodawanie i tworzenie element\u00f3w","text":"<p>Do dodawanie element\u00f3w w HTML-u u\u017cywa si\u0119 metody Element.insertAdjacentHTML() albo insertAdjacentElement(). Pozwala ona nam wstawi\u0107 dowolny tekst (element) wzgl\u0119dem wybranego elementu.</p> <pre><code>element.insertAdjacentHTML(position, text);\n</code></pre> <p><code>position</code> mo\u017ce przyjmowa\u0107 warto\u015bci:</p> <ul> <li>'beforebegin': przed element -em.</li> <li>'afterbegin': W \u015brodku element-u przed jego pierwszym dzieckiem.</li> <li>'beforeend': W \u015brodku elementu po jego ostatnim dziecku.</li> <li>'afterend': Po element-cie</li> </ul> <p>Odpowiadaj\u0105 one takim wstawienion:</p> <pre><code>&lt;!-- beforebegin --&gt;\n&lt;p&gt;\n  &lt;!-- afterbegin --&gt;\n  foo\n  &lt;!-- beforeend --&gt;\n&lt;/p&gt;\n&lt;!-- afterend --&gt;\n</code></pre> <p>Stworzenie elementu (kt\u00f3rego jeszcze nie dodajemy do naszego DOM-a)</p> <pre><code>const my_element = document.createElement(\"div\"); //to co dostali\u015bmy zachowuje si\u0119 jak ka\u017cdy element zdobyty za pomoc\u0105 np query selectora\n\ndocument.body.prepend(my_element); //po wstawieniu naszego elementu do dokumentu nasz obiekt mo\u017ce by\u0107 nadal u\u017cywany\n//mo\u017cemy np zmieni\u0107 po\u0142o\u017cenie naszego elementu\ndocument.body.append(my_element); // przeniesie to nasz element bo mo\u017ce istnie\u0107 tylko jedna instancja obiektu w DOM-ie\n// jesli chcemy kopiowa\u0107 to trzeba u\u017cy\u0107 .cloneNode(true)\n\nmy_element.remove(); // usuwa ten element\n</code></pre> <p>W niekt\u00f3rych przypadkach zamiast <code>createElement()</code> trzeba u\u017cy\u0107 createElementNS() (np w wypadku element\u00f3w wewn\u0105trz svg).</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/2_javascript_interakcje_z_dom/#edycja-elementu-oraz-atrybutow","title":"Edycja elementu oraz atrybut\u00f3w","text":"<pre><code>my_element.classList.add(\"my-created-class\");\nmy_element.textContent = \"Troch\u0119 tekstu\";\n\n// Ten jest chyba najbardziej uniwersalny przy prostych zastosowaniach\nmy_element.innerHTML = \"&lt;h1&gt;Troch\u0119 tekstu tylko inaczej&lt;/h1&gt;\";\n\n// zmiana atrybut\u00f3w element\u00f3w\nmy_element.color = \"green\"; // dla standardowych mo\u017cemy si\u0119 do nich dosta\u0107 przez pole w klasie\nmy_element.setAttribute(\"creator\", \"Marian\"); //to si\u0119 za to sprawdzi dla niestandardowych\n\n// jedynym wyj\u0105tkiem dla niestandardowych atrybut\u00f3w s\u0105 atrybuty data-.....\n// &lt;button data-version-number=0/&gt;\nmybtn.dataset.versionNum = 32;\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/2_javascript_interakcje_z_dom/#css","title":"CSS","text":"<p>Aby dosta\u0107 si\u0119 do stylu w CSS nale\u017cy dosta\u0107 si\u0119 do parametru <code>style</code>.</p> <pre><code>body {\nfont-family: sans-serif;\ncolor: #eee;\nbackground-color: rgb(36, 33, 33);\n}\n</code></pre> <p>Trzeba tylko pami\u0119ta\u0107, \u017ce wszystkie zmienne wewn\u0105trz styl\u00f3w (tak\u017ce liczby) musz\u0105 by\u0107 podawane jako stringi.</p> <pre><code>document.querySelector(\"body\").style.backgroundColor = \"#60b347\";\n</code></pre> <p>Nale\u017cy pami\u0119ta\u0107 o tym, \u017ce pobieraj\u0105c style w spos\u00f3b pokazany powy\u017cej pobieramy tylko style okre\u015blonych element\u00f3w.</p> <pre><code>const bt = document.querySelector(\"#my-btn\");\nbt.style.width; //to zwr\u00f3ci nam warto\u015b\u0107 tylko i wy\u0142\u0105cznie wtedy, gdy dany przycisk mia\u0142 to zapisane bezpo\u015brednio\n// (nie np gdy ta warto\u015b\u0107 jest dziedziczona po klasie, typie, albo jest zapisana w pliku CSS)\n\ngetComputedStyle(bt).color; // to nam zawsze zwr\u00f3ci jak\u0105\u015b warto\u015b\u0107\n</code></pre> <p>Podobnie mo\u017cemy manipulowa\u0107 zmiennymi CSSowymi</p> <pre><code>document.documentElement.style.setProperty(\"--background-color\", \"red\");\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/2_javascript_interakcje_z_dom/#odbieranie-zdarzen","title":"Odbieranie zdarze\u0144","text":"<p>Aby odbiera\u0107 zdarzenia z element\u00f3w wystarczy doda\u0107 funkcj\u0119 b\u0119d\u0105c\u0105 callbackiem dla danego wydarzenia powi\u0105zanego z tym elementem.</p> <pre><code>document.querySelector(\".myButton\").addEventListener(\"click\", function () {\nconsole.log(\"pressed button\");\n});\n</code></pre> <p>Warto pami\u0119ta\u0107, \u017ce mo\u017cemy odbiera\u0107 zdarzenia nie tylko z element\u00f3w, lecz tak\u017ce z dokumentu jako ca\u0142o\u015bci. Np poprzez odbieranie wci\u015bni\u0119\u0107.</p> <pre><code>document.addEventListener(\"keydown\", function (e) {\nconsole.log(e);\n});\n//keydown { target: body, key: \"Escape\", charCode: 0, keyCode: 27 }\n</code></pre> <p>Warto wiedzie\u0107, \u017c\u0119 w wypadku funkcji wo\u0142anych przez zdarzenia mamy w nich dost\u0119p do s\u0142owa kluczowego <code>this</code> - reprezentuje ono wska\u017anik na obiekt, kt\u00f3ry uruchomi\u0142 dane wydarzenie.</p> <p>//TODO przyk\u0142ad</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/2_javascript_interakcje_z_dom/#co-mozna-znalezc-w-dom-ie","title":"Co mo\u017cna znale\u017a\u0107 w DOM-ie","text":""},{"location":"Web%C3%B3wka%F0%9F%8C%8D/2_javascript_interakcje_z_dom/#wasciwosci-globalne","title":"W\u0142a\u015bciwo\u015bci globalne","text":"<p>Window jest globalnym obiektem Window. W pewnym sensie to z jego wn\u0119trza operujemy, bo <code>window.window.pageYOffset</code> zwraca to samo co <code>pageYOffset</code>. Z jego pomoc\u0105 mo\u017cna \u0142atwo ustali\u0107 jego wymiary, obecne po\u0142o\u017cenie na stronie i tym podobne.</p> <p>Przyk\u0142adowe w\u0142a\u015bciwo\u015bci i metody obiektu window:</p> <ul> <li><code>pageYOffset</code> <code>pageXOffset</code> - obecne po\u0142o\u017cenie (tylko odczyt), czyli o ile pikseli przewin\u0119li\u015bmy</li> </ul> <p>Warto tak\u017ce pami\u0119ta\u0107 o takich obiektach jak <code>document</code> oraz <code>screen</code> (zawiera informacje na temat wymiar\u00f3w ekranu itp).</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/2_javascript_interakcje_z_dom/#metody-dla-elementow","title":"Metody dla element\u00f3w","text":"<p>Przydatne metody dla klasy bazowej Element</p> <ul> <li>scrollTo(x,y), scrollIntoView() - ten drugi nieco nowszy</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/2_javascript_interakcje_z_dom/#przydatne-wasciwosci-elementow","title":"Przydatne w\u0142a\u015bciwo\u015bci element\u00f3w","text":"<p>Wymiary i po\u0142o\u017cenie</p> <pre><code>element.getBoundingClientRect();\n</code></pre> <p>zwr\u00f3ci</p> <pre><code>DOMRect { x: 30, y: -1054.9000244140625, width: 115.69999694824219, height: 28.79998779296875, top: -1054.9000244140625, right: 145.6999969482422, bottom: -1026.1000366210938, left: 30 }\n</code></pre> <p>warto\u015bci <code>x</code> oraz <code>y</code> pokazuj\u0105 po\u0142o\u017cenie wzgl\u0119dem lewej i g\u00f3ry okna (viewport-u, nie strony), to znaczy, \u017ce mog\u0105 si\u0119 zmienia\u0107 wraz z przewijaniem.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/","title":"HTML i CSS","text":"<p>\u0179r\u00f3d\u0142o tej notatki https://developer.mozilla.org/pl/docs/Learn/Getting_started_with_the_web/HTML_basics</p> <p>HTML jest j\u0119zykiem znacznik\u00f3w (ang. markup language). Sk\u0142ada si\u0119 z serii znacznik\u00f3w (tag\u00f3w), kt\u00f3rych u\u017cywa si\u0119 do zamkni\u0119cia, opakowania r\u00f3\u017cnych cz\u0119\u015bci tre\u015bci, tak aby wygl\u0105da\u0142y i/lub dzia\u0142a\u0142y w okre\u015blony spos\u00f3b. Z pomoc\u0105 tag\u00f3w mo\u017cesz ze s\u0142\u00f3w czy obraz\u00f3w zrobi\u0107 linki do innych stron, etc.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#podstawowa-struktra","title":"Podstawowa struktra","text":""},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#element","title":"Element","text":"<p>Podstawow\u0105 struktur\u0105 jest element.</p> <p> Mamy tutaj:</p> <ul> <li>Tag otwieraj\u0105cy</li> <li>Tag zamykaj\u0105cy</li> <li>Zawarto\u015b\u0107   Razem tworz\u0105 one nasz element</li> </ul> <p>Elementy mog\u0105 zawiera\u0107 tak\u017ce atrybuty</p> <p></p> <p>Atrybut zawsze powinien mie\u0107:</p> <ul> <li>Spacj\u0119 mi\u0119dzy nazw\u0105 tagu a nazw\u0105 atrybutu (lub innego atrybutu, je\u015bli dany element ma wi\u0119cej atrybut\u00f3w).</li> <li>Nazw\u0119 atrybutu oraz znak r\u00f3wno\u015bci.</li> <li>Warto\u015b\u0107 podan\u0105 w \"cudzys\u0142owie\"</li> </ul> <p>Atrybuty <code>class</code> i <code>id</code> s\u0105 uniwersalnymi atrybutami dla wszystkich tag\u00f3w. Pozwalaj\u0105 one na \u0142atwe zarz\u0105dzanie elementami strony poprzez przypisywane im identyfikator\u00f3w i okre\u015blanie ich przynale\u017cno\u015bci do r\u00f3\u017cnych klas. (ID musi by\u0107 unikalne, klasa ju\u017c nie) Potem mo\u017cna u\u017cywa\u0107 tego do zmiany styl\u00f3w w CSS, czy te\u017c w skryptacj w JS.</p> <p>Warto pami\u0119ta\u0107, \u017ce elementy mog\u0105 mie\u0107 wiele klas jednocze\u015bnie</p> <pre><code>&lt;button class=\"btn again\"&gt;Again!&lt;/button&gt;\n</code></pre> <p>Elementy mog\u0105 si\u0119 w sobie zagnie\u017cd\u017ca\u0107</p> <pre><code>&lt;p&gt;My cat is &lt;strong&gt;very&lt;/strong&gt; grumpy.&lt;/p&gt;\n</code></pre> <p>Elementy mog\u0105 by\u0107 te\u017c puste - gdy nie zawieraj\u0105 \u017cadnej tre\u015bci. Nie musz\u0105 wtedy mie\u0107 tagu zamykaj\u0105cego.</p> <pre><code>&lt;img src=\"images/firefox-icon.png\" alt=\"My test image\" /&gt;\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#struktura-plikow","title":"Struktura plik\u00f3w","text":"<p>Ca\u0142o\u015b\u0107 zawsze jest zawarta w tagach HTML.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;My test page&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;img src=\"images/firefox-icon.png\" alt=\"My test image\" /&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Opisy element\u00f3w:</p> <ul> <li><code>&lt;!DOCTYPE html&gt;</code> - typ dokumentu (opcjonalny)</li> <li><code>&lt;html&gt;</code> - element html zawiera ca\u0142\u0105 tre\u015b\u0107 strony i czasem nazwany jest elementem bazowym (ang. root element). Wskazuje, gdzie zaczyna i ko\u0144czy si\u0119 kod HTML.</li> <li><code>&lt;head&gt;</code> -element head to tzw. nag\u0142\u00f3wek strony. Ten element dzia\u0142a jak kontener dla wszystkich element\u00f3w, kt\u00f3re chcesz umie\u015bci\u0107 na stronie HTML, ale nie w tre\u015bci, kt\u00f3re wy\u015bwietlasz przegl\u0105daj\u0105cym twoj\u0105 stron\u0119. Ma on w sobie na og\u00f3\u0142 konfiguracj\u0119.</li> <li><code>&lt;body&gt;</code> - element body. Zawiera oncz\u0119\u015b\u0107 w\u0142a\u015bciw\u0105 strony, czyli jej zawarto\u015b\u0107.</li> <li><code>&lt;meta charset=\"utf-8\"&gt;</code> - reprezentuje metadane, kt\u00f3re nie mog\u0105 by\u0107 reprezentowane przez inne elementy zwi\u0105zane z metadanymi w HTML. Tutaj ustawia zestaw znak\u00f3w.</li> <li><code>&lt;title&gt;</code> - Ustawia tytu\u0142 strony, kt\u00f3ry jest tytu\u0142em wy\u015bwietlanym na karcie przegl\u0105darki</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#przykadowe-elementy-i-tagi","title":"Przyk\u0142adowe elementy i tagi","text":""},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#komentarze","title":"Komentarze","text":"<pre><code>&lt;!-- tekst komentarza --&gt;\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#tekst","title":"Tekst","text":""},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#nagowek-h1","title":"Nag\u0142\u00f3wek <code>&lt;h1&gt;</code>","text":"<p>Nag\u0142\u00f3wki opisujemy jako h1 (najg\u0142\u00f3wniejszy), h2,h3...</p> <pre><code>&lt;h1&gt;My main title&lt;/h1&gt;\n&lt;h2&gt;My top level heading&lt;/h2&gt;\n&lt;h3&gt;My subheading&lt;/h3&gt;\n&lt;h4&gt;My sub-subheading&lt;/h4&gt;\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#podstawy","title":"Podstawy","text":"<p>Paragrafy (<code>&lt;p&gt;</code>) s\u0142u\u017c\u0105 do dzielenia tekstu na paragrafy</p> <pre><code>&lt;p&gt;This is a single paragraph&lt;/p&gt;\n\n&lt;b&gt;Tekst pogrubiony&lt;/b&gt;\n&lt;!-- Jest to markup fizyczny alternatyw\u0105 logiczn\u0105 jest znacznik &lt;strong&gt; --&gt;\n\n&lt;i&gt;tekst kursyw\u0105&lt;/i&gt;\n&lt;code&gt;Tekst czcionk\u0105 programistyczn\u0105&lt;/code&gt;\n\n&lt;br /&gt;\n&lt;!-- Znak nowej linii --&gt;\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#lista-ul-ol","title":"Lista <code>&lt;ul&gt;</code> <code>&lt;ol&gt;</code>","text":"<p>unordered list <code>&lt;ul&gt;</code> - lista nieuporz\u0105dkowana</p> <pre><code>&lt;ul&gt;\n  &lt;li&gt;technologists&lt;/li&gt;\n  &lt;li&gt;thinkers&lt;/li&gt;\n  &lt;li&gt;builders&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>ordered list <code>&lt;ol&gt;</code> - lista uporz\u0105dkowana.</p> <p>Jest dla niej kilka typ\u00f3w np: <code>A</code> -oznaczanie kolejnych punkt\u00f3w jako abc <code>i</code> - osnaczanie rzymskimi cyframi</p> <pre><code>&lt;ol&gt;\n  &lt;li&gt;pierwszy&lt;/li&gt;\n  &lt;li&gt;drugi&lt;/li&gt;\n  &lt;li&gt;trzeci&lt;/li&gt;\n&lt;/ol&gt;\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#linki-a","title":"Linki <code>&lt;a&gt;</code>","text":"<p>Aby utworzy\u0107 odno\u015bnik musimy u\u017cy\u0107 prostego elementu \u2014 a \u2014 \"a\" jest skr\u00f3tem od angielskiego \"anchor\".</p> <pre><code>&lt;a href=\"https://www.mozilla.org/en-US/about/manifesto/\"&gt;Mozilla Manifesto&lt;/a&gt;\n</code></pre> <ul> <li>href (hypertext reference) - link (mo\u017ce to by\u0107 link nie tylko do innej strony, lecz tak\u017ce do elementu tej samej strony)</li> </ul> <pre><code>&lt;a href=\"#section--1\"&gt;Sekcja 1&lt;/a&gt;\n&lt;!-- .... --&gt;\n\n&lt;section class=\"section\" id=\"section--1\"&gt;\n  &lt;!-- Tu nas przeniesie klikni\u0119cie --&gt;\n&lt;/section&gt;\n</code></pre> <p>Je\u015bli nasz link b\u0119dzie prowadzi\u0142 do <code>#</code> to zostaniemy przeniesieni na pocz\u0105tek strony.</p> <p>Mo\u017cemy te\u017c \u0142atwo tworzy\u0107 w\u0142asne kotwice</p> <pre><code>&lt;a name=\"moja_sekcja\"&gt;Moja sekcja&lt;/a&gt;\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#obraz-img","title":"Obraz <code>&lt;img&gt;</code>","text":"<p>U\u017cywamy do tego tagu img</p> <pre><code>&lt;img src=\"images/firefox-icon.png\" alt=\"My test image\" /&gt;\n</code></pre> <ul> <li><code>src</code> - \u017ar\u00f3d\u0142o obrazu</li> <li><code>alt</code> - tekst alternatywny - pokazuje si\u0119 w razie problem\u00f3w z wy\u015bwietleniem.</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#organizacja-rzeczy-na-stronie","title":"Organizacja rzeczy na stronie","text":""},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#div-div","title":"DIV <code>&lt;div&gt;</code>","text":"<p>div - jest to element kt\u00f3ry nie robi nic. S\u0142u\u017cy on jako kontener, dzi\u0119ki kt\u00f3remu mo\u017cna \u0142atwo podzieli\u0107 i pogrupowa\u0107 elementy.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#wejscia","title":"Wej\u015bcia","text":"<p>pole tekstowe i przycisk (bez JS-a bezuzyteczne)</p> <pre><code>&lt;input type=\"text\" placeholder=\"Domy\u015blny tekst\" /&gt; &lt;button&gt;GIT!&lt;/button&gt;\n</code></pre> <p> GIT!</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#span-span","title":"SPAN <code>&lt;span&gt;</code>","text":"<p>Tak jak <code>&lt;div&gt;</code> nie robi nic, po prostu pozwala \u0142atwo zapanowa\u0107 nad elementami tekstu.</p> <pre><code>&lt;h1&gt;\n  s\u0142owo\n  &lt;span class=\"highlight\"&gt;wa\u017cne s\u0142owo&lt;/span&gt;\n  Kolejne s\u0142owo&lt;br /&gt;\n&lt;/h1&gt;\n</code></pre> <p>Mo\u017cemy w ten spos\u00f3b \u0142atwo zarz\u0105dza\u0107 jakimi\u015b fragmentami tekstu przypisuj\u0105c je np do klas.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#przekierowywanie-strony-todo","title":"Przekierowywanie strony TODO","text":""},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#css","title":"CSS","text":"<p>CSS s\u0142u\u017cy do ustalania stylu naszej strony. Analogicznie do JS-a mo\u017ce by\u0107 umieszczony w pliku html, lub w oddzielnym pliku.</p> <pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Learning CSS&lt;/title&gt;\n    &lt;style&gt;\nbody {\nbackground-color: green;\n}\n&lt;/style&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Osadzamy to za pomoc\u0105 linku (ale nie tagiem a - anchor, tylko link)</p> <pre><code> &lt;title&gt;Learning CSS&lt;/title&gt;\n&lt;link href=\"style.css\" rel=\"stylesheet\"&gt;\n&lt;/head&gt;\n</code></pre> <p>Mo\u017cemy te\u017c przypisa\u0107 dany styl do poszczeg\u00f3lnych element\u00f3w</p> <pre><code>&lt;div style=\"display: flex; flex-direction: column\"&gt;&lt;/div&gt;\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#skadnia-css","title":"Sk\u0142adnia CSS","text":"<p>Poni\u017cej wida\u0107, \u017ce przypisujemy dane parametry dla wszystkich element\u00f3w nale\u017c\u0105cych do tagu <code>body</code> tzn do wszystkich element\u00f3w dziedzicz\u0105cych po nim.</p> <pre><code>body {\nbackground-color: yellow;\nfont-family: sans-serif;\n}\n</code></pre> <p>Pliki CSS zawieraj\u0105 listy element\u00f3w, kt\u00f3re maj\u0105 mie\u0107 zmienione warto\u015bci, mog\u0105 one opisywa\u0107 zar\u00f3wno to jak mamy zmieni\u0107 niekt\u00f3re tagi, jak i plasy, czy te\u017c edytowa\u0107 poszczeg\u00f3lne ID.</p> <p>Klasa - do zmian w\u0142a\u015bciwo\u015bci klasy u\u017cywamy nazwy klasy poprzedzonej kropk\u0105 <code>.</code> Klasa mo\u017ce by\u0107 te\u017c \u0142\u0105czona z typem np <code>p.moja_klasa</code> - czyli wszystkie paragrafy nale\u017c\u0105ce to tej klasy.</p> <pre><code>&lt;p class=\"mojaklasa\"&gt;Przyk\u0142adowa klasa&lt;/p&gt;\n</code></pre> <pre><code>.mojaklasa {\ncolor: red;\n}\n</code></pre> <p>ID - tutaj zamiast kropki u\u017cywamy <code>#</code></p> <pre><code>&lt;p id=\"moj_paragraf\"&gt;Przyk\u0142adowa klasa&lt;/p&gt;\n</code></pre> <pre><code>#moj_paragraf {\ncolor: green;\nborder: 5px solid black;\n}\n</code></pre> <p>Co ciekawe wida\u0107 tutaj w\u0142a\u015bciwo\u015b\u0107 <code>border</code> - mo\u017ce ona mie\u0107 wi\u0119cej ni\u017c jedn\u0105 w\u0142a\u015bciwo\u015b\u0107 - tutaj s\u0105 to grubo\u015b\u0107, styl i kolor.</p> <p>Kilka element\u00f3w wystarczy je wymieni\u0107 po przecinku</p> <pre><code>input,\nbutton {\npadding: 10px;\nfont-size: 16px;\n}\n</code></pre> <p>Elementy umieszczone wzgl\u0119dem innych - je\u015bli chcemy oznaczy\u0107 wszystkie elementy znajduj\u0105ce si\u0119 wewn\u0105trz innych to wypisujemy obok siebie, tylko bez przecink\u00f3w</p> <pre><code>#moj-element h2 {\ncolor: black;\n} /* b\u0119dzie dotyczy\u0107 tylko nag\u0142\u00f3wk\u00f3w h2 wewn\u0105trz elementu z id moj-element */\n</code></pre> <p>Wszystko</p> <p>Za pomoc\u0105 <code>*</code> mo\u017cna \u0142atwo \"z\u0142apa\u0107\" wszystkie elementy. Mo\u017cna to u\u017cy\u0107, aby \u0142\u0105two dostosowa\u0107 np. marginesy wszystkich element\u00f3w.</p> <pre><code>* {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box; /* ta w\u0142a\u015bciwo\u015b\u0107 zmiania liczenie rozmiaru, od teraz ustalony rozmiar dotyczy zawarto\u015bci wraz z paddingiem, a nie tylko zawarto\u015bci */\n}\n</code></pre> <p>Warto pami\u0119ta\u0107, \u017ce nie wszystkie w\u0142a\u015bciwo\u015bci s\u0105 dziedziczone, np <code>padding</code> dotyczy tylko wskazanego elementu, elementy wewn\u0105trz nie b\u0119d\u0105 zmieniane.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#wartosci-wymiarow","title":"Warto\u015bci wymiar\u00f3w","text":"<p>Wszelkie wymiary mog\u0105 by\u0107 opisywane z u\u017cyciem dw\u00f3ch typ\u00f3w jednostek:</p> <ul> <li>Bezwzgl\u0119dnych - <code>px</code> <code>cm</code> <code>mm</code> <code>in</code> <code>pt</code> (piksele, centymetry, milimetry, cale, punkty etc) - wszystkie te (za wyj\u0105tkiem pikseli) skaluj\u0105 si\u0119 do wymiar\u00f3w urz\u0105dzenia</li> <li>Wzgl\u0119dnych - te ju\u017c s\u0105 nieco bardziej skomplikowane:</li> <li><code>%</code> - procent wymiar\u00f3w rodzica</li> <li><code>vw</code> <code>vh</code> - 1% wysoko\u015bci lub szeroko\u015bci okna przegl\u0105darki</li> <li><code>em</code> - liczone wzgl\u0119dem rozmiaru fontu elementu (2em to rozmiar 2 razy wi\u0119kszy ni\u017c obecny font)</li> <li>inne...</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#zmienne-css","title":"Zmienne CSS","text":"<p>Zmienne CSS mog\u0105 zawiera\u0107 r\u00f3\u017cne warto\u015bci dost\u0119pne w ca\u0142ym dokumencie.</p> <pre><code>/* najpro\u015bciej jest zadeklarowa\u0107 je w roocie, wtedy s\u0105 dost\u0119pne wsz\u0119dzie */\n:root {\n--glowny-kolor-tla: brown;\n}\n\n.blok {\n--glowny-kolor-tla: green;\n}\n\n.jeden {\ncolor: white;\nbackground-color: var(\n--glowny-kolor-tla\n); /* przy u\u017cyciu musi by\u0107 to umieszczone w var()*/\n}\n/*Je\u015bli element .jeden znajdzie si\u0119 wewn\u0105trz elementu .blok, wtedy warto\u015b\u0107 zmiennej z\nroota zostanie przes\u0142oni\u0119ta przez warto\u015b\u0107 zadan\u0105 w bloku*/\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#uzyteczne-wartosci","title":"U\u017cyteczne warto\u015bci","text":"<ul> <li>opacity - przezroczysto\u015b\u0107 okre\u015blana od 0 do 1 (przydatna do chowania i pokazywania element\u00f3w)</li> <li>display - spos\u00f3b w jaki spos\u00f3b powinny by\u0107 u\u0142o\u017cone elementy w danym pojemniku. Przyk\u0142adowe warto\u015bci:</li> <li><code>none</code> - elementy nie b\u0119d\u0105 renderowane</li> <li><code>inline</code> - elementy b\u0119d\u0105 u\u0142o\u017cone w linii</li> <li><code>flex</code></li> </ul> <p>//TODO opisz dok\u0142adniej display</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/3_html_i_css/#box-model","title":"Box Model","text":"<p>Jest to koncepcja m\u00f3wi\u0105ca, \u017ce ka\u017cdy element strony powinni\u015bmy postrzega\u0107 jako prostok\u0105t z zawarto\u015bci\u0105 charakteryzuj\u0105cy si\u0119 takimi w\u0142a\u015bciwo\u015bciami jak szeroko\u015b\u0107 wysoko\u015b\u0107 etc.</p> <p>W\u0142a\u015bciwo\u015bci te to:</p> <ul> <li>margin</li> <li>border</li> <li>padding</li> </ul> <p></p> <p>Dodatkowo jest jeszcze fill area czyli ca\u0142a przestrze\u0144 znajduj\u0105ca si\u0119 w obr\u0119bie granicy (border).</p> <p>I w\u0142a\u015bnie te parametry mo\u017cemy z \u0142atwo\u015bci\u0105 dostosowywa\u0107 za pomoc\u0105 CSS-\u00f3w.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/4_javascript_inne/","title":"Javascript - Inne informacje","text":""},{"location":"Web%C3%B3wka%F0%9F%8C%8D/4_javascript_inne/#koncepty-webowe","title":"Koncepty webowe","text":"<p>W sieci mamy 3 g\u0142\u00f3wne technologie:</p> <ul> <li>html - odpowiada za zawarto\u015b\u0107 strony, u\u0142o\u017cenie element\u00f3w etc</li> <li>CSS - Styl w kt\u00f3rym jest nasza strona</li> <li>Javascript - j\u0119zyk programowania, kt\u00f3ry odpowaida za wszystkie \"ruchome\" rzeczy</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/4_javascript_inne/#wersje-jsa","title":"Wersje JSa","text":"<ul> <li>ES5 (ECMAScript 5) wersja wydana w 2009</li> <li>ES6 (2015) - najwi\u0119ksza aktualizacja ever - od tego wydania</li> <li>ES6+ - Od tego momentu kolejne wydania wychodz\u0105 co roku i okre\u015bla si\u0119 je jako ES6+ (ES2019, ES2020)</li> </ul> <p>JS ma podobne za\u0142o\u017cenia jak java je\u015bli chodzi o zmiany, czyli NIGDY nie usuwamy starych rzeczy z j\u0119zyka, tylko dodajemy nowe. Dzi\u0119ki temu jest \u015bwietna kompatybilno\u015b\u0107 wsteczna .Rzeczy napisane w roku 2009 b\u0119d\u0105 dzia\u0142a\u0107 dobrz na najnowszych przegl\u0105darkach, ale za to nowe mechanizmy mog\u0105 nie by\u0107 obecne na starszych. Do tego u\u017cywa si\u0119 narz\u0119dzia Babel (transpiluje tw\u00f3j kod do ES5).</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/4_javascript_inne/#wasciwosci-jezyka-jako-takiego","title":"W\u0142a\u015bciwo\u015bci j\u0119zyka jako takiego","text":"<p>Cechy opisuj\u0105ce JS-a</p> <ul> <li>wysokopoziomowy</li> <li>posiada garbage collectora</li> <li>interpretowany lub just in time compiled</li> <li>wieloparadygmatowy (Obiektowy, Funkcyjny)</li> <li>Wszystko jest klas\u0105 (za wyj\u0105tkiem prymityw\u00f3w)</li> <li>Jednow\u0105tkowy</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/4_javascript_inne/#asynchronicznosc-wydarzeniaeventy-etc","title":"Asynchroniczno\u015b\u0107, Wydarzenia(eventy) etc","text":"<p>Ze wzgl\u0119du na natur\u0119 j\u0119zyka (obs\u0142uga GUI oparta na zdarzeniach) oraz braku wsparcia dla wielow\u0105tkowo\u015bci bardzo wa\u017cn\u0105 rol\u0119 odgrywa tutaj asynchroniczno\u015b\u0107.</p> <p></p> <p>W pewnym uproszenieniu mo\u017cna powiedzie\u0107, \u017ce w JS-ie mamy stos na kt\u00f3rym wykonywane s\u0105 funkcje z g\u0142\u00f3wnego pliku oraz kolejk\u0119 na kt\u00f3rej znajduj\u0105 si\u0119 wydarzenia do obs\u0142u\u017cenia. W momencie, gdy wszystko co znajdowa\u0142o si\u0119 na stosie zostanie wykonane to wtedy na stos \"wrzucona\" zostanie funkcja z kolejki do wykonania. Z tego powodu czasami mo\u017ce doj\u015b\u0107 do przyblokowania, event\u00f3w, co mo\u017ce mie\u0107 nieoczekiwane konsekwencje (np. funkcja z <code>setTimeout</code> mo\u017ce si\u0119 wykona\u00f0 p\u00f3\u017aniej ni\u017c planowali\u015bmy)</p> Przyk\u0142ad <pre><code>function fibo(n) {\nreturn n &lt; 2 ? 1 : fibo(n - 2) + fibo(n - 1);\n}\n\nfunction showMessage(m, u) {\nconsole.log(m + \": The result is: \" + u);\n}\n\nconsole.log(\"Starting the process...\");\n// Wait for 10 ms in order to show the message...\nsetTimeout(function () {\nconsole.log(\"M1: My first message...\");\n}, 10);\n// Several seconds are needed in order to\n// complete this call: fibo(40)\nlet j = fibo(40);\n// M2 is written before M1 is shown. Why?\nshowMessage(\"M2\", j);\n// M3 is written after M1. Why?\nsetTimeout(function () {\nshowMessage(\"M3\", j);\n}, 1);\n</code></pre>  Powy\u017cszy kod drukuje:  <pre><code>C:\\&gt; node turnQueue.js\nStarting the process...\nM2: The result is: 165580141\nM1: My first message...\nM3: The result is: 165580141\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/4_javascript_inne/#zalecane-formatowanie","title":"Zalecane formatowanie","text":"<p>TODO</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/4_javascript_inne/#strict-mode","title":"Strict mode","text":"<p>Jest to specjalny tryb pomagaj\u0105cy przy developmencie. Zapobiega g\u0142\u00f3wnie robieniu niekt\u00f3rych operacji oraz wyrzuca wi\u0119cej error\u00f3w.</p> <p>Aby go aktywowa\u0107 wystarczy doda\u0107 lini\u0119 <code>'use strict';</code> na samym pocz\u0105tku skryptu.</p> <p>Przyk\u0142adowe mechanizmy:</p> <ul> <li>\u0141apanie u\u017cycia nieistniej\u0105cych zmiennych. (cz\u0119ste przy liter\u00f3wkach)</li> <li>Pilnowanie pr\u00f3by u\u017cycia zastrze\u017conych s\u0142\u00f3w w z\u0142ych miejscach (np jako nazwy zmiennych)</li> </ul> <p>Wi\u0119cej przyk\u0142ad\u00f3w tutaj</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/4_javascript_inne/#wczytywanie-i-wykonywanie-skryptu","title":"Wczytywanie i wykonywanie skryptu","text":"<p>TODO async, defer https://www.udemy.com/course/the-complete-javascript-course/learn/lecture/22649011#overview</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/4_javascript_inne/#pomniejsze-libki-i-obiekty-wbudowane","title":"Pomniejsze libki i obiekty wbudowane","text":""},{"location":"Web%C3%B3wka%F0%9F%8C%8D/4_javascript_inne/#math","title":"Math","text":"<pre><code>Math.random(); //zwraza liczb\u0119 z zakresu 0-1\nMath.trunc(num); //przycina liczb\u0119 co ca\u0142kowitej\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/4_javascript_inne/#czas","title":"Czas","text":"<p>//TODO</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/5_nodejs/","title":"NodeJS","text":"<p>Jest to specjalny interpreter JS-a wykorzystywane do aplikacji backendowych. Dostarcza seri\u0119 modu\u0142\u00f3w, kt\u00f3re pomagaj\u0105 w rozwijaniu takich apek. Jest zaprojektowany do zwinnego rozwijania skalowalnych aplikacji.</p> <p>Definiuje:</p> <ul> <li>Interfejsy</li> <li>Interpreter - operty na silniku V8 (z google chrome'a)</li> <li>zarz\u0105dzanie modu\u0142ami</li> <li>...</li> </ul> <p>Inne cechy:</p> <ul> <li>I/O model oparty o zdarzenia</li> <li>p\u0119tla zdarze\u0144 dzia\u0142a w jednym w\u0105tku</li> <li>aktywno\u015b\u0107 nigdy nie jest bolkowana</li> <li>r\u00f3wnoleg\u0142o\u015b\u0107 oparta o callbacki oraz wydarzenia</li> </ul> <p>Zastosowania:</p> <ul> <li>Komponenty serwerowe</li> <li>Niekrytyczne aplikacje</li> <li>Aplikacje z lekkimi interfejsami REST/JSON</li> <li>Aproste aplikacje (takie, kt\u00f3re korzystaj\u0105 z AJAX-a, do interakcji z serwerami)</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/5_nodejs/#uruchomienie","title":"Uruchomienie","text":"<p>Node i skrypty wykorzystuj\u0105ce go mog\u0105 by\u0107 uruchamiane z terminala podobnie jak python.</p> <pre><code>node skrypcik.js\n</code></pre> <p>Analogicznie do pythona mo\u017cemy tutaj \u0142atwo korzysta\u0107 z zewn\u0119trznych modu\u0142\u00f3w zainstalowanych za pomoc\u0105 <code>npm</code>.</p> <pre><code>npm install nazwa_modu\u0142u\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/5_nodejs/#przyjmowanie-argumentow-programu-argv","title":"Przyjmowanie argument\u00f3w programu <code>argv</code>","text":"<p>Argumenty znajduj\u0105 si\u0119 w zmiennej <code>process.argv</code>.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/5_nodejs/#poszczegolne-moduy","title":"Poszczeg\u00f3lne modu\u0142y","text":""},{"location":"Web%C3%B3wka%F0%9F%8C%8D/5_nodejs/#zarzadzanie-moduami","title":"Zarz\u0105dzanie modu\u0142ami","text":"<p>S\u0105 2 sposoby na importowanie modu\u0142\u00f3w</p> <ul> <li>ESM - (imo lepszy)</li> </ul> <pre><code>import React from 'react';\n\nimport {foo, bar} from './myLib';\n\n...\nimport * as fs from 'node:fs/promises';\n...\n\nexport default function() {\n// your Function\n};\nexport const function1() {...};\nexport const function2() {...};\n</code></pre> <ul> <li>CJS (CommonJS)</li> </ul> <p>Korzystaj\u0105c z funkcji <code>require()</code> mo\u017cemy w\u0142\u0105cza\u0107 inne modu\u0142y do naszego programu</p> <pre><code>const HTTP = require(\u2018http\u2019);\n\nconst st = require(\u2018./Circle.js\u2019);\nconsole.log( \u201cArea of a circle with radius 5: \u201c + st.area(5) );\n</code></pre> <p>Aby co\u015b da\u0142o si\u0119 zaimportowa\u0107 musimy u\u017cy\u0107 <code>exports</code></p> <pre><code>// Module Circle.js\nexports.area = function (r) {\nreturn Math.PI * r * r;\n};\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/5_nodejs/#modu-events","title":"Modu\u0142 Events","text":"<p>Dokumentacja Jest on wykorzystywany do implementacji generator\u00f3w wydarze\u0144.</p> <p>Generatory s\u0105 instancjami <code>EventEmitter</code></p> <p>Proste u\u017cycie</p> <pre><code>const emitter = new ev.EventEmitter();\nemitter.on(eventName, functionHandler); //Rejestrowanie callbacka\nemitter.emit(eventName, arg1, arg2, ....); //Wywo\u0142anie zdarzenia z argumentami\n</code></pre> <p><code>emit()</code> powoduje wywo\u0142anie natychmiastowe wywo\u0142anie callbacku. Je\u015bli chcemy, aby wydarzy\u0142o si\u0119 to potem mo\u017cemy skorzysta\u0107 z asynchrnoiczno\u015bci. <code>setTimeout(function() {emit(event,...);},0)</code></p> <p>MO\u017ce by\u0107 wiele callback\u00f3w dla danego wydarzenia.</p> <p>Wi\u0119kszy przyk\u0142ad</p> <pre><code>const ev = require(\"events\");\nconst emitter = new ev.EventEmitter(); // DON\u2019T FORGET NEW OPERATOR!!\nconst e1 = \"print\",\ne2 = \"read\"; // Names of the events.\n\nfunction createListener(eventName) {\nlet num = 0;\nreturn function () {\nconsole.log(\n\"Event \" + eventName + \" has \" + \"happened \" + ++num + \" times.\"\n);\n};\n}\n// Listener functions are registered in the event emitter.\nemitter.on(e1, createListener(e1));\nemitter.on(e2, createListener(e2));\n// There might be more than one listener for the same event.\nemitter.on(e1, function () {\nconsole.log(\"Something has been printed!!\");\n});\n// Generate the events periodically...\nsetInterval(function () {\nemitter.emit(e1);\n}, 2000); // First event emitted every 2s\nsetInterval(function () {\nemitter.emit(e2);\n}, 3000); // Second event emitted every 3s\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/5_nodejs/#stream-module","title":"Stream module","text":"<p>Uzywane do pracy ze strumieniemi danych. Dokumentacja</p> <p>Istniej\u0105 4 warianty:</p> <ul> <li>Readable: odczyt</li> <li>Writable</li> <li>Duplex: odczyt i zapis dost\u0119pny</li> <li>Transform: podobne do duplexu, ale wpisy na og\u00f3\u0142 zale\u017c\u0105 od odczyt\u00f3w</li> </ul> <p>Wszystkie z nich s\u0105 klasami typu <code>EventEmitter</code>, posiadaj\u0105 one zdarzenia:</p> <ul> <li>Readable:</li> <li><code>readable</code></li> <li><code>data</code> - cz\u0119\u015b\u0107 informacji zosta\u0142a odczytana (linia)</li> <li><code>end</code> - strumie\u0144 zamkn\u0105\u0142 obecne po\u0142\u0105czenie</li> <li><code>close</code> - strumie\u0144 TCP zosta\u0142 zamkni\u0119ty ca\u0142kowicie (nie b\u0119dzie ju\u017c przyjmowa\u0142 nowych po\u0142\u0105cze\u0144)</li> <li><code>error</code>.</li> <li>Writable: <code>drain</code>, <code>finish</code>, <code>pipe</code>, <code>unpipe</code>.</li> </ul> <p>Przyk\u0142ady:</p> <ul> <li>Readable: process.stdin, files, HTTP requests (server), HTTP responses (client), ...</li> <li>Writable: process.stdout, process.stderr, files, HTTP requests (client), HTTP responses (server),...</li> <li>Duplex: TCP sockets, files,...</li> </ul> <pre><code>const st = require('./Circle.js')\nconst os = require('os')\nprocess.stdout.write(\"Radius of the circle: \")\nprocess.stdin.resume() // Needed for initiating the reads from stdin.\nprocess.stdin.setEncoding(\"utf8\") // \u2026 for reading strings instead of \u201cBuffers\u201d.\n// Endless loop. Every time we read a radius its circumference is printed and a new\nradius is requested\nprocess.stdin.on(\"data\", function(str) {\n// The string that has been read is \u201cstr\u201d. Remove its trailing endline.\nlet rd = str.slice(0, str.length - os.EOL.length)\nconsole.log(\"Circumference for radius \" + rd + \" is \" + st.circumference(rd))\nconsole.log(\" \")\nprocess.stdout.write(\"Radius of the circle: \")\n})\n// The \u201cend\u201d event is generated when STDIN is closed. [Ctrl]+[D] in UNIX.\nprocess.stdin.on(\"end\", function() {console.log(\"Terminating...\")})\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/5_nodejs/#modu-sieciowy-net","title":"Modu\u0142 sieciowy - net","text":"<p>S\u0142u\u017cy do zarz\u0105dzania gniazdami TCP. Dokumentacja</p> <ul> <li>net.Server: TCP server.</li> <li>Generated using <code>net.createServer([options,][connectionlistener])</code>.<ul> <li>\u201cconnectionListener\u201d, when used, has a single parameter: a TCP socket already connected.</li> </ul> </li> <li>Events that may manage: <code>listening</code>, <code>connection</code>, <code>close</code>, <code>error</code>.</li> <li>net.Socket: Socket TCP.</li> <li>Generated using <code>new net.Socket()</code> or <code>net.connect(options [,listener])</code> or <code>net.connect(port [,host][,listener])</code></li> <li>Implements a Duplex Stream.</li> <li>Events that may manage: <code>connect</code>, <code>data</code>, <code>end</code>, <code>timeout</code>, <code>drain</code>, <code>error</code>, <code>close</code>.</li> <li>Is child of <code>EventEmitter</code></li> </ul> <p>Przyk\u0142ad (serwer)</p> <pre><code>const net = require(\"net\");\nlet server = net.createServer(function (socket) {\n//'connection' listener\nconsole.log(\"server connected\");\nsocket.on(\"end\", function () {\nconsole.log(\"server disconnected\");\n});\n// Send \"Hello\" to the client.\nsocket.write(\"Hello\\r\\n\");\n// With pipe() we write to Socket 'c'\n// what is read from 'c'.\nsocket.pipe(socket);\n}); // End of net.createServer()\nserver.listen(9000, function () {\n//'listening' listener\nconsole.log(\"server bound\");\n});\n</code></pre> <p>Klient</p> <pre><code>const net = require(\"net\");\n// The server is in our same machine.\nlet client = net.connect({ port: 9000 }, function () {\n//'connect' listener\nconsole.log(\"client connected\");\n// This will be echoed by the server.\nclient.write(\"world!\\r\\n\");\n});\nclient.on(\"data\", function (data) {\n// Write the received data to stdout.\nconsole.log(data.toString());\n// This says that no more data will be\n// written to the Socket.\nclient.end();\n});\nclient.on(\"end\", function () {\nconsole.log(\"client disconnected\");\n});\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/5_nodejs/#modu-http","title":"Modu\u0142 HTTP","text":"<p>Pomaga przy implementacji serwer\u00f3w webowych (oraz klient\u00f3w) Dokumentacja</p> <p>Klasy:</p> <ul> <li><code>http.Server</code> - modeluje web serwer</li> <li><code>http.ClientRequest</code> - zapytanie</li> <li>Jest to strumie\u0144 oraz EventEmitter</li> <li>Wydarzenia: <code>response</code>, <code>socket</code>, <code>connect</code>, <code>upgrade</code>, <code>continue</code></li> <li><code>http.ServerResponse</code></li> <li><code>http.IncomingMessage</code></li> </ul> <pre><code>const http = require(\"http\");\nconst hostname = \"127.0.0.1\";\nconst port = 3000;\nconst server = http.createServer((req, res) =&gt; {\n// res is a ServerResponse.\n// Its setHeader() method sets the response header.\nres.statusCode = 200;\nres.setHeader(\"Content-Type\", \"text/plain\");\n// The end() method is needed to communicate that both the header\n// and body of the response have already been sent. As a result, the response can\n// be considered complete. Its optional argument may be used for including the\n// last part of the body section.\nres.end(\"Hello World\\n\");\n});\n// listen() is used in an http.Server in order to start listening for\n// new connections. It sets the port and (optionally) the IP address.\nserver.listen(port, hostname, () =&gt; {\nconsole.log(\"Server running at http://\" + hostname + \":\" + port + \"/\");\n});\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/5_nodejs/#cluster-skalowanie","title":"Cluster - skalowanie","text":"<p>Jako, \u017ce JS jest jednow\u0105tkowy to nie mo\u017cemy w prosty spos\u00f3b stworzy\u0107 nawych w\u0105tk\u00f3w do przetwarzania wi\u0119kszej ilo\u015bci zapyta\u0144. Musimy uruchamia\u0107 kolejne procesy. Do u\u0142atwienia tego zadania mozemy wykorzysta\u0107 modu\u0142 <code>cluster</code>. Pozwala na:</p> <ul> <li>\u0142atwe tworzenie nowych proces\u00f3w wykonuj\u0105cych ten sam kod</li> <li>umo\u017cliwia zarz\u0105dzanie nimi i dzielenie obci\u0105\u017cenia (klasa <code>Worker</code>)</li> <li>procesy mog\u0105 dzieli\u0107 ten sam port przypisany danemu serwisowi</li> <li>dostarcza wiele dodatkowych event\u00f3w: (<code>fork</code>,<code>online</code>,<code>listening</code>,<code>disconnect</code>,<code>exit</code>\u2026)</li> </ul> <p>Przyk\u0142adowy klaster</p> <pre><code>var cluster = require(\"cluster\");\nvar numCPUs = require(\"os\").cpus().length;\nvar server = ...; // the server which runs the workers\nvar port = ...;// the port where the server binds\n\nif (cluster.isMaster) {// code of the master one\n// fork: create workers\nfor (var i = 0; i &lt; numCPUs; i++) cluster.fork();\n// listening death of workers\ncluster.on(\"exit\", function (worker, code, signal) {\nconsole.log(\"worker\", worker.process.pid, \"died\");\n});\n} else {\n// code of any worker\nserver.listen(port); // each worker runs the server\n}\n</code></pre> <p>Klaster serwer\u00f3w HTTP</p> <pre><code>var cluster = require(\"cluster\");\nvar http = require(\"http\");\nvar numCPUs = require(\"os\").cpus().length;\nif (cluster.isMaster) {\n// code of the master one\nfor (var i = 0; i &lt; numCPUs; i++) cluster.fork();\ncluster.on(\"exit\", function (worker, code, signal) {\nconsole.log(\"worker\", worker.process.pid, \"died\");\n});\n} else {\n// code of any worker\nhttp\n.createServer(function (req, res) {\nres.writeHead(200);\nres.end(\"hello world\\n\");\n})\n.listen(8000);\n}\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/7_nginx/","title":"Nginx","text":"<p>S\u0142u\u017cy do routowania i zarz\u0105dzania po\u0142\u0105czeniami przychodz\u0105cymi na dany serwer.</p> <p>Je\u015bli nie chcesz robi\u0107 niczego skomplikowanego to polecam po prostu u\u017cy\u0107 apki Nginx proxy manager. Zrobisz wi\u0119kszo\u015b\u0107 rzeczy z pomoc\u0105 prostego GUI.  Jest te\u017c prosty konfigurator od Mozilli</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/7_nginx/#instalacja-i-odpalenie","title":"Instalacja i odpalenie","text":"<pre><code>sudo apt install nginx\n</code></pre> <p>Po instalacji jest du\u017ca szansa, \u017ce nginx wystartuje jako serwis z domy\u015bln\u0105 konfiguracj\u0105 w <code>/etc/nginx/nginx.conf</code>.</p> <p>Do zarz\u0105dzania przydaje si\u0119 komenda <code>service</code>. Przydatna zw\u0142\u0105szcza, gdy chcemy zrestartowa\u0107 serwis, aby wczyta\u0142 zaktualizowan\u0105 konfiguracj\u0119.</p> <pre><code>sudo service nginx reload #restartuje go\nsudo service nginx start\nsudo service nginx stop\n</code></pre> <p>Je\u015bli chcesz na szybko co\u015b pozmienia\u0107 to wystarczy, \u017ce wyedytujesz plik <code>nginx.conf</code> i zrestartujesz us\u0142ug\u0119. Jednak przed restartem warto sprawdzi\u0107, czy ta konfiguracja ma sens <code>nginx -t</code>.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/7_nginx/#konfiguracja","title":"Konfiguracja","text":"<p>Przyk\u0142adowa konfiguracja dla prostego serwera HTTP</p> <pre><code># Tworzymy serwer\nserver {\n#s\u0142uchaj\u0105cy na porcie 80 (dla r\u00f3\u017cnych interfejs\u00f3w)\nlisten 80;\nlisten [::]:80;\n\n#umieszcza on logi w tych lokalizacjach\naccess_log /var/log/nginx/reverse-access.log;\nerror_log /var/log/nginx/reverse-error.log;\n\n# i dla endpoint\u00f3w zaczynaj\u0105cych si\u0119 na / (czyli dla wszystkich)\nlocation / {\n#przekierowuje ruch na adres http://127.0.0.1:8000\nproxy_pass http://127.0.0.1:8000;\n#nadpisujemy warto\u015b\u0107 nag\u0142\u00f3wka Host (aby zapobiec problemom z CSRF)\nproxy_set_header Host $http_host;\n}\n}\n</code></pre> <p>Bardziej z\u0142o\u017cona konfiguracja</p> <pre><code>#proste przekierowanie zapyta\u0144 HTTP na HTTPS\nserver {\nlisten 80;\nreturn 301 https://$host$request_uri;\n}\n\nserver {\nlisten 443;\n# podajemy nazw\u0119 dla tego serwera\nserver_name example.com;\nclient_max_body_size 0; #potrzebne do przesy\u0142ania du\u017cych zapyta\u0144\n\nssl_certificate           /etc/ssl/certs/example_local.crt;\nssl_certificate_key       /etc/ssl/private/example_local.key;\n\nssl_session_cache  builtin:1000  shared:SSL:10m;\nssl_protocols  TLSv1 TLSv1.1 TLSv1.2;\nssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;\nssl_prefer_server_ciphers on;\n\naccess_log            /var/log/nginx/example.access.log;\n\nlocation / {\n\nproxy_set_header        Host $host;\nproxy_set_header        X-Real-IP $remote_addr;\nproxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_set_header        X-Forwarded-Proto $scheme;\n\n# Fix the It appears that your reverse proxy set up is broken\" error.\nproxy_pass          http://localhost:8080;\nproxy_read_timeout  90;\n\nproxy_redirect      http://localhost:8080 https://example.com;\n}\n}\n</code></pre> <p>link do dokumentacji modu\u0142u HTTP</p> <p>R\u00f3\u017cne u\u017cyteczne parametry:</p> <ul> <li><code>proxy_set_header HEADERNAME VALUE;</code> - pozwala na \u0142atwe ustawianie/zmienianie nag\u0142\u00f3wk\u00f3w zapyta\u0144 wysy\u0142anych dalej</li> <li><code>client_max_body_size 100G;</code> - jak du\u017cy zapytania mog\u0105 by\u0107 wysy\u0142ane przez klient\u00f3\u0153</li> </ul> <p>Do debugowania nginx-a i certyfikat\u00f3w warto u\u017cywa\u0107 komend:</p> <pre><code>wget --header=\"Host: example.com\" http://192.168.1.10/\ncurl -H \"Host: example.com\" -O http://192.168.1.10/myfile.txt\n</code></pre> <p>Przy deploymentach z\u0142o\u017conych system\u00f3w warto u\u017cy\u0107 nginx-a w dockerze i zmapowa\u0107 folder z konfigiem na folder <code>/etc/nginx/conf.d/</code></p> <p>Przyk\u0142ad dla compose'a</p> <pre><code>  nginx:\n    image: nginx:alpine\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./conf.d:/etc/nginx/conf.d\n      - ./ssl:/etc/nginx/ssl\n    depends_on:\n      - my_webapp\n</code></pre> <p>/// TODO sprawdzi\u0107 prostsze alternatywy jak CADDY https://caddyserver.com/</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/8-REST-HTTP/","title":"REST i HTTP","text":""},{"location":"Web%C3%B3wka%F0%9F%8C%8D/8-REST-HTTP/#http-i-https","title":"HTTP i HTTPS","text":"<p>HTTP (Hypertext Transfer Protocol) to protok\u00f3\u0142 sieciowy stosowany do przesy\u0142ania danych w sieci. Protok\u00f3\u0142 HTTP pozwala na wymian\u0119 danych za pomoc\u0105 zapyta\u0144 (ang. <code>requests</code>) i odpowiedzi (ang. <code>responses</code>). Zapytania s\u0105 wysy\u0142ane przez przegl\u0105dark\u0119 internetow\u0105 do serwera, a odpowiedzi s\u0105 wysy\u0142ane przez serwer z powrotem do przegl\u0105darki. Zapytania i odpowiedzi s\u0105 wysy\u0142ane w postaci ci\u0105g\u00f3w tekstowych, kt\u00f3re s\u0105 nast\u0119pnie parsowane i interpretowane przez klienta i serwer.</p> Kiedy wysy\u0142anie zapyta\u0144 do serwera to za ma\u0142o. <p>Tutaj warto pami\u0119ta\u0107, \u017ce w niekt\u00f3rych wypadkach, kiedy ci\u0105g\u0142e odpytywanie serwera jest nieefektywne mo\u017cliwe jest wys\u0142anie informacji do klienta. Mo\u017cna do tego celu u\u017cy\u0107 WebSocekt\u00f3w, b\u0105d\u017a SSE (Server Sent Events) link</p> <p>Protok\u00f3\u0142 HTTP sk\u0142ada si\u0119 z kilku element\u00f3w, takich jak:</p> <ul> <li>Metoda zapytania: okre\u015bla, co ma zosta\u0107 zrobione z danymi. Najcz\u0119\u015bciej u\u017cywane metody to <code>GET</code>, <code>POST</code>, <code>PUT</code> i <code>DELETE</code>.</li> <li>Adres URL: okre\u015bla lokalizacj\u0119 danych, do kt\u00f3rych zostanie wys\u0142ane zapytanie.</li> <li>Nag\u0142\u00f3wki: s\u0105 to informacje dodatkowe, kt\u00f3re s\u0105 wysy\u0142ane razem z zapytaniem lub odpowiedzi\u0105. Nag\u0142\u00f3wki mog\u0105 zawiera\u0107 informacje o typie zawarto\u015bci, autoryzacji lub innych szczeg\u00f3\u0142ach zapytania lub odpowiedzi.</li> <li>Tre\u015b\u0107 zapytania lub odpowiedzi: zawiera dane, kt\u00f3re s\u0105 przesy\u0142ane pomi\u0119dzy klientem a serwerem.</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/8-REST-HTTP/#metody-http-wykorzystywane-przy-transferze","title":"Metody HTTP wykorzystywane przy transferze","text":"Nazwa Opis GET Pobierz dane PUT POST Utw\u00f3rz lub zaktualizuj jak\u0105\u015b dan\u0105 DELETE Usu\u0144 jak\u0105\u015b dan\u0105"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/8-REST-HTTP/#kody-odpowiedzi","title":"Kody odpowiedzi","text":"<p>Po wykonaniu ka\u017cdego zapytania otrzymujemy kod odpowiedzi opisuj\u0105cy wynik naszej operacji.</p> <p>Pierwsza cyfra kodu opisuje typ b\u0142\u0119du</p> <ul> <li>1xx - kody informacyjne</li> <li>2xx - sukces</li> <li>3xx - przekierowanie</li> <li>4xx - b\u0142\u0105d klienta</li> <li>5xx - b\u0142\u0105d serwera</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/8-REST-HTTP/#popularne-kody","title":"Popularne kody","text":"<ul> <li><code>200</code> OK: \u017b\u0105danie zosta\u0142o pomy\u015blnie zrealizowane i serwer zwr\u00f3ci\u0142 odpowiedni\u0105 tre\u015b\u0107.</li> <li><code>301</code> Moved Permanently: Zas\u00f3b, kt\u00f3ry zosta\u0142 za\u017c\u0105dany, zosta\u0142 przeniesiony na sta\u0142e na nowy adres URL. Przegl\u0105darka powinna automatycznie przekierowa\u0107 u\u017cytkownika na nowy adres.</li> <li><code>401</code> Unauthorized: Serwer wymaga uwierzytelnienia u\u017cytkownika, aby zaakceptowa\u0107 \u017c\u0105danie.</li> <li><code>404</code> Not Found: Zas\u00f3b, kt\u00f3ry zosta\u0142 za\u017c\u0105dany, nie zosta\u0142 znaleziony na serwerze.</li> <li><code>500</code> Internal Server Error: Serwer napotka\u0142 b\u0142\u0105d wewn\u0119trzny podczas pr\u00f3by zrealizowania \u017c\u0105dania.</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/8-REST-HTTP/#url","title":"URL","text":"<p>URL (Uniform Resource Locator) to ci\u0105g tekstowy, kt\u00f3ry s\u0142u\u017cy do identyfikowania i lokalizowania zasob\u00f3w w sieci. Zasoby te mog\u0105 by\u0107 plikami, obrazami, stronami internetowymi lub innymi danymi.</p> <p>Sk\u0142adnia URL sk\u0142ada si\u0119 z kilku element\u00f3w, kt\u00f3re s\u0105 oddzielone znakiem \"/\":</p> <ul> <li><code>Protok\u00f3\u0142</code> okre\u015bla, jaki protok\u00f3\u0142 sieciowy jest u\u017cywany do po\u0142\u0105czenia z zasobem. Najcz\u0119\u015bciej u\u017cywanymi protoko\u0142ami s\u0105 <code>HTTP</code> i <code>HTTPS</code>.</li> <li><code>Nazwa hosta</code> okre\u015bla, na kt\u00f3rym serwerze znajduje si\u0119 zas\u00f3b. Nazwa hosta mo\u017ce by\u0107 nazw\u0105 domeny, np. \"example.com\", lub adresem IP serwera.</li> <li><code>\u015acie\u017cka</code> okre\u015bla lokalizacj\u0119 zasobu na serwerze. \u015acie\u017cka sk\u0142ada si\u0119 z katalog\u00f3w i nazw plik\u00f3w, kt\u00f3re s\u0105 oddzielone znakami \"/\".</li> <li><code>Parametry</code>zapytania: s\u0105 to dodatkowe informacje przekazywane do serwera podczas \u017c\u0105dania zasobu. Parametry zapytania s\u0105 zazwyczaj w postaci p\u00f3l klucz-warto\u015b\u0107, kt\u00f3re s\u0105 oddzielone znakiem <code>&amp;</code> i s\u0105 dodawane do URL po znaku <code>?</code>.</li> </ul> <pre><code>https://example.com/path/to/file.html?key1=value1&amp;key2=value2\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/8-REST-HTTP/#rest","title":"REST","text":"<p>Representational state transfer - spos\u00f3b komunikacji aplikacji siecowymi oparty na zapytaniach HTTP i przesy\u0142aniu JSON\u00f3w (lub innych zbli\u017conych plik\u00f3w) z odpowiedziami.</p> <p>W takim systemie ka\u017cdemu API odpowiada unikalny url.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/8-REST-HTTP/#json","title":"JSON","text":"<p>JSON (JavaScript Object Notation) to lekki format wymiany danych, kt\u00f3ry jest cz\u0119sto stosowany do przesy\u0142ania danych mi\u0119dzy aplikacjami i systemami w sieci. Jest to format tekstowy, kt\u00f3ry jest \u0142atwy do odczytu i zapisu dla ludzi, a tak\u017ce \u0142atwy do analizowania i generowania przez komputery.</p> <p>Format JSON opiera si\u0119 na sk\u0142adni j\u0119zyka JavaScript i sk\u0142ada si\u0119 z par klucz-warto\u015b\u0107. Klucze s\u0105 ci\u0105gami tekstowymi zawieraj\u0105cymi nazwy p\u00f3l, a warto\u015bci mog\u0105 by\u0107 r\u00f3\u017cnymi typami danych, takimi jak liczby, ci\u0105gi znak\u00f3w, tablica lub obiekt.</p> <pre><code>{\n\"name\": \"John Smith\",\n\"age\": 30,\n\"city\": \"New York\",\n\"skills\": [\"JavaScript\", \"HTML\", \"CSS\"]\n}\n</code></pre> <p>Opiera si\u0119 ona na s\u0142ownikach <code>{\"nazwa\":warto\u015b\u0107}</code> oraz na listach <code>[]</code>.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/8-REST-HTTP/#przesyanie-danych-nie-tekstowych","title":"Przesy\u0142anie danych nie tekstowych","text":"<p>Jako, \u017ce JSON wspiera przede wszystkim dane tekstowe to aby zapakowa\u0107 inne dane do zapytania/odpowiedzi nale\u017cy skorzysta\u0107 z algorytmu takiego jak <code>base64</code></p> <p>Base64 to spos\u00f3b kodowania danych binarnych w postaci ci\u0105gu znak\u00f3w ASCII. Dzi\u0119ki kodowaniu base64 dane binarne s\u0105 konwertowane na ci\u0105g znak\u00f3w, kt\u00f3re mog\u0105 by\u0107 przes\u0142ane przez sie\u0107 jako zwyk\u0142y tekst. Algorytm base64 u\u017cywa 64 znak\u00f3w do kodowania danych. S\u0105 to litery alfabetu \u0142aci\u0144skiego (wielkimi i ma\u0142ymi literami), cyfry oraz kilka znak\u00f3w specjalnych. Ka\u017cde 3 bajty danych s\u0105 kodowane jako 4 znaki base64. Je\u015bli liczba bajt\u00f3w danych nie jest podzielna przez 3, to s\u0105 one uzupe\u0142niane dodatkowymi znakami \"=\", aby zapewni\u0107 pe\u0142ne grupy po 3 bajty.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/","title":"Django","text":"<p>Warto zajrze\u0107 tutaj: https://docs.djangoproject.com/en/5.1/intro/tutorial01/</p> <p>https://bulldogjob.pl/readme/architektura-django</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#struktura-projektu","title":"Struktura projektu","text":"<p>Projekt w django tu\u017c po stworzeniu (<code>django-admin startproject mysite</code>) wygl\u0105da mniej wi\u0119cej tak:</p> <pre><code>mysite/\n    manage.py\n    mysite/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n</code></pre> <p>mamy tu folder projektu w kt\u00f3rym mamy poszczeg\u00f3lne aplikacje. Na ten moment mamy tylko folder mysite zawieraj\u0105cy og\u00f3ln\u0105 konfiguracj\u0119 projektu,a w nim pliki takie jak:</p> <ul> <li>settings.py - konfiguracja projektu, jakie bazy danych maj\u0105 byc u\u017cywane, j\u0119zyk projektu, modu\u0142y wykorzystywane w projekcie etc. link</li> <li>urls.py - deklaracje url opisuj\u0105ce co ma by\u0107 dostepne pod jakimi \u015bcie\u017ckami link</li> </ul> <p>Komend\u0105 <code>manage.py startapp polls</code> mo\u017cemy doda\u0107 now\u0105 apk\u0119 o nazwie polls.</p> <p>Struktura aplikcaji:</p> <pre><code>polls/\n    __init__.py\n    admin.py\n    apps.py\n    migrations/\n        __init__.py\n    models.py\n    tests.py\n    views.py\n</code></pre> <p>Pliki:</p> <ul> <li>admin.py - to jak ma wygl\u0105da\u0107 panel administracyjny dla danej apki</li> <li>urls.py - analogiczny do pliku urls.py w folderze opisuj\u0105cym projekt</li> <li>models.py - modele, kt\u00f3re b\u0119d\u0105 znajdowa\u0107 si\u0119 naszych bazach danych</li> <li>views.py - poszczeg\u00f3lne widoki znajduj\u0105ce si\u0119 w naszej aplikacji, mo\u017cemy tutaj wystawi\u0107 poszczeg\u00f3lne API RESTowe, lub stronki w HTMLu</li> <li>tests.py</li> </ul> <p></p> <p>Dodatkowe pliki mog\u0105ce si\u0119 tu znajdowa\u0107:</p> <ul> <li>serializers.py - link klasy wykorzystywane do serializacji modeli na inne formaty (np. json, lub xml)</li> </ul> <p>Przy wi\u0119kszych projektach warto rozs\u0105dne rozszerzenie powy\u017cszego schematu przyk\u0142ad</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#zarzadzanie-i-praca-z-projektem","title":"Zarz\u0105dzanie i praca z projektem","text":"<p>Do tego wykorzystywany jest skrypcik <code>manage.py</code> znajduj\u0105cy si\u0119 w g\u0142\u00f3wnym folderze projektu.</p> <p>Mo\u017ce byc on wykorzystywany chocia\u017cby do tworzenia (lub aktualizacji) tablic w bazie danych odpowiadaj\u0105cych strukturom danych opisanych w modelach.</p> <pre><code>manage.py makemigrations # przygotowuje instrukcje potrzebne do zaktualizowania struktur w bazie\nmanage.py migrate #wykonanie migracji\n</code></pre> <p>Do wygodnej \"zabawy\" z danymi oraz klasami w bazie mo\u017cna u\u017cy\u0107 <code>manage.py shell</code>.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#migracje-danych","title":"Migracje danych","text":"<p>Migracje s\u0142u\u017c\u0105 nak\u0142adaniu zmian na baz\u0119 danych po zmianach w samym kodzie aplikacji (g\u0142\u00f3wnie w modelach). migracje tutorial</p> <p>Na og\u00f3\u0142 s\u0105 generowane automatycznie, jednak w niekt\u00f3rych wypadkach nale\u017cy r\u0119cznie dopisa\u0107 troch\u0119 logiki do skrypt\u00f3w migruj\u0105cych.</p> <pre><code>from django.db import migrations\n\n\ndef combine_names(apps, schema_editor):\n    # We can't import the Person model directly as it may be a newer\n    # version than this migration expects. We use the historical version.\n    Person = apps.get_model(\"yourappname\", \"Person\")\n    for person in Person.objects.all():\n        person.name = f\"{person.first_name} {person.last_name}\"\n        person.save()\n\n\nclass Migration(migrations.Migration):\n    dependencies = [\n        (\"yourappname\", \"0001_initial\"),\n    ]\n\n    operations = [\n        migrations.RunPython(combine_names),\n    ]\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#modele-danych","title":"Modele danych","text":"<p>W django mo\u017cemy w prosty spos\u00f3b stworzy\u0107 w\u0142asne struktury, kt\u00f3re potem w automatyczny spos\u00f3b b\u0119d\u0105 mog\u0142y by\u0107 mapowane na struktury znajduj\u0105ce si\u0119 w naszych klasycznych bazach danych. dokumnetacja</p> <p>Wszystkie modele bazuj\u0105 na klasie django.db.models.Model.</p> <pre><code>from django.db import models\n\nclass Person(models.Model):\n    first_name = models.CharField(max_length=30)\n    last_name = models.CharField(max_length=30)\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#definiowanie","title":"Definiowanie","text":"<p>Nowe modele powstaj\u0105 poprzez stworzenie klasy dziedzicz\u0105cej po bazowej klasie W klasie tej zdefiniowane przez nas pola s\u0105 rekordami. Mamy tutaj typowe rodzaje p\u00f3l takie jak:</p> <ul> <li>CharField - tekst dla kr\u00f3tkich/\u015brednich okre\u015blonych ci\u0105g\u00f3w znakowych (nicki adresy etc), wymaga okre\u015blenia <code>max_length</code>.</li> <li>TextField - nieustrukturyzowany tekst, kt\u00f3ry mo\u017ce by\u0107 r\u00f3\u017cnej d\u0142ugo\u015bci (np wpisy na blogu, etc.)</li> <li>IntegerField</li> <li>ForeignKey - klucz obcy link</li> <li>OneToOneField - relacja jeden do jednego link</li> <li>ManyToManyField - relacja typu wiele do wielu, pozwala na bezpo\u015brednie i po\u015brednie \u0142\u0105czenie z wieloma rekordami</li> <li>GeneratedField - pole generowane automatycznie przez baz\u0119 danych</li> <li>FileField - pole do przechowywania plik\u00f3w (somy\u015blnie przechowuje ono pliki w jakim\u015b folderze, nie z bazie). Z zarz\u0105dzeniem plikami wi\u0105\u017ce si\u0119 kilka dodatkowych zagadnie\u0144 link</li> <li>etc.</li> </ul> <p>Dla ka\u017cdego pola mo\u017cemy okre\u015bli\u0107 te\u017c dodatkowe parametry takie jak nullowalno\u015b\u0107, maksymaln\u0105 d\u0142ugo\u015b\u0107 (dla string\u00f3w), mo\u017cliwe dozwolone warto\u015bci itp. Mo\u017cemy te\u017c samodzielnie wybiera\u0107 pole b\u0119d\u0105ce kluczem (chocia\u017c na og\u00f3\u0142 te automatycznie dodawane wystarcza).</p> <p>Null</p> <p>Polami, kt\u00f3re \u0142atwo pomyli\u0107 s\u0105 <code>null</code> i <code>blank</code>. Pierwsze z nich okre\u015bla, czy pole w bazie danych mo\u017ce przyjmowa\u0107 warto\u015b\u0107 <code>null</code>, drugie czy pole mo\u017ce by\u0107 puste. Warto zwr\u00f3ci\u0107 uwag\u0119, \u017ce <code>null</code> jest zdefiniowane dla baz danych, a <code>blank</code> dla formularzy. Podsumowuj\u0105c: <code>null=False, blank=False</code> - domy\u015blna konfiguracja. Warto\u015b\u0107 jest zawsze wymagana <code>null=True, blank=True</code> - pole jest zawsze opcjonalne <code>null=False, blank=True</code> - pole jest wymagane w bazie danych, ale nie w formularzu. Jest to wykorzystywane np przy polach typu <code>string</code>, kt\u00f3re mog\u0105 by\u0107 puste, ale nie mog\u0105 przyjmowa\u0107 warto\u015bci <code>null</code> (aby w razie braku by\u0142 tam po prostu pusty string <code>\"\"</code>). Mo\u017cna tego u\u017cywa\u0107 tak\u017ce w wypadkach, kiedy chcemy samodzielnie generowa\u0107 zawarto\u015b\u0107 tego pola dopiero w ramach metody <code>save()</code>.  <code>null=True, blank=False</code> - pole jest opcjonalne w bazie danych, ale wymagane w formularzu. Mo\u017ce by\u0107 wykorzystywane np w wypadku p\u00f3l <code>ForeignKey</code>, kt\u00f3re mog\u0105 zosta\u0107 wyczyszczone np w wypadku usuni\u0119cia wskazywanego wcze\u015bniej obiektu.</p> <p>Na podstawie tych klas mo\u017cemy potem wygenerowa\u0107 tabele w baszej bazie (lub zaktualizowa\u0107 obecne, aby dopasowac) wykonuj\u0105c migracj\u0119 (z u\u017cyciek spryptu <code>manage.py</code>).</p> <p>W ka\u017cdej klasie mo\u017cemy dodatkowo okre\u015bli\u0107 klas\u0119 <code>Meta</code> pozwalaj\u0105c\u0105 okre\u015bli\u0107 dodatkowe informacje o naszym modelu, takie jak wymagania co do unikalno\u015bci p\u00f3l, tworzenie indeks\u00f3w ze z\u0142\u0105czenia dw\u00f3ch p\u00f3l etc, nazw\u0119 okiektu, lub stworzy\u0107 klas\u0119 abstrakcyjn\u0105. pe\u0142na lista opcji</p> <pre><code>from django.db import models\n\nclass Ox(models.Model):\n    horn_length = models.IntegerField()\n\n    class Meta:\n        ordering = [\"horn_length\"]\n        verbose_name_plural = \"oxen\"\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#metody","title":"Metody","text":"<p>Dodatkowo dla modelu moz\u0119my zdefiniowa\u0107 w\u0142asne metody. Warto zaimplementowa\u0107 chocia\u017cby <code>__str__()</code>, kt\u00f3ra jest u\u017cywana do wypisywania obiekt\u00f3e w panelu administratora, podobnie jak <code>get_absolute_url()</code>. Przydatny mo\u017ce by\u0107 te\u017c dekorator <code>@property</code>.</p> <p>W niekt\u00f3rych wypadkach mo\u017cemy te\u017c chcie\u0107 nadpisa\u0107 domy\u015blne metody takie jak <code>save()</code>, czy te\u017c <code>delete()</code>, gdy chcemy np zablokowa\u0107 usuwanie jakich\u015b element\u00f3w.</p> <pre><code>from django.db import models\n\nclass Blog(models.Model):\n    name = models.CharField(max_length=100)\n    tagline = models.TextField()\n\n    def save(self, *args, **kwargs):\n        if self.name == \"Yoko Ono's blog\":\n            return # Yoko shall never have her own blog!\n        else:\n            super().save(*args, **kwargs)  # Call the \"real\" save() method.\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#praca-z-modelami","title":"Praca z modelami","text":"<p>Ka\u017cda klasa ma artybut <code>objects</code>, jest obiekt klasy Manager. S\u0142u\u017cy on do wykonywania zapyta\u0144 do bazy.</p> <p>Przydatne metody do wykonywania zapyta\u0144:</p> <pre><code>People.objects.all()\nPeople.objects.filter(name=\"Jan\")\nPeople.objects.exclude(surname=\"Kowalski)\n\n# gdy chcemy uzyska\u0107 jeden wynik oraz wiemy, \u017ce taki wynik istnieje\n# je\u015bli nie istnieje to dostaniemy wyj\u0105tek Entry.DoesNotExist\nPeople.objects.get(pesel=12345678)\n\np1 = Poeple.objects.create(name=\"Marian\",surname=\"Nowak\") #stworzenie instancji i zapisanie modelu\np2 = People(name=\"Jan\",surname=\"Kowalski\")\np2.save() #zapisanie do bazy\n</code></pre> <p>Przyk\u0142adowe metody:</p> <ul> <li>create() - tworzy i natychmiast zapisuje obiekt w bazie danych</li> <li>save() r\u0119czne zapisywanie do bazy danych. Cz\u0119sto wykorzystywane, kiedy przy pierwszych prokach tworzenia u\u017cywamy konstruktora</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#filtrowanie","title":"Filtrowanie","text":"<p>Sposoby filtrowania nie ogarniczaj\u0105 si\u0119 do podawania warto\u015bci oczekiwanych. Mo\u017cemy te\u017c u\u017cywa\u0107 r\u00f3\u017cnych prefix\u00f3w. link argumenty w filtrach s\u0105 podawane wg specjalnej sk\u0142adni.</p> <pre><code>People.objects.filter(surname__startswith=\"Kowalski)\n</code></pre> <p>Filtry mo\u017cna te\u017c \u0142atwo ze sob\u0105 \u0142\u0105czy\u0107 zanim przejdziemy do wykonania zapytania wykorzystuj\u0105c klas\u0119 <code>Q</code>.</p> <p>Do \u0142\u0105czenia mo\u017cemy wykorzysta\u0107 operatory: <code>|=</code> (lub) oraz <code>&amp;=</code> (i).</p> <pre><code>from django.db.models import Q\n\nq = Q()\nif param_1 != 'all':\n    q &amp;= Q(param_1__name=param_1)\nif param_2 != 'all':\n    q &amp;= Q(param_2__name=param_2)\nclass_var = ClassName.objects.filter(q)\n\n#LUB\n\nq = {}\nif param_1 != 'all':\n    q.update({'param_1__name': param_1})\nif param_2 != 'all':\n    q.update({'param_2__name': param_2})\nclass_var = ClassName.objects.filter(**q)\n</code></pre> <p>Przy odpowiednim wykorzystaniu kluczy obcych mo\u017cna tak\u017ce wykonywa\u0107 proste filtry na \u0142\u0105czeniach. link. Przydaje si\u0119 tu argument <code>related_name</code>.</p> <pre><code>class Sessions(models.Model):\n    sessionId = models.AutoField(primary_key=True)\n\nclass Ip(models.Model):\n    ipId = models.AutoField(primary_key=True)\n\nclass Affiliation(models.Model):\n    affiliationId = models.AutoField(primary_key=True)\n    ip = models.ForeignKey(\"Ip\", null=False, db_column=\"ipId\")\n    session = models.ForeignKey(\n        \"Sessions\",\n        related_name=\"affiliation_session\"\n    )\n\n\n#potem mo\u017cna wo\u0142a\u0107\nSessions.objects.filter(affiliation_session__ip_id=X)\n</code></pre> <p>Na potrzeby filtrowania mo\u017cemy tak\u017ce wygenerowa\u0107 nowe zmienne  po kt\u00f3rych moz\u0119my szuka\u0107 i sortowa\u0107 u\u017cywaj\u0105c metody <code>annotate()</code>. link</p> <pre><code>from django.db.models import Count\n\n# The top 5 publishers, in order by number of books.\n&gt;&gt;&gt; pubs = Publisher.objects.annotate(num_books=Count(\"book\")).order_by(\"-num_books\")[:5]\n</code></pre> <p>TODO wi\u0119cej przyk\u0142ad\u00f3w by si\u0119 przyda\u0142o</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#praca-z-legacy-badami-danych","title":"Praca z legacy badami danych","text":"<p>Czasami mo\u017ce pojawi\u0107 si\u0119 potrzeba pracy z ju\u017c istniej\u0105cymi (starymi, lub zewn\u0119trznymi) bazamidanych. W takim wypadku mo\u017cemy zaimportowa\u0107 sobie tak\u0105 baz\u0119. django with legacy database</p> <p>Mo\u017cemy \u0142atwo wygenerowa\u0107 modele dla takiej bazy</p> <pre><code>python manage.py inspectdb &gt; models.py\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#widoki","title":"Widoki","text":"<p>link - Writing your first Django app, part 3</p> <p>The Django template language</p> <p>Widok jest typem strony internetowej generowany przez django. Widoki mog\u0105 by\u0107 zwyk\u0142ymi stronkami w HTMLu, mog\u0105 to by\u0107 te\u017c widoki na jakie\u015b dane. W wielu wypadkach pozwalaj\u0105 na swoiste zautomatyzowanie danej strony</p> <p>Widok mo\u017ce by\u0107 klas\u0105 lub funkcj\u0105 zwracaj\u0105c\u0105 JSON-a, lub stron\u0119 w HTMLu.</p> <pre><code>class UserLogin(LoginView):\n    template_name = 'sjopinie_app/login.html'\n</code></pre> <pre><code>from django.shortcuts import render\n\nfrom .models import Question\n\n\ndef index(request):\n    latest_question_list = Question.objects.order_by('-pub_date')[:5]\n    #kontekst pozwala na p\u00f3\u017aniejsze wykorzystywanie warto\u015bci w kodzie templatki\n    context = {'latest_question_list': latest_question_list}\n    return render(request, 'polls/index.html', context)\n</code></pre> <p>Przyk\u0142adowy schemat strony dla powy\u017cszego przyk\u0142adu</p> <pre><code>{% if latest_question_list %}\n&lt;ul&gt;\n  {% for question in latest_question_list %}\n  &lt;li&gt;&lt;a href=\"/polls/{{ question.id }}/\"&gt;{{ question.question_text }}&lt;/a&gt;&lt;/li&gt;\n  {% endfor %}\n&lt;/ul&gt;\n{% else %}\n&lt;p&gt;No polls are available.&lt;/p&gt;\n{% endif %}\n</code></pre> <p>Dzi\u0119ki przekazaniu warto\u015bci w kontek\u015bcie templatka mo\u017ce korzysta\u0107 z podanych warto\u015bci.</p> <p>Prostym sposobem na dopisywanie logiki/wymaga\u0144 do u\u017cywanych widok\u00f3w jest sotosowanie dekorator\u00f3w. View decorators. Dzi\u0119ki nim mo\u017cemy \u0142\u0105two doda\u0107 np wym\u00f3g zalogowania, lub zastrzec typy zapyta\u0144.</p> <pre><code>from django.views.decorators.http import require_http_methods\n\n\n@require_http_methods([\"GET\", \"POST\"])\ndef my_view(request):\n    # I can assume now that only GET or POST requests make it this far\n    # ...\n    pass\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#tablice-routingu-urlspy","title":"Tablice routingu <code>urls.py</code>","text":"<p>W pliku <code>urls.py</code> znajduj\u0105cym si\u0119 w folderze aplikacji mo\u017cemy zdefiniowa\u0107 jakie widoki maj\u0105 by\u0107 dost\u0119pne pod jakimi \u015bcie\u017ckami.</p> <pre><code>from django.urls import path\n\nfrom . import views\n\nurlpatterns = [\n    # ex: /polls/\n    path('', views.index, name='index'),\n    # ex: /polls/5/\n    path('&lt;int:question_id&gt;/', views.detail, name='detail'),\n    # ex: /polls/5/results/\n    path('&lt;int:question_id&gt;/results/', views.results, name='results'),\n    # ex: /polls/5/vote/\n    path('&lt;int:question_id&gt;/vote/', views.vote, name='vote'),\n]\n</code></pre> <p>Funkcja <code>path()</code> s\u0142u\u017cy do okre\u015blania \u015bcie\u017cki oraz funkcji, kt\u00f3ra ma je przetwarza\u0107. </p> <p><code>path(route, view, kwargs=None, name=None)</code> Pierwszy argument <code>route</code> okre\u015bla \u015bcie\u017ck\u0119 wraz z parametrami, kt\u00f3re mog\u0105 by\u0107 przekazywane do funkcji widoku. Dok\u0142adniejsze informacje znajduj\u0105 si\u0119 tutaj</p> <pre><code>from django.urls import path\n\nfrom . import views\n\nurlpatterns = [\n    path(\"blog/\", views.page),\n    path(\"blog/page&lt;int:num&gt;/\", views.page),\n]\n\n# View (in blog/views.py)\ndef page(request, num=1):\n    # Output the appropriate page of blog entries, according to num.\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#panel-administratora","title":"Panel Administratora","text":"<p>Og\u00f3lny tutorial nt panelu admina, druga cz\u0119\u015b\u0107 tutoriala.</p> <p>Jedn\u0105 z funkcji Django u\u0142atwiaj\u0105cych development jest automatycznie generowany panel administracyjny. Dzi\u0119ki niemu mo\u017cemy zarz\u0105dza\u0107 naszymi danymi bez konieczno\u015bci pisania dodatkowych widok\u00f3w.</p> <p>Aby m\u00f3c korzysta\u0107 z panelu administracyjnego musimy zarejestrowa\u0107 nasze modele w pliku <code>admin.py</code> znajduj\u0105cym si\u0119 w folderze aplikacji.</p> <pre><code>from django.contrib import admin\n\nfrom .models import Question\n\nadmin.site.register(Question)\n</code></pre> <p>Wtedy otrzymamy podstawowy widok dla naszego modelu, jednak mo\u017cemy go dostosowa\u0107 do naszych potrzeb. Mo\u017cemy dodawa\u0107 nowe widoki, zmienia\u0107 wygl\u0105d, dodawa\u0107 filtry, czy te\u017c zmienia\u0107 zachowanie. Wykorzystujemy do tego klas\u0119 dziedzicz\u0105c\u0105 po <code>admin.ModelAdmin</code>.</p> <pre><code>from django.contrib import admin\n\nfrom .models import Question\n\nclass QuestionAdmin(admin.ModelAdmin):\n    fields = ['pub_date', 'question_text']\n\nadmin.site.register(Question, QuestionAdmin)\n</code></pre> <p>Cz\u0119sto edytowane pola dla tej klasy to:</p> <ul> <li><code>fields</code> - okre\u015bla jakie pola maj\u0105 by\u0107 wy\u015bwietlane w panelu administracyjnym</li> <li><code>extra_kwargs</code> - pozwala na dodanie dodatkowych argument\u00f3w dla konstruktor\u00f3w poszczeg\u00f3lnych p\u00f3l link</li> <li><code>list_display</code> - okre\u015bla jakie kolumny maj\u0105 by\u0107 wy\u015bwietlane w zbiorczej li\u015bcie obiekt\u00f3w</li> <li><code>list_filter</code> - okre\u015bla jakie filtry maj\u0105 by\u0107 dost\u0119pne</li> <li><code>search_fields</code> - okre\u015bla jakie pola maj\u0105 by\u0107 u\u017cywane do wyszukiwania (nad list\u0105 b\u0119dzie wyszukiwarka, kt\u00f3ra mo\u017ce korzysta\u0107 z tych p\u00f3l)</li> <li><code>readonly_fields</code> - okre\u015bla pola tylko do odczytu (dodatkowo mo\u017cna opisa\u0107 funkcje, kt\u00f3re je uzyskuj\u0105).   <pre><code>class PersonAdmin(admin.ModelAdmin):\n    readonly_fields = [\"address_report\"]\n\n    # description functions like a model field's verbose_name\n    @admin.display(description=\"Address\")\n    def address_report(self, instance):\n        return instance.address\n</code></pre></li> </ul> <p>Panel administratora pozwala tak\u017ce wykonywa\u0107 r\u00f3\u017cne akcje na obiektach z widoku listy. Mo\u017cemy je dodawa\u0107 samodzielnie, lub korzysta\u0107 z gotowych akcji. link</p> <pre><code>from django.contrib import admin\nfrom .models import Person\n\nclass PersonAdmin(admin.ModelAdmin):\n    list_display = ('name', 'age', 'is_adult')\n    actions = ['make_adult']\n\n    @admin.action(description='Make selected people adults')\n    def make_adult(self, request, queryset):\n        queryset.update(is_adult=True)\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#rest-api","title":"REST API","text":"<p>Do pracy z API RESTowym zaleca si\u0119 u\u017cycie specjalnego frameworka https://www.django-rest-framework.org/tutorial/quickstart/</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#serializacja","title":"Serializacja","text":"<p>link</p> <p>Serializacja to proces konwertowania danych z modelu na format, kt\u00f3ry mo\u017ce by\u0107 \u0142atwo przes\u0142any przez sie\u0107. W Django REST Framework serializatory s\u0105 u\u017cywane do konwersji obiekt\u00f3w modelu na JSON, XML lub inny format, kt\u00f3ry mo\u017ce by\u0107 \u0142atwo przes\u0142any przez sie\u0107.</p> <pre><code>from rest_framework import serializers\n\n#podstawowy serializator\nclass UserSerializer(serializers.Serializer):\n    email = serializers.EmailField()\n    username = serializers.CharField(max_length=100)\n\nclass SubjectSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Subject\n        fields = ['name', 'ects', 'semester']\n</code></pre> <p>Wyr\u00f3\u017cniamy kilka typ\u00f3w serializator\u00f3w:</p> <ul> <li><code>ModelSerializer</code> - najprostszy spos\u00f3b na stworzenie serializatora, kt\u00f3ry b\u0119dzie dzia\u0142a\u0142 z modelem, a w wypadku relacji z innymi modelami b\u0119dzie podawa\u0142 ich klucze</li> <li><code>HyperlinkedModelSerializer</code> - podobny do powy\u017cszego, ale zamiast kluczy podaje linki do tych modeli</li> <li>Serializer - pozwala na pe\u0142n\u0105 kontrol\u0119 nad tym, jak dane s\u0105 serializowane (tutaj trzeba r\u0119cznie podawa\u0107 pola)</li> </ul> <p>Serializatory mog\u0105 by\u0107 u\u017cywane do serializacji pojedynczych obiekt\u00f3w, list obiekt\u00f3w, czy te\u017c do walidacji danych.  Implementuj\u0105 one metody <code>create()</code>, <code>update()</code>, <code>save()</code>, <code>delete()</code>, <code>validate()</code>, <code>to_representation()</code>, <code>to_internal_value()</code>, <code>is_valid()</code>, <code>errors</code> oraz <code>data</code>. Modyfikacja tych metod pozwala na dostosowanie serializatora do naszych potrzeb.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#podklasa-meta","title":"Podklasa Meta","text":"<p>Do okre\u015blania w\u0142a\u015bciwo\u015bci tych serializator\u00f3w mo\u017cna u\u017cy\u0107 wewn\u0119trznej klasy <code>Meta</code>. Mo\u017ce zawiera\u0107 ona takie pola jak:</p> <ul> <li><code>model</code> - model, kt\u00f3ry ma by\u0107 serializowany</li> <li><code>fields</code> - lista p\u00f3l, kt\u00f3re maj\u0105 by\u0107 serializowane (np. <code>fields = '__all__'</code> po prostu przekazuje wszystkie pole z modelu)</li> <li><code>exclude</code> - lista p\u00f3l, kt\u00f3re maj\u0105 by\u0107 pomini\u0119te</li> <li><code>read_only_fields</code> - lista p\u00f3l, kt\u00f3re maj\u0105 by\u0107 tylko do odczytu</li> <li><code>depth</code> - Je\u015bli chcemy otrzyma\u0107 pe\u0142n\u0105 reprezentacj\u0119 dla relacji (zamiast samego klucz lub linku) mo\u017cemy u\u017cy\u0107 <code>depth</code> w klasie Meta, albo samodzielnie poda\u0107 pole (np. <code>user = UserSerializer</code>).</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#reczne-przypisywanie-pol","title":"R\u0119czne przypisywanie p\u00f3l","text":"<p>W ramach klas serializuj\u0105cych takich jak ModelSerializer mo\u017cemy r\u0119cznie okre\u015bla\u0107 niekt\u00f3re pola korzystaj\u0105c klas typu <code>Field</code>. Jest sporo p\u00f3l dla typowych dla poszczeg\u00f3lnych typ\u00f3w danych, jak np <code>CharField</code>, <code>IntegerField</code> etc.</p> <p>Przed u\u017cyciem warto przejrze\u0107 wsp\u00f3lne argumenty dla tych klas. Jednym z bardziej u\u017cytecznych jest tutaj np argument <code>source</code>, kt\u00f3ry pozwala na okre\u015blenie z jakiego pola tego lub powi\u0105zanego modelu ma by\u0107 pobierana warto\u015b\u0107.</p> <pre><code>class CommentSerializer(serializers.ModelSerializer):\n    full_name = serializers.CharField(source='user.full_name') # pobieranie warto\u015bci nazwy od u\u017cytkownika, kt\u00f3ry wrzuci\u0142 komentarz\n    class Meta:\n        model = Comment\n        fields = ['id', 'full_name', 'content']\n</code></pre> <p>Warte uwagi s\u0105 takie klasy jak:</p> <ul> <li>serializers.SerializerMethodField - pozwala na pobranie warto\u015bci pola z metody   <pre><code>  class UserSerializer(serializers.ModelSerializer):\n  days_since_joined = serializers.SerializerMethodField() #warto\u015b\u0107 pobierana z metody get_ + nazwa pola\n\n  class Meta:\n      model = User\n      fields = '__all__'\n\n  def get_days_since_joined(self, obj):\n      return (now() - obj.date_joined).days\n</code></pre></li> <li>serializers.ReadOnlyField - pole tylko do odczytu automarycznie pobierane z modelu. Jest ono domy\u015blnie u\u017cywane przez ModelSerializer kiedy pracujemy z atrybutami (np. polami klasy, kt\u00f3re nie s\u0105 modelem a jedynie maj\u0105 warto\u015b\u0107 <code>property</code>), a nie elementami modelu.</li> </ul>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#widoki-dla-resta","title":"Widoki dla RESTa","text":"<p>U\u017cywanie widok\u00f3w pozwala \u0142atwo zautomatyzowa\u0107 wy\u015bwietlanie danych. Za jednym zamachem mo\u017cemy wystawi\u0107 API reaguj\u0105ce na wszystkie typy zapyta\u0144 (GET, PUT, POST, DELETE)</p> <p>Mo\u017cna do tego wykorzysta\u0107 na przyk\u0142ad w\u0142asn\u0105 klas\u0119 dziedzicz\u0105c\u0105 po <code>viewsets.ModelViewSet</code>. Dzi\u0119ki temu dostaniemy nie tylko \"go\u0142e\" API, lecz tak\u017ce django wygeneruje interfejs sieciowy do korzystania z tego API, w razie zgdyby\u015bmy otowrzyli go w przegl\u0105darce.</p> <pre><code>from rest_framework import viewsets\n\n#prosty widok na list\u0119 przedmiot\u00f3w posortowanych alfabetycznie\nclass SubjectViewSet(viewsets.ModelViewSet):\n    queryset = Subject.objects.all().order_by('name')\n    serializer_class = SubjectSerializer\n\n# tu ju\u017c nieco bardziej skomplikowany widok, reaguj\u0105cy na podawane parametry\n# Przyk\u0142adowa \u015bcie\u017cka: lecturers/?name=Marian\nclass LecturerViewSet(viewsets.ModelViewSet):\n    serializer_class = LecturerSerializer\n\n    def get_queryset(self):\n        lecturer_name = self.request.query_params.get('name')\n        queryset = Lecturer.objects.filter(name=lecturer_name)\n        return queryset\n</code></pre> <p>Jednak nie ka\u017cdy widok musi odzwierciedla\u0107 jak\u0105\u015b konkretn\u0105 klas\u0119. Mo\u017cemy te\u017c stworzy\u0107 widok, kt\u00f3ry b\u0119dzie reagowa\u0142 na konkretne zapytania. DO tego u\u017cywamy klasy <code>APIView</code> z modu\u0142u <code>rest_framework.views</code>.</p> <pre><code>from rest_framework import views\nfrom rest_framework.response import Response\n\nclass ExampleView(views.APIView):\n    def get(self, request, format=None):\n        content = {\n            'status': 'request was permitted'\n        }\n        return Response(content)\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#dodawanie-widokow-do-sciezek","title":"Dodawanie widok\u00f3w do \u015bcie\u017cek","text":"<p>Widoki REST-owe dodajemy do <code>urlpatterns</code> wykorzystuj\u0105c routery.</p> <pre><code>from rest_framework import routers\n\nrouter = routers.SimpleRouter()\nrouter.register(r'users', UserViewSet)\nrouter.register(r'accounts', AccountViewSet)\nurlpatterns = router.urls\n</code></pre> <p>Pozwalaj\u0105 one na automatyczne generowanie wielu endpoint\u00f3w dla wybranego widoku.</p> <p>Dodatkowo nadal mo\u017cemy tutaj korzysta\u0107 z parametr\u00f3w w \u015bcie\u017ckach</p> <pre><code>class ClientRequests(ModelsViewSet):\n    serializer_class = serializers.ClientRequestSerializer\n\n   def get_queryset(self):\n      return models.ClientRequest.objects.filter(cliend_id=self.kwargs.get('client_id')\n\n## w pliku urls\nrouter.register(\n    r'(?P&lt;client_id&gt;\\d+)/requests',\n    views.ClientRequests,\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#wiecej-o-widokach-dla-modeli-modelviewset","title":"Wi\u0119cej o widokach dla modeli ModelViewSet","text":"<p>Dla widok\u00f3w takich jak <code>ModelViewSet</code> lub <code>ReadOnlyModelViewSet</code> mo\u017cemy wyr\u00f3\u017cni\u0107 kilka rodzaj\u00f3w akcji: </p> <ul> <li>list - zwraca list\u0119 obiekt\u00f3w</li> <li>create - tworzy nowy obiekt</li> <li>retrieve - zwraca pojedynczy obiekt</li> <li>update - aktualizuje obiekt</li> <li>partial_update - aktualizuje cz\u0119\u015b\u0107 obiektu</li> <li>destroy - usuwa obiekt</li> </ul> <p>Domy\u015blnie te akcje s\u0105 przypisane do odpowiednich metod HTTP (GET, POST, PUT, PATCH, DELETE). Mo\u017cemy je jednak nadpisa\u0107, lub doda\u0107 w\u0142asne akcje.</p> <pre><code>from rest_framework import viewsets\nfrom rest_framework.response import Response\n\nclass SubjectViewSet(viewsets.ModelViewSet):\n    queryset = Subject.objects.all().order_by('name')\n    serializer_class = SubjectSerializer\n\n    def list(self, request):\n        queryset = self.get_queryset()\n        serializer = SubjectSerializer(queryset, many=True)\n        return Response(serializer.data)\n\n    def create(self, request):\n        # Do something special here\n        return super().create(request)\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#filtrowanie-widokow","title":"Filtrowanie widok\u00f3w","text":"<p>R\u0119czne pisanie queryset\u00f3w dla poszczeg\u00f3lnych widok\u00f3w mo\u017ce by\u0107 nu\u017c\u0105ce. U\u017cywaj\u0105c niekt\u00f3rych mechanizm\u00f3w mo\u017cemy zautomatyzowa\u0107 chocia\u017cby filtrowanie danych. Uzywa si\u0119 do tego biblioteki django-filter. Charakteryzuje si\u0119 ona min. dobr\u0105 integracj\u0105 z REST frameworkiem.</p> <pre><code>import django_filters\nfrom django_filters import rest_framework as filters\n\nclass ProductFilter(django_filters.FilterSet):\n    name = django_filters.CharFilter(lookup_expr='iexact')\n\n    class Meta:\n        model = Product\n        fields = ['price', 'release_date']\n\nclass ProductViewSet(viewsets.ModelViewSet):\n    queryset = Product.objects.all()\n    serializer_class = ProductSerializer\n    filterset_class = ProductFilter\n    filter_backends = (filters.DjangoFilterBackend,) # podpinanie widoku pod bibliotek\u0119\n</code></pre> <p>Tak przygotowany widok b\u0119dzie reagowa\u0142 na parametry przekazywane w zapytaniu. W powy\u017cszym przyk\u0142adzie je\u015bli podamy parametr <code>name</code> to zwr\u00f3ci nam tylko te produkty, kt\u00f3re maj\u0105 dok\u0142adnie tak\u0105 nazw\u0119. Opcje filtrowania pojawi\u0105 si\u0119 tak\u017ce w dokumentacji OpenAPI.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#openapi-schema","title":"OpenAPI Schema","text":"<p>OpenAPI jest standardem dokumentowania API RESTowych. W naszym projekcie Django mo\u017cemy \u0142atwo go generowa\u0107 u\u017cywaj\u0105c generatora specyfikacji OpenAPI oraz jakiego\u015b UIa. Mo\u017cna u\u017cy\u0107 tutaj generowania w ramach REST frameworka lub u\u017cy\u0107 oddzielnej biblioteki, kt\u00f3ra to zrobi, takiej jak drf-spectacular.</p> <p>Po wygenerowaniu schematu endpoint\u00f3w mo\u017cna u\u017cy\u0107 SWAGGER-UI do wy\u015bwietlenia ich w wygodny i interaktywny spos\u00f3b. </p> <p>Maj\u0105c istniej\u0105cy plik <code>openapi.json</code> mo\u017cemy go \u0142atwo wy\u015bwietli\u0107 w przegl\u0105darce.</p> <p>Przyk\u0142\u0105dowa komenda dockera do uruchomienia <code>swagger-ui</code> dla danego pliku:</p> <pre><code>docker run -p 80:8080 -e SWAGGER_JSON=/folder/openapi.json -v /tmp/tmp:/folder swaggerapi/swagger-ui\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#drf-spectacular","title":"DRF-spectacular","text":"<p>U\u017cycie tej biblioteki jest dok\u0142adnie opisane w dokumentacji</p> <p>Standardowe u\u017cycie opiera si\u0119 na u\u017cyciu dekoratora @extend_schema:</p> <p>Dla zwyk\u0142ego endpointa b\u0119d\u0105cego funkcj\u0105 trzeba doda\u0107 jeszcze dekorator @api_view</p> <pre><code>from enum import Enum\n\n\nfrom django.http import JsonResponse\n\nfrom rest_framework import serializers\nfrom rest_framework.decorators import api_view\nfrom rest_framework.request import HttpRequest\n\nfrom drf_spectacular.utils import extend_schema, inline_serializer\n\n\nclass Status(Enum):\n    UPLOADING = \"UPLOADING\"\n    FINISHED = \"FINISHED\"\n    ERROR = \"ERROR\"\n\n\n@extend_schema(\n    methods=[\"GET\"],\n    responses={\n        200: inline_serializer(\n            \"USB status\",\n            {\n                \"status\": serializers.ChoiceField(\n                    choices=[x.name for x in list(Status)]\n                )\n            },\n        ),\n    },\n)\n@api_view([\"GET\"]) # MUSI by\u0107 poni\u017cej extend schema, aby z metody zrobi\u0107 widok\ndef status(request: HttpRequest, *args, **kwargs) -&gt; JsonResponse:\n    #implementacja\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#testy","title":"Testy","text":"<p>Django mo\u017ce by\u0107 testowane automatycznie z wykorzystaniem r\u00f3\u017cnych framework\u00f3w do testowania, jednak domy\u015blnym jest unittest. link</p> <p>Domy\u015bln\u0105 klas\u0105 do testowania jest django.test.TestCase, kt\u00f3re jest subklas\u0105 unittest.TestCase.</p> <pre><code>from django.test import TestCase\nfrom myapp.models import Animal\n\n\nclass AnimalTestCase(TestCase):\n    def setUp(self):\n        Animal.objects.create(name=\"lion\", sound=\"roar\")\n        Animal.objects.create(name=\"cat\", sound=\"meow\")\n\n    def test_animals_can_speak(self):\n\"\"\"Animals that can speak are correctly identified\"\"\"\n        lion = Animal.objects.get(name=\"lion\")\n        cat = Animal.objects.get(name=\"cat\")\n        self.assertEqual(lion.speak(), 'The lion says \"roar\"')\n        self.assertEqual(cat.speak(), 'The cat says \"meow\"')\n</code></pre> <p>Testy uruchamiane s\u0105 za pomoc\u0105 <code>manage.py test</code>.</p> <p>Na potrzeby test\u00f3w tworzona jest tymczasowa testowa baza danych, kt\u00f3ra jest kasowana po zako\u0144czeniu test\u00f3w. Mo\u017cliwe jest jednak zachowanie bazy danych po testach. <code>test --keepdb</code>.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#inne","title":"Inne","text":""},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#praca-z-uzytkownikami","title":"Praca z u\u017cytkownikami","text":"<p>Django pozwala w\u0142atwy spos\u00f3b doda\u0107 uzytkownik\u00f3w do naszej aplikacji. link</p> <p>Mo\u017cemy tutaj uzy\u0107 gotowego modelu <code>django.contrib.auth.models.User</code>. Je\u015bli ten obiekt nam nie pasuje, zawsze mo\u017cemy go przystosowa\u0107 do swoich potrzeb.</p> <p>Do zalogowania uzytkownika z pomoc\u0105 w\u0142anego formularza mo\u017cemy wykorzysta\u0107 metod\u0119 authenticate.</p> <pre><code>from django.contrib.auth import authenticate\nuser = authenticate(username='john', password='secret')\nif user is not None:\n    # A backend authenticated the credentials\nelse:\n    # No backend authenticated the credentials\n</code></pre> <p>Potem b\u0119dziemy mogli sprawdza\u0107 przychodz\u0105ce \u017c\u0105dania pod k\u0105tem tego, czy pochodz\u0105 od jakiego\u015b u\u017cytkownika.</p> <pre><code>if request.user.is_authenticated:\n    # Do something for authenticated users.\n    ...\nelse:\n    # Do something for anonymous users.\n    ...\n</code></pre> <p>Dla prostego zastrzegania tre\u015bci tylko dla u\u017cytkownik\u00f3w mo\u017cemy u\u017cywa\u0107 dekorator\u00f3w.</p> <pre><code># dla funkcji\nfrom django.contrib.auth.decorators import login_required\n\n@login_required\ndef my_view(request):\n    ...\n\n\n#dla klas widok\u00f3w\nfrom django.contrib.auth.mixins import LoginRequiredMixin\n\nclass MyView(LoginRequiredMixin, View):\n    login_url = '/login/'\n    redirect_field_name = 'redirect_to'\n\n# dla innych wypadk\u00f3w np w serializerze\nself.context['request'].user\n</code></pre> <p>Mo\u017cemy tak\u017ce wprowadza\u0107 zmiany bezpo\u015brednio na poziomie szablon\u00f3w.</p> <pre><code>{% if user.is_authenticated %}\n&lt;h1&gt;Witaj {{user.get_username}}&lt;/h1&gt;\n{% else %}\n&lt;h1&gt;Witaj nieznajomy&lt;/h1&gt;\n{% endif %}\n</code></pre> <p>U\u017cywaj\u0105c tych mechanizm\u00f3w mo\u017cemy tak\u017ce tworzy\u0107 grupy u\u017cytkownik\u00f3w z r\u00f3\u017cnymi uprawnieniami.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#formularze","title":"Formularze","text":"<p>Formularze s\u0105 jednym z najpopularniejszych sposob\u00f3w na zbieranie danych od u\u017cytkownik\u00f3w. Django jest wyposa\u017cone w kilka mechanizm\u00f3w wspomagaj\u0105cych prac\u0119 z nimi. (om\u00f3wienie formularzy w django, dokumentacja mozilli)</p> <p>Formularze mo\u017cemy tworzy\u0107 r\u0119cznie umieszczasj\u0105c je bezpo\u015brednio w schemacie strony</p> <pre><code>&lt;form action=\"/your-name/\" method=\"post\"&gt;\n  &lt;label for=\"your_name\"&gt;Your name: &lt;/label&gt;\n  &lt;input\n    id=\"your_name\"\n    type=\"text\"\n    name=\"your_name\"\n    value=\"{{ current_name }}\"\n  /&gt;\n  &lt;input type=\"submit\" value=\"OK\" /&gt;\n&lt;/form&gt;\n</code></pre> <p>Mo\u017cemy te\u017c do tego wykorzysta\u0107 klas\u0119 Form, kt\u00f3ra sama wygeneruje nam formularz.</p> <pre><code>from django import forms\n\nclass NameForm(forms.Form):\n    your_name = forms.CharField(label='Your name', max_length=100)\n</code></pre> <p>Nast\u0119pnie \u0142\u0105czymy ten formularz z widokiem, kt\u00f3ry go obs\u0142uguje.(W przyk\u0142adzie poni\u017cej \u017c\u0105danie jest obs\u0142ugiwane przez ten sam widok, kt\u00f3ry udost\u0119pnia formularz)</p> <pre><code>from django.http import HttpResponseRedirect\nfrom django.shortcuts import render\n\nfrom .forms import NameForm\n\ndef get_name(request):\n    # if this is a POST request we need to process the form data\n    if request.method == 'POST':\n        # create a form instance and populate it with data from the request:\n        form = NameForm(request.POST)\n        # check whether it's valid:\n        if form.is_valid():\n            # process the data in form.cleaned_data as required\n            # ...\n            # redirect to a new URL:\n            return HttpResponseRedirect('/thanks/')\n\n    # if a GET (or any other method) we'll create a blank form\n    else:\n        form = NameForm()\n\n    return render(request, 'name.html', {'form': form})\n</code></pre> <p>Wykorzystany schemat <code>name.html</code>:</p> <pre><code>&lt;form action=\"/your-name/\" method=\"post\"&gt;\n  {% csrf_token %} {{ form }}\n  &lt;input type=\"submit\" value=\"Submit\" /&gt;\n&lt;/form&gt;\n</code></pre> <p><code>csrf_token</code> jest sposobem na u\u017cycie ochrony przeciwko CSRF</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#kolejkowanie-zadan","title":"Kolejkowanie zada\u0144","text":"<p>Jednym z brakuj\u0105cych element\u00f3w w Django jest przetwarzanie wi\u0119kszych zada\u0144 w tle. Mo\u017cemy to zrobi\u0107 z u\u017cyciem biblioteki Celery b\u0105d\u017a Django Q2 (Q1 jest porzucone).</p> <p>Prostszym z tych rozwi\u0105za\u0144 jest Django Q2, kt\u00f3re pozwala na \u0142atwe dodawanie zada\u0144 do kolejki, a tak\u017ce na ich monitorowanie. Poza tym jest dobrze zintegrowane z Django.</p> <p>Po dodaniu Django Q2 do projektu, mo\u017cemy doda\u0107 zadanie do kolejki w prosty spos\u00f3b.</p> <pre><code>from django_q.tasks import async_task, schedule\n\n# do kolejki zostanie dodane zadanie, kt\u00f3re zostanie wykonane w tle\nasync_task('myapp.tasks.my_task', 10) #TODO sprawdzenie czy to dobre API\n\n# do bazy danych zostanie dodane zadanie, kt\u00f3re zostanie wykonane za 10 sekund przez oddzielnego workera\n# uruchamianego za pomoc\u0105 `python manage.py qcluster`\nschedule('myapp.tasks.my_task', 10) \n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#sygnay","title":"Sygna\u0142y","text":"<p>Sygna\u0142y w Django pozwalaj\u0105 na reagowanie na r\u00f3\u017cne zdarzenia w trakcie dzia\u0142ania aplikacji. link</p> <p>Mo\u017cemy je stosunkowo \u0142atwo spi\u0105\u0107 z r\u00f3\u017cnymi zdarzeniami w ramach systemu. Mo\u017cemy np. reagowa\u0107 na tworzenie nowego u\u017cytkownika, czy te\u017c na zapisanie nowego obiektu w bazie danych.</p> <pre><code>@receiver([post_save], sender=User):\ndef user_created(sender, instance, created, **kwargs):\n    if created:\n        print(f\"U\u017cytkownik {instance.username} zosta\u0142 stworzony\")\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#praca-z-cache","title":"Praca z cache","text":"<p>Django pozwala na \u0142atwe korzystanie z cache. link</p> <p>TODO</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_django/#praca-z-plikami","title":"Praca z plikami","text":"<p>TODO - opis sposobu zarz\u0105dzania plikami oraz ich przesy\u0142ania na serwer przez klient\u00f3w.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_fastapi/","title":"FastAPI","text":"<p>Jest to jeden z mikroframework\u00f3w pythonowych wykorzystywanych przy apkach webowych. Jego zalet\u0105 na tle podobnych bibliotek typu flask jest automatyczne generowanie dokumentacji oraz automatyczne sprawdzanie i walidacja danych.</p> <p>link</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_fastapi/#podstawy","title":"Podstawy","text":"<pre><code>from typing import Optional\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, slowo: Optional[str] = None):\n\"\"\"\n    przyjmujemy zapytanie i zwracamy je jako json\n    np /items/8?q=zbyszek\n    \"\"\"\n    return {\"item_id\": item_id, \"slowo\": slowo}\n</code></pre> <p>Aby uruchomi\u0107 powu\u017cszy kod (plik <code>main.py</code>) nale\u017cy u\u017cy\u0107 komendy:</p> <pre><code>uvicorn main:app --reload\n# main - nazwa pliku\n# app - obiekt typu FastAPI\n# --reload - restartuje serwer po zmianach w kodzie\n</code></pre> <p>Dodatkowo pod \u015bcie\u017ck\u0105 <code>/docs</code> dost\u0119pna jest dokumentacja u\u017cytych API.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_fastapi/#definiowanie-modeli","title":"Definiowanie modeli","text":"<p>Modele mo\u017cna definiowa\u0107 z wykorzystaniem biblioteki pytandic (tutorial od bulldogjobs).</p> <pre><code>from typing import Optional\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Optional[bool] = None\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_fastapi/#serwowanie-plikow-html","title":"Serwowanie plik\u00f3w HTML","text":"<p>FastAPI mo\u017ce by\u0107 \u0142\u0105czone z ka\u017cdym silnikiem do generowania plik\u00f3w HTML ze schemat\u00f3w. Najpopularniejszym wyborem jest tutaj Jinja2 (przyk\u0142ad u\u017cycia).</p> <p>Je\u015bli nie potrzebujemy niczego tak skomplikowanego i wystarcz\u0105 nam proste, r\u0119cznie napisane pliki HTML to wystarczy wystawi\u0107 je jako pliki statyczne lub jako pojedyncze pliki.</p> <pre><code>from fastapi import FastAPI\nfrom fastapi.staticfiles import StaticFiles\n\napp = FastAPI()\n\napp.mount(\"/static\", StaticFiles(directory=\"static\"), name=\"static\")\n\n#lub\n@app.get(\"/\")\nasync def read_index():\n    return FileResponse('index.html')\n</code></pre>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_fastapi/#bazy-danych","title":"Bazy danych","text":"<p>FastAPI nie jest zwi\u0105zane z \u017cadn\u0105 bibliotek\u0105 do baz danych. Mamy tutaj du\u017c\u0105 dowolno\u015b\u0107. Dla przyk\u0142adu w oficjalnej dokumentacji pokazano przyk\u0142ad u\u017cycia sla SQLAlchemy. Mo\u017cna te\u017c u\u017cy\u0107 Peewee.</p> <p>LINK DO MOJEGO TUTORIALA SQLALCHEMY</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_hugo/","title":"Hugo","text":"<p>Hugo is a static site generator written in Go. It is designed to be fast and easy to use, and it can generate a static website from source files written in Markdown, HTML, and other formats.</p> <p>The structure of a Hugo project typically includes the following elements:</p> <ul> <li>Configuration file: The configuration file (usually named config.toml, config.yaml, or config.json) contains settings for the site, such as the title, author, and base URL.</li> <li>Content: The content for the site is stored in the content directory. It is organized into subdirectories by content type, such as post for blog posts and page for standalone pages. Each content file contains front matter at the top, which is a block of metadata in YAML format that specifies the title, date, and other attributes of the content. The content body follows the front matter, and it can be written in Markdown, HTML, or another format.</li> <li>Layout: The layout for the site is stored in the layouts directory. It is organized into subdirectories by content type, and it includes templates for rendering the content. The templates use the Go programming language's template syntax to specify the layout of the content and to insert dynamic elements such as the title and body of the content.</li> <li>Static assets: The static assets for the site, such as images, CSS files, and JavaScript files, are stored in the static directory.</li> <li>Public: The generated static website is output to the public directory.</li> </ul> <p>In addition to these core elements, a Hugo project may also include custom templates, shortcodes, and other customizations that allow you to tailor the site to your specific needs.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_hugo/#dodawanie-nowego-typu-contentu","title":"Dodawanie nowego typu contentu","text":"<p>To define a new type of content called \"product\" in a Hugo project, you will need to follow these steps:</p> <ol> <li>Create a new directory in the content directory to store the product content. For example, you can create a product directory:</li> </ol> <pre><code>content\n\u2514\u2500\u2500 product\n</code></pre> <ol> <li>In the configuration file, add a new section called product to define the product content type. For example:</li> </ol> <pre><code>[product]\ntitle = \"Product\"\nsingular = \"product\"\nplural = \"products\"\n</code></pre> <ol> <li>Create a template for rendering product content in the layouts directory. For example, you can create a product directory and a single.html file in it:</li> </ol> <pre><code>layouts\n\u2514\u2500\u2500 product\n    \u2514\u2500\u2500 single.html\n</code></pre> <ol> <li>In the single.html file, use the Go programming language's template syntax to specify the layout for a single product page. You can use placeholders to insert dynamic elements such as the title and body of the product. For example:</li> </ol> <pre><code>&lt;h1&gt;{{ .Title }}&lt;/h1&gt;\n\n&lt;div&gt;{{ .Content }}&lt;/div&gt;\n</code></pre> <ol> <li>Create a new content file for each product you want to add to the site. The content file should be saved in the product directory you created in step 1, and it should include front matter at the top to specify the title, date, and other attributes of the product. For example:</li> </ol> <pre><code>content\n\u2514\u2500\u2500 product\n    \u2514\u2500\u2500 my-product.md\n</code></pre> <pre><code>---\ntitle: \"My Product\"\ndate: 2021-01-01\narticle_thumbnail: \"/static/image1.png\"\n---\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\n</code></pre> <p>That's it! You have now created a new content type called \"product\" and added a product to your Hugo site. You can repeat these steps to add more products to the site.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_hugo/#hugo-templates","title":"Hugo templates","text":"<p>Hugo uses basic Go's templating libraries Source.</p> <p>All og Go template variables and functions are available within <code>{{}}</code></p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_hugo/#access-variable","title":"Access variable","text":"<p>All of variables are available starting with dot. Like <code>{{.Title}}</code>. There are a lot of basic variables available on most of the pages: list</p> <p>In case of non-standard variables (like the ones defined in target files) we use parameter <code>.Params</code></p> <p>For file projekt.md:</p> <pre><code>---\ntitle: \"My Product\"\narticle_thumbnail: \"/static/image1.png\"\n---\n</code></pre> <p>We can access variable article_thumbnail using <code>{{ .Params.article_thumbnail }}</code>.</p>"},{"location":"Web%C3%B3wka%F0%9F%8C%8D/9_hugo/#functions","title":"Functions","text":"<p>We can also write some basic code using functions <code>{{ FUNCTION ARG1 ARG2 .. }}</code>.</p> <p>.....</p>"}]}